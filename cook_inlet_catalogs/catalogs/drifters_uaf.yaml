aliases:
  CIDrifter0001Y2012_MicrostarSurfaceAt1M: CIDrifter0001Y2012_MicrostarSurfaceAt1M
  CIDrifter0002Y2012_MicrostarSurfaceAt1M: CIDrifter0002Y2012_MicrostarSurfaceAt1M
  CIDrifter0003Y2012_MicrostarSurfaceAt1M: CIDrifter0003Y2012_MicrostarSurfaceAt1M
  CIDrifter0004Y2012_MicrostarSurfaceAt1M: CIDrifter0004Y2012_MicrostarSurfaceAt1M
  CIDrifter0005Y2012_MicrostarSurfaceAt1M: CIDrifter0005Y2012_MicrostarSurfaceAt1M
  CIDrifter0006Y2012_MicrostarSurfaceAt1M: CIDrifter0006Y2012_MicrostarSurfaceAt1M
  CIDrifter0007Y2013_MicrostarSurfaceAt1M: CIDrifter0007Y2013_MicrostarSurfaceAt1M
  CIDrifter0008Y2013_MicrostarSurfaceAt1M: CIDrifter0008Y2013_MicrostarSurfaceAt1M
  CIDrifter0009Y2013_MicrostarSurfaceAt1M: CIDrifter0009Y2013_MicrostarSurfaceAt1M
  CIDrifter0010Y2013_MicrostarSurfaceAt1M: CIDrifter0010Y2013_MicrostarSurfaceAt1M
  CIDrifter0011Y2012_SubsurfaceDrogueAt15M: CIDrifter0011Y2012_SubsurfaceDrogueAt15M
  CIDrifter0012Y2012_SubsurfaceDrogueAt15M: CIDrifter0012Y2012_SubsurfaceDrogueAt15M
  CIDrifter0013Y2012_SubsurfaceDrogueAt15M: CIDrifter0013Y2012_SubsurfaceDrogueAt15M
  CIDrifter0014Y2012_SubsurfaceDrogueAt15M: CIDrifter0014Y2012_SubsurfaceDrogueAt15M
  CIDrifter0015Y2012_SubsurfaceDrogueAt15M: CIDrifter0015Y2012_SubsurfaceDrogueAt15M
  CIDrifter0016Y2012_SubsurfaceDrogueAt15M: CIDrifter0016Y2012_SubsurfaceDrogueAt15M
  CIDrifter0017Y2013_SubsurfaceDrogueAt15M: CIDrifter0017Y2013_SubsurfaceDrogueAt15M
  CIDrifter0018Y2013_SubsurfaceDrogueAt15M: CIDrifter0018Y2013_SubsurfaceDrogueAt15M
  CIDrifter0019Y2013_SubsurfaceDrogueAt15M: CIDrifter0019Y2013_SubsurfaceDrogueAt15M
  CIDrifter0020Y2013_SubsurfaceDrogueAt15M: CIDrifter0020Y2013_SubsurfaceDrogueAt15M
  CIDrifter0021Y2013_MicrostarSurfaceAt1M: CIDrifter0021Y2013_MicrostarSurfaceAt1M
  CIDrifter0022Y2014_MicrostarSurfaceAt1M: CIDrifter0022Y2014_MicrostarSurfaceAt1M
  CIDrifter0023Y2014_MicrostarSurfaceAt1M: CIDrifter0023Y2014_MicrostarSurfaceAt1M
  CIDrifter0024Y2014_MicrostarSurfaceAt1M: CIDrifter0024Y2014_MicrostarSurfaceAt1M
  CIDrifter0190Y2005_SubsurfaceDrogueAt5M: CIDrifter0190Y2005_SubsurfaceDrogueAt5M
  CIDrifter0192Y2005_SubsurfaceDrogueAt5M: CIDrifter0192Y2005_SubsurfaceDrogueAt5M
  CIDrifter0193Y2005_SubsurfaceDrogueAt5M: CIDrifter0193Y2005_SubsurfaceDrogueAt5M
  CIDrifter0197Y2005_SubsurfaceDrogueAt5M: CIDrifter0197Y2005_SubsurfaceDrogueAt5M
  CIDrifter0227Y2004_SubsurfaceDrogueAt5M: CIDrifter0227Y2004_SubsurfaceDrogueAt5M
  CIDrifter0229Y2004_SubsurfaceDrogueAt5M: CIDrifter0229Y2004_SubsurfaceDrogueAt5M
  CIDrifter0230Y2004_SubsurfaceDrogueAt5M: CIDrifter0230Y2004_SubsurfaceDrogueAt5M
  CIDrifter0236Y2004_SubsurfaceDrogueAt5M: CIDrifter0236Y2004_SubsurfaceDrogueAt5M
  CIDrifter0237Y2004_SubsurfaceDrogueAt5M: CIDrifter0237Y2004_SubsurfaceDrogueAt5M
  CIDrifter0246Y2004_SubsurfaceDrogueAt5M: CIDrifter0246Y2004_SubsurfaceDrogueAt5M
  CIDrifter0247Y2004_SubsurfaceDrogueAt5M: CIDrifter0247Y2004_SubsurfaceDrogueAt5M
  CIDrifter0248Y2004_SubsurfaceDrogueAt5M: CIDrifter0248Y2004_SubsurfaceDrogueAt5M
  CIDrifter0627Y2005_SubsurfaceDrogueAt5M: CIDrifter0627Y2005_SubsurfaceDrogueAt5M
  CIDrifter0628Y2005_SubsurfaceDrogueAt5M: CIDrifter0628Y2005_SubsurfaceDrogueAt5M
  CIDrifter0629Y2005_SubsurfaceDrogueAt5M: CIDrifter0629Y2005_SubsurfaceDrogueAt5M
  CIDrifter0630Y2005_SubsurfaceDrogueAt5M: CIDrifter0630Y2005_SubsurfaceDrogueAt5M
  CIDrifter0631Y2005_SubsurfaceDrogueAt5M: CIDrifter0631Y2005_SubsurfaceDrogueAt5M
  CIDrifter0632Y2006_SubsurfaceDrogueAt5M: CIDrifter0632Y2006_SubsurfaceDrogueAt5M
  CIDrifter0633Y2005_SubsurfaceDrogueAt5M: CIDrifter0633Y2005_SubsurfaceDrogueAt5M
  CIDrifter0634Y2005_SubsurfaceDrogueAt5M: CIDrifter0634Y2005_SubsurfaceDrogueAt5M
  CIDrifter0635Y2006_SubsurfaceDrogueAt5M: CIDrifter0635Y2006_SubsurfaceDrogueAt5M
  CIDrifter0636Y2005_SubsurfaceDrogueAt5M: CIDrifter0636Y2005_SubsurfaceDrogueAt5M
  CIDrifter0637Y2005_SubsurfaceDrogueAt5M: CIDrifter0637Y2005_SubsurfaceDrogueAt5M
  CIDrifter0638Y2005_SubsurfaceDrogueAt5M: CIDrifter0638Y2005_SubsurfaceDrogueAt5M
  CIDrifter0639Y2005_SubsurfaceDrogueAt5M: CIDrifter0639Y2005_SubsurfaceDrogueAt5M
  CIDrifter0640Y2005_SubsurfaceDrogueAt5M: CIDrifter0640Y2005_SubsurfaceDrogueAt5M
  CIDrifter0641Y2005_SubsurfaceDrogueAt5M: CIDrifter0641Y2005_SubsurfaceDrogueAt5M
  CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M
  KBDeployment01Y2019: KBDeployment01Y2019
  KBDeployment01Y2020: KBDeployment01Y2020
  KBDeployment02Y2019: KBDeployment02Y2019
  KBDeployment02Y2020: KBDeployment02Y2020
  KBDeployment03Y2019: KBDeployment03Y2019
  KBDeployment03Y2020: KBDeployment03Y2020
  KBDeployment04Y2019: KBDeployment04Y2019
  KBDeployment04Y2020: KBDeployment04Y2020
  KBDeployment05Y2019: KBDeployment05Y2019
  KBDeployment05Y2020: KBDeployment05Y2020
  KBDeployment06Y2019: KBDeployment06Y2019
  KBDeployment06Y2020: KBDeployment06Y2020
  KBDeployment07Y2019: KBDeployment07Y2019
  KBDeployment07Y2020: KBDeployment07Y2020
  KBDeployment08Y2019: KBDeployment08Y2019
  KBDeployment08Y2020: KBDeployment08Y2020
  KBDeployment09Y2019: KBDeployment09Y2019
  KBDeployment09Y2020: KBDeployment09Y2020
  KBDeployment10Y2020: KBDeployment10Y2020
  KBDeployment11Y2020: KBDeployment11Y2020
  KBDeployment12Y2020: KBDeployment12Y2020
  KBDeployment13Y2020: KBDeployment13Y2020
  KBDeployment14Y2020: KBDeployment14Y2020
  KBDeployment15Y2020: KBDeployment15Y2020
  KBDeployment16Y2020: KBDeployment16Y2020
  KBDeployment17Y2020: KBDeployment17Y2020
  KBDeployment18Y2020: KBDeployment18Y2020
  KBDeployment19Y2020: KBDeployment19Y2020
  KBDeployment20Y2020: KBDeployment20Y2020
  LCDeployment01Y2019: LCDeployment01Y2019
  LCDeployment01Y2020: LCDeployment01Y2020
  LCDeployment02Y2019: LCDeployment02Y2019
  LCDeployment02Y2020: LCDeployment02Y2020
  LCDeployment03Y2019: LCDeployment03Y2019
  LCDeployment03Y2020: LCDeployment03Y2020
data:
  00481d32cf6cdb74:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810365/CIDrifter0009Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  0178ce3800d6164d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810684/CIDrifter0247Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  04f29e3aa88876c6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810442/CIDrifter0019Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  05aa5a580da1705e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810697/CIDrifter0638Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  086f0f699bdbb4ef:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810360/CIDrifter0004Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  0ba650021a053bc1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810400/KBDeployment17Y2020_data.csv
    metadata: {}
    user_parameters: {}
  0bbd49eb2bce59e2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810699/CIDrifter0640Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  0ca360ba1d7e44e1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810366/CIDrifter0010Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  0d0285ff2be718ef:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810373/KBDeployment02Y2019_data.csv
    metadata: {}
    user_parameters: {}
  0de2feb06a718a03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810407/LCDeployment02Y2020_data.csv
    metadata: {}
    user_parameters: {}
  0ea60c5f1fce4afa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810678/CIDrifter0227Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  0eb7c686ccb2b3d3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810450/CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  0f0acefc97edc1e9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810687/CIDrifter0628Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  10cd7131712ad660:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810383/KBDeployment05Y2020_data.csv
    metadata: {}
    user_parameters: {}
  163bbbf52229284e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810395/KBDeployment12Y2020_data.csv
    metadata: {}
    user_parameters: {}
  16c85838d235ffc9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810673/CIDrifter0641Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  196f8520709b3ae5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810677/CIDrifter0197Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  1ad79571107fc657:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810370/CIDrifter0024Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  1c656fafb1b50001:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810434/CIDrifter0011Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  21fd41c838d1c6e7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810409/LCDeployment03Y2020_data.csv
    metadata: {}
    user_parameters: {}
  23de5487f66dd16e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810436/CIDrifter0013Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  2a21cbd400d23e35:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810451/CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  2ace9a4e4dd096b8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810371/KBDeployment01Y2019_data.csv
    metadata: {}
    user_parameters: {}
  2c1aab5596f634c2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810396/KBDeployment13Y2020_data.csv
    metadata: {}
    user_parameters: {}
  33252fdf394480cf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810376/KBDeployment03Y2020_data.csv
    metadata: {}
    user_parameters: {}
  34e4302552306fa5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810372/KBDeployment01Y2020_data.csv
    metadata: {}
    user_parameters: {}
  36494222e80baf6d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810384/KBDeployment06Y2019_data.csv
    metadata: {}
    user_parameters: {}
  364fbf55cef088b7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810440/CIDrifter0017Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  3795f79f5c1e9668:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810695/CIDrifter0636Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  39d4f5aff42129cc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810394/KBDeployment11Y2020_data.csv
    metadata: {}
    user_parameters: {}
  3a609717a1b46ad6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810692/CIDrifter0633Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  3b84c2fbf75518d2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810387/KBDeployment07Y2020_data.csv
    metadata: {}
    user_parameters: {}
  42652e1e2a725125:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810460/CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  47842382d30d5e95:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810689/CIDrifter0630Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  49c030524168ce29:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810675/CIDrifter0192Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  4b123df05f583de7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810378/KBDeployment04Y2020_data.csv
    metadata: {}
    user_parameters: {}
  52c655859464fc49:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810690/CIDrifter0631Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  59140518af671cce:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810385/KBDeployment06Y2020_data.csv
    metadata: {}
    user_parameters: {}
  59ec5f7200f70078:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810439/CIDrifter0016Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  5bce90b7f6a51fc6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810397/KBDeployment14Y2020_data.csv
    metadata: {}
    user_parameters: {}
  5db4c40ddcc62df6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810402/KBDeployment19Y2020_data.csv
    metadata: {}
    user_parameters: {}
  6039ba76b7ab5522:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810680/CIDrifter0230Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  6459f04c2e6c3206:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810438/CIDrifter0015Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  673492111ccd7afb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810361/CIDrifter0005Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  6aa4e010e3ff2d92:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810362/CIDrifter0006Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  6ad958ff889c3e6e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810685/CIDrifter0248Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  6e8e139d3f523768:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810686/CIDrifter0627Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  7113c5909a4a847e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810674/CIDrifter0190Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  7134bb7cf518b9ae:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810433/CIDrifter0020Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  757eb51a6d7efc3a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810374/KBDeployment02Y2020_data.csv
    metadata: {}
    user_parameters: {}
  7db4ed3514659c95:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810363/CIDrifter0007Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  826f6faef4a414f7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810388/KBDeployment08Y2019_data.csv
    metadata: {}
    user_parameters: {}
  85b2c3d818b73f13:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810688/CIDrifter0629Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  88ba62f2621f46ed:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810441/CIDrifter0018Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  8b47955d41f7732e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810408/LCDeployment03Y2019_data.csv
    metadata: {}
    user_parameters: {}
  8e7a50af02757e57:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810391/KBDeployment09Y2020_data.csv
    metadata: {}
    user_parameters: {}
  91f943193fac544e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810399/KBDeployment16Y2020_data.csv
    metadata: {}
    user_parameters: {}
  9555650df5438173:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810386/KBDeployment07Y2019_data.csv
    metadata: {}
    user_parameters: {}
  96adc600ca4e4238:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810401/KBDeployment18Y2020_data.csv
    metadata: {}
    user_parameters: {}
  9e0a72f20d3ea1cb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810457/CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  9f7c40560c09c41d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810461/CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  a2638878a5c61b80:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810358/CIDrifter0002Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  a4950768cd8c52a1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810696/CIDrifter0637Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  a8797c75d208e574:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810389/KBDeployment08Y2020_data.csv
    metadata: {}
    user_parameters: {}
  a90b48a5174f3ebe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810369/CIDrifter0023Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  a9b7dc7db8fcaacf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810357/CIDrifter0001Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  b13ccc0514bc6138:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810456/CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  b19826ab145f07a5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810364/CIDrifter0008Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  b1b7bd96616e074d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810359/CIDrifter0003Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  b1f360a78698c768:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810406/LCDeployment02Y2019_data.csv
    metadata: {}
    user_parameters: {}
  b53c09b0be0d3285:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810393/KBDeployment10Y2020_data.csv
    metadata: {}
    user_parameters: {}
  bc11d383e29517e9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810454/CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  c1027798a452e6b1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810676/CIDrifter0193Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  c6b74e91bd166ca2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810682/CIDrifter0237Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  c70d065d2579afc9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810453/CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  c9bc1f5618c24c30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810398/KBDeployment15Y2020_data.csv
    metadata: {}
    user_parameters: {}
  ccb387ad004e9c9b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810458/CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  cfe98b1c4179e709:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810681/CIDrifter0236Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  d3417d31c1593643:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810367/CIDrifter0021Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  d41e2f7072685a8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810693/CIDrifter0634Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  d47fd4315950097f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810390/KBDeployment09Y2019_data.csv
    metadata: {}
    user_parameters: {}
  d5bdd06cebadd89c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810404/LCDeployment01Y2019_data.csv
    metadata: {}
    user_parameters: {}
  d8ce170727a9dc54:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810405/LCDeployment01Y2020_data.csv
    metadata: {}
    user_parameters: {}
  dcc9442fa082dfe4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810683/CIDrifter0246Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  dd32e8570e561996:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810403/KBDeployment20Y2020_data.csv
    metadata: {}
    user_parameters: {}
  ded656f4fb24fc07:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810452/CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  e1b9be677d6178b1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810455/CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  e22f5ffa3a25a894:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810698/CIDrifter0639Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  e274ca8ece0fabca:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810459/CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  e67ede96240194f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810449/CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  e762400f04d514d2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810437/CIDrifter0014Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  e7b00b10be02f950:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810381/KBDeployment05Y2019_data.csv
    metadata: {}
    user_parameters: {}
  ed7792346054dff6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810435/CIDrifter0012Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  f0b56513e57feee0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810368/CIDrifter0022Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  f2ca46e9ee291fac:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810377/KBDeployment04Y2019_data.csv
    metadata: {}
    user_parameters: {}
  f3ae7fe6ae87c057:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810691/CIDrifter0632Y2006_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  f4e3f5891e1a9bcb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810679/CIDrifter0229Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  fa07167d8b9d47d8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810375/KBDeployment03Y2019_data.csv
    metadata: {}
    user_parameters: {}
  fd895ee5c59de7f0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: simplecache://::https://researchworkspace.com/files/41810694/CIDrifter0635Y2006_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
entries:
  02607ad3a2559d1c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfa9d9849b8ec381)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  033ab343ec6be005:
    kwargs:
      data: '{data(7113c5909a4a847e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0402975dd09af709:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34a5549fe64291d2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  048a7c14313a5187:
    kwargs:
      data: '{data(23de5487f66dd16e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0854b43b5a0fe499:
    kwargs:
      data: '{data(3b84c2fbf75518d2)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  09da7f93bc54622d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7036d0982b25c401)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0d450100af0e0887:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f059f705da679aad)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0d5e11f46282eb36:
    kwargs:
      data: '{data(826f6faef4a414f7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0d6740de591bfd5b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5f1a3ea0484961df)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1014fdebe05865a1:
    kwargs:
      data: '{data(e7b00b10be02f950)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1126670ad1413b31:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(64dde0b85e245c14)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13321915817227b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d6f72865d1ca39e4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16e59e54a37d091a:
    kwargs:
      data: '{data(2c1aab5596f634c2)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1c6d2ee4375551dc:
    kwargs:
      data: '{data(c6b74e91bd166ca2)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1d419624f9130cab:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f288b4e9eeb4810e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1dbf72a6128379e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a64130c02a4ea95)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1f6517e186ec34f1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(281729732dcd9979)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  215bfee784fbb91f:
    kwargs:
      data: '{data(34e4302552306fa5)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  22b74501407b542a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7eb62dffae886b76)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23894dde50049625:
    kwargs:
      data: '{data(cfe98b1c4179e709)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  252c6e4863558def:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c6d2ee4375551dc)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  27bd4517c07b5c2e:
    kwargs:
      data: '{data(5bce90b7f6a51fc6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  281729732dcd9979:
    kwargs:
      data: '{data(0bbd49eb2bce59e2)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  29e1cc2610f22a86:
    kwargs:
      data: '{data(0ea60c5f1fce4afa)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a292f6b3ea5f515:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb6f6028495592e3)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2a64130c02a4ea95:
    kwargs:
      data: '{data(163bbbf52229284e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2e40f2da8d3c8aa8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(565b64a6da2b1512)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f19ac448fea01d7:
    kwargs:
      data: '{data(0ba650021a053bc1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3053ee9a9f375e34:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8ebf8f159967390)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  338481a3908a156e:
    kwargs:
      data: '{data(05aa5a580da1705e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  33bc8bb1959a0145:
    kwargs:
      data: '{data(0de2feb06a718a03)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3401dabc8b0691ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(27bd4517c07b5c2e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34a5549fe64291d2:
    kwargs:
      data: '{data(3a609717a1b46ad6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  34ab148ca70b646e:
    kwargs:
      data: '{data(88ba62f2621f46ed)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  35b756bbb5893063:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(048a7c14313a5187)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36be8c74c73b9ed8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(033ab343ec6be005)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  370e968d4013c2d0:
    kwargs:
      data: '{data(196f8520709b3ae5)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  371df45d88a7a2dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e616ea1ed7cc32)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3759453bd17cdd40:
    kwargs:
      data: '{data(d8ce170727a9dc54)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  37e711b11d6cf103:
    kwargs:
      data: '{data(52c655859464fc49)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  381a2ab9fdffd974:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f01dc877f32c8b1)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3aba54dd5685ae2f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b853ef826de723b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c7d73a0f9db837a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d8d44077dea7645)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3dbadb73414ec545:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d5e11f46282eb36)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3edaa61cfa328fe9:
    kwargs:
      data: '{data(3795f79f5c1e9668)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  403b5c5b50e0e30f:
    kwargs:
      data: '{data(0d0285ff2be718ef)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  41ed7062545a6efe:
    kwargs:
      data: '{data(5db4c40ddcc62df6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  467e9e90d56c3a94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88a1d11bd3b6132d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4742851e5be54e48:
    kwargs:
      data: '{data(0f0acefc97edc1e9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  474fed75ee846daf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(492448edbc15804f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4800d29d5b795c64:
    kwargs:
      data: '{data(a8797c75d208e574)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4845800701d5da56:
    kwargs:
      data: '{data(6039ba76b7ab5522)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  48b78b0dffbffbcf:
    kwargs:
      data: '{data(85b2c3d818b73f13)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  48fb1d5c55ca9998:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b831b4c7562787f2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  492448edbc15804f:
    kwargs:
      data: '{data(f0b56513e57feee0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  49d60de4ae16bc8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6929cdd79681db6)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4bb23c55d2b92a80:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8effd340e22a53b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c7c23fd50371063:
    kwargs:
      data: '{data(59ec5f7200f70078)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4c8963e33170a731:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d397f73351ff5a10)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4cc5a3315bcc2c03:
    kwargs:
      data: '{data(10cd7131712ad660)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4d687f5ab711a021:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7d82bbf5a0889fa3)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4d731e7923c070e4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfff81351bb8d043)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f01dc877f32c8b1:
    kwargs:
      data: '{data(e1b9be677d6178b1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4f200b5c67caccbe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(48b78b0dffbffbcf)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  50f124d0b76d357c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4800d29d5b795c64)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  51582dae00cd43bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c22439ef1b11666)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  51d938ebea92236a:
    kwargs:
      data: '{data(36494222e80baf6d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  52da34a289b179c4:
    kwargs:
      data: '{data(42652e1e2a725125)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  556c1ed5522b79a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9387191d0792f2a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  560856445339a256:
    kwargs:
      data: '{data(8b47955d41f7732e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  565b64a6da2b1512:
    kwargs:
      data: '{data(b13ccc0514bc6138)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  57683c4b13165c3d:
    kwargs:
      data: '{data(49c030524168ce29)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  57e798d73b544448:
    kwargs:
      data: '{data(59140518af671cce)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  58d11dc07fb8d2d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57e798d73b544448)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b23bcbf16511224:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37e711b11d6cf103)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b7994e042bdc065:
    kwargs:
      data: '{data(2ace9a4e4dd096b8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d8d44077dea7645:
    kwargs:
      data: '{data(7db4ed3514659c95)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5db5445350913a10:
    kwargs:
      data: '{data(c70d065d2579afc9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5f1a3ea0484961df:
    kwargs:
      data: '{data(ded656f4fb24fc07)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  618623aeb8b45c12:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7ef901dd5eeb90de)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6368a64c577609fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57683c4b13165c3d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  64ad4dfda0f277da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4742851e5be54e48)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  64dde0b85e245c14:
    kwargs:
      data: '{data(0eb7c686ccb2b3d3)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a41aba1fa550870:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aab8ebab132cf136)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6bd993820514deb5:
    kwargs:
      data: '{data(dd32e8570e561996)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6c22439ef1b11666:
    kwargs:
      data: '{data(91f943193fac544e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6cb971534025445e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560856445339a256)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6e7f96b7de3d81b9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9afd31dd0fd78866)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f06f0f435cf0af6:
    kwargs:
      data: '{data(a4950768cd8c52a1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6f50d29f5994c50e:
    kwargs:
      data: '{data(21fd41c838d1c6e7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6f8eea9f01529b1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1014fdebe05865a1)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7036d0982b25c401:
    kwargs:
      data: '{data(9e0a72f20d3ea1cb)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  718ed6456d7a0867:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4845800701d5da56)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7620eaa87c5b9bd6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5db5445350913a10)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7650640c87ed2d02:
    kwargs:
      data: '{data(e274ca8ece0fabca)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  776855ec445f6fc8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6f50d29f5994c50e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7892540c0c5f624c:
    kwargs:
      data: '{data(b19826ab145f07a5)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  79dae4bae17119b2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b2cfc0dd5a6d86df)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7b06bc6e97f6b76d:
    kwargs:
      data: '{data(04f29e3aa88876c6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7c82ff813d4582e5:
    kwargs:
      data: '{data(a9b7dc7db8fcaacf)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7d82bbf5a0889fa3:
    kwargs:
      data: '{data(fd895ee5c59de7f0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7d94f6e18e5b13ff:
    kwargs:
      data: '{data(c9bc1f5618c24c30)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7eb62dffae886b76:
    kwargs:
      data: '{data(0178ce3800d6164d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7ef901dd5eeb90de:
    kwargs:
      data: '{data(d41e2f7072685a8c)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8198e53e8bb31465:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(db277995df099e3d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  821710c9ded7f0f5:
    kwargs:
      data: '{data(ccb387ad004e9c9b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  834f809fd791d15c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bd993820514deb5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  84a142701f0e9dcf:
    kwargs:
      data: '{data(0ca360ba1d7e44e1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  873b2d34ff743a25:
    kwargs:
      data: '{data(6aa4e010e3ff2d92)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  885de3b6ee1e7ec2:
    kwargs:
      data: '{data(d47fd4315950097f)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  88a1d11bd3b6132d:
    kwargs:
      data: '{data(8e7a50af02757e57)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  88e8b71031d674d2:
    kwargs:
      data: '{data(4b123df05f583de7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  89e616ea1ed7cc32:
    kwargs:
      data: '{data(bc11d383e29517e9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  89f4d775a6d94683:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ec24bb9862bcd055)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d9028ef2e7876d8:
    kwargs:
      data: '{data(a2638878a5c61b80)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8eecf0050d07cb01:
    kwargs:
      data: '{data(e22f5ffa3a25a894)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8f9c8ff35b504a0c:
    kwargs:
      data: '{data(33252fdf394480cf)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8fa234bea635d75c:
    kwargs:
      data: '{data(b1f360a78698c768)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  90388078c0d3906a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c77088df2130362d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91828c727a116ccf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(23894dde50049625)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92db3cdd7f407ebf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fb03b64c869edc2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  987ab1a570f677dc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52da34a289b179c4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a11f36bca40e778:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f9c8ff35b504a0c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9afd31dd0fd78866:
    kwargs:
      data: '{data(7134bb7cf518b9ae)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9b4ebdad6158659a:
    kwargs:
      data: '{data(1c656fafb1b50001)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9b853ef826de723b:
    kwargs:
      data: '{data(b1b7bd96616e074d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9e4fed67a305a332:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(338481a3908a156e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f451864c29c8b23:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ef65878a2fe8f59b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9fb03b64c869edc2:
    kwargs:
      data: '{data(6459f04c2e6c3206)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  CIDrifter0001Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c82ff813d4582e5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f319dd028ab0651a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.19537
      maxLongitude: -151.18589
      maxTime: '2012-08-15T21:00:00.000000000'
      minLatitude: 59.48805
      minLongitude: -152.31923
      minTime: '2012-06-01T02:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810357/CIDrifter0001Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0002Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8d9028ef2e7876d8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bfdc4c40690add6c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.75698
      maxLongitude: -151.03107
      maxTime: '2012-08-19T02:00:00.000000000'
      minLatitude: 59.46476
      minLongitude: -151.9143
      minTime: '2012-06-15T18:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810358/CIDrifter0002Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0003Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b853ef826de723b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3aba54dd5685ae2f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.8957
      maxLongitude: -150.96006
      maxTime: '2012-08-23T19:00:00.000000000'
      minLatitude: 59.30108
      minLongitude: -153.00315
      minTime: '2012-06-05T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810359/CIDrifter0003Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0004Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(db277995df099e3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8198e53e8bb31465)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.55835
      maxLongitude: -151.37244
      maxTime: '2012-07-06T09:00:00.000000000'
      minLatitude: 59.54404
      minLongitude: -151.40815
      minTime: '2012-07-05T20:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810360/CIDrifter0004Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0005Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(daa5640bfd113d8c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cf89df106d82af5d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.995
      maxLongitude: -151.3083
      maxTime: '2013-05-31T03:00:00.000000000'
      minLatitude: 59.41774
      minLongitude: -152.21815
      minTime: '2012-07-19T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810361/CIDrifter0005Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0006Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(873b2d34ff743a25)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b1d848a050f6ee0b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.77141
      maxLongitude: -150.98476
      maxTime: '2012-09-02T23:00:00.000000000'
      minLatitude: 59.56145
      minLongitude: -151.47772
      minTime: '2012-08-09T21:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810362/CIDrifter0006Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0007Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d8d44077dea7645)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3c7d73a0f9db837a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.75824
      maxLongitude: -151.05757
      maxTime: '2013-05-19T01:00:00.000000000'
      minLatitude: 59.55223
      minLongitude: -151.46505
      minTime: '2013-05-01T03:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810363/CIDrifter0007Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0008Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7892540c0c5f624c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f6704a2f74133d2b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.89782
      maxLongitude: -151.01568
      maxTime: '2013-10-04T22:00:00.000000000'
      minLatitude: 55.97923
      minLongitude: -156.3305
      minTime: '2013-05-16T03:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810364/CIDrifter0008Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0009Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9387191d0792f2a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(556c1ed5522b79a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.39748
      maxLongitude: -151.1627
      maxTime: '2013-07-27T02:00:00.000000000'
      minLatitude: 59.54004
      minLongitude: -152.38437
      minTime: '2013-06-07T09:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810365/CIDrifter0009Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0010Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(84a142701f0e9dcf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e8675edfaa9d2888)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21645
      maxLongitude: -150.95971
      maxTime: '2013-10-13T17:00:00.000000000'
      minLatitude: 57.07587
      minLongitude: -155.78968
      minTime: '2013-06-28T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810366/CIDrifter0010Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0011Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b4ebdad6158659a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b17f6bf6833cfba1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74595
      maxLongitude: -151.04673
      maxTime: '2013-06-27T19:00:00.000000000'
      minLatitude: 59.52029
      minLongitude: -151.83927
      minTime: '2012-06-01T00:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810434/CIDrifter0011Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0012Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(acdd2933c464cceb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(da15e0a823570774)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74594
      maxLongitude: -151.04697
      maxTime: '2013-09-25T21:00:00.000000000'
      minLatitude: 59.41832
      minLongitude: -151.92897
      minTime: '2012-06-05T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810435/CIDrifter0012Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0013Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(048a7c14313a5187)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(35b756bbb5893063)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74495
      maxLongitude: -151.03306
      maxTime: '2013-11-25T03:00:00.000000000'
      minLatitude: 59.27449
      minLongitude: -152.01804
      minTime: '2012-06-15T18:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810436/CIDrifter0013Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0014Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f288b4e9eeb4810e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1d419624f9130cab)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.65531
      maxLongitude: -151.16792
      maxTime: '2013-11-07T01:00:00.000000000'
      minLatitude: 54.17017
      minLongitude: -163.36817
      minTime: '2012-07-05T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810437/CIDrifter0014Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0015Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fb03b64c869edc2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(92db3cdd7f407ebf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.50961
      maxLongitude: -151.30863
      maxTime: '2012-08-28T18:00:00.000000000'
      minLatitude: 59.41774
      minLongitude: -151.58559
      minTime: '2012-07-19T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810438/CIDrifter0015Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0016Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c7c23fd50371063)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e67187206ac5a70e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74473
      maxLongitude: -151.02401
      maxTime: '2013-10-14T01:00:00.000000000'
      minLatitude: 55.95675
      minLongitude: -158.71898
      minTime: '2012-08-09T21:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810439/CIDrifter0016Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0017Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cbb6c2149c9cb405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f940c8499fe21955)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21189
      maxLongitude: -132.28854
      maxTime: '2014-12-08T00:00:00.000000000'
      minLatitude: 46.36621
      minLongitude: -169.7242
      minTime: '2013-08-21T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810440/CIDrifter0017Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0018Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34ab148ca70b646e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b398d7067bb8ca24)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.6205
      maxLongitude: -151.78407
      maxTime: '2015-05-03T19:00:00.000000000'
      minLatitude: 52.32094
      minLongitude: -198.81437
      minTime: '2013-10-08T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810441/CIDrifter0018Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0019Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7b06bc6e97f6b76d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c13c229f6d906e40)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.81209
      maxLongitude: -151.42064
      maxTime: '2014-02-27T01:00:00.000000000'
      minLatitude: 52.51845
      minLongitude: -166.63584
      minTime: '2013-10-09T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810442/CIDrifter0019Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0020Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9afd31dd0fd78866)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6e7f96b7de3d81b9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.03285
      maxLongitude: -151.62188
      maxTime: '2014-10-28T01:00:00.000000000'
      minLatitude: 54.23967
      minLongitude: -188.30247
      minTime: '2013-09-28T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810433/CIDrifter0020Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0021Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfa9d9849b8ec381)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(02607ad3a2559d1c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.77121
      maxLongitude: -150.99253
      maxTime: '2013-08-29T01:00:00.000000000'
      minLatitude: 59.56702
      minLongitude: -151.70182
      minTime: '2013-07-24T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810367/CIDrifter0021Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0022Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(492448edbc15804f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(474fed75ee846daf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21938
      maxLongitude: -151.49872
      maxTime: '2014-05-24T22:00:00.000000000'
      minLatitude: 59.54919
      minLongitude: -152.21061
      minTime: '2014-03-28T20:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810368/CIDrifter0022Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0023Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c77088df2130362d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(90388078c0d3906a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.56434
      maxLongitude: -151.51154
      maxTime: '2014-03-29T08:00:00.000000000'
      minLatitude: 59.5493
      minLongitude: -151.54371
      minTime: '2014-03-28T20:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810369/CIDrifter0023Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0024Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c3882b1550753b69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e656cfc0917a6bd0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.28691
      maxLongitude: -151.51238
      maxTime: '2014-05-30T13:00:00.000000000'
      minLatitude: 59.51614
      minLongitude: -152.30924
      minTime: '2014-03-28T21:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810370/CIDrifter0024Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0190Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(033ab343ec6be005)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(36be8c74c73b9ed8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.868
      maxLongitude: -151.6112
      maxTime: '2005-11-26T22:00:00.000000000'
      minLatitude: 59.9343
      minLongitude: -152.5258
      minTime: '2005-09-08T12:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810674/CIDrifter0190Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0192Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57683c4b13165c3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6368a64c577609fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9507
      maxLongitude: -151.2963
      maxTime: '2005-08-29T21:00:00.000000000'
      minLatitude: 60.2858
      minLongitude: -152.0263
      minTime: '2005-08-22T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810675/CIDrifter0192Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0193Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfff81351bb8d043)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4d731e7923c070e4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6979
      maxLongitude: -151.5981
      maxTime: '2005-11-23T22:00:00.000000000'
      minLatitude: 56.5091
      minLongitude: -155.9587
      minTime: '2005-09-08T15:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810676/CIDrifter0193Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0197Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(370e968d4013c2d0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b094803121263a25)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.866
      maxLongitude: -137.3509
      maxTime: '2006-05-24T22:00:00.000000000'
      minLatitude: 48.7636
      minLongitude: -160.7373
      minTime: '2005-08-22T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810677/CIDrifter0197Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0227Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29e1cc2610f22a86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c222310f1a32a71b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6813
      maxLongitude: -151.5156
      maxTime: '2004-09-10T22:00:00.000000000'
      minLatitude: 59.8928
      minLongitude: -152.4635
      minTime: '2004-07-15T22:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810678/CIDrifter0227Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0229Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6929cdd79681db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(49d60de4ae16bc8f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6794
      maxLongitude: -151.648
      maxTime: '2004-11-16T22:00:00.000000000'
      minLatitude: 56.8058
      minLongitude: -155.594
      minTime: '2004-07-15T18:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810679/CIDrifter0229Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0230Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4845800701d5da56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(718ed6456d7a0867)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6893
      maxLongitude: -151.5403
      maxTime: '2005-01-12T15:00:00.000000000'
      minLatitude: 49.2317
      minLongitude: -173.6592
      minTime: '2004-09-01T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810680/CIDrifter0230Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0236Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(23894dde50049625)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91828c727a116ccf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6866
      maxLongitude: -151.5416
      maxTime: '2004-11-06T22:00:00.000000000'
      minLatitude: 56.6198
      minLongitude: -155.044
      minTime: '2004-09-01T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810681/CIDrifter0236Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0237Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c6d2ee4375551dc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(252c6e4863558def)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8923
      maxLongitude: -151.4442
      maxTime: '2005-07-01T14:00:00.000000000'
      minLatitude: 50.7861
      minLongitude: -181.5597
      minTime: '2004-09-29T21:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810682/CIDrifter0237Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0246Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaf607a8e5429ebc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a02c7909de04a249)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6923
      maxLongitude: -151.5855
      maxTime: '2004-11-03T18:00:00.000000000'
      minLatitude: 57.8984
      minLongitude: -153.9713
      minTime: '2004-09-29T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810683/CIDrifter0246Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0247Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7eb62dffae886b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(22b74501407b542a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6279
      maxLongitude: -151.6499
      maxTime: '2004-12-24T10:00:00.000000000'
      minLatitude: 60.3312
      minLongitude: -151.9862
      minTime: '2004-12-13T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810684/CIDrifter0247Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0248Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d6f72865d1ca39e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(13321915817227b5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7267
      maxLongitude: -151.5536
      maxTime: '2005-03-21T22:00:00.000000000'
      minLatitude: 57.69
      minLongitude: -154.862
      minTime: '2004-12-12T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810685/CIDrifter0248Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0627Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb041d78ec26ce6b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(de4abc8d7ba8d9cd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7813
      maxLongitude: -151.6032
      maxTime: '2005-07-11T10:00:00.000000000'
      minLatitude: 58.8661
      minLongitude: -153.6654
      minTime: '2005-05-28T12:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810686/CIDrifter0627Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0628Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4742851e5be54e48)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(64ad4dfda0f277da)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9259
      maxLongitude: -151.3505
      maxTime: '2005-12-27T04:00:00.000000000'
      minLatitude: 59.0078
      minLongitude: -153.3836
      minTime: '2005-11-29T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810687/CIDrifter0628Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0629Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(48b78b0dffbffbcf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4f200b5c67caccbe)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.007
      maxLongitude: -151.9272
      maxTime: '2005-12-26T18:00:00.000000000'
      minLatitude: 57.6012
      minLongitude: -155.7416
      minTime: '2005-12-11T10:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810688/CIDrifter0629Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0630Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0ad7de30eda2158)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b6ad81034a5d3176)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.9917
      maxLongitude: -151.941
      maxTime: '2005-12-27T04:00:00.000000000'
      minLatitude: 59.0282
      minLongitude: -153.6491
      minTime: '2005-12-11T07:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810689/CIDrifter0630Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0631Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37e711b11d6cf103)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5b23bcbf16511224)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.8885
      maxLongitude: -151.6054
      maxTime: '2006-01-01T07:00:00.000000000'
      minLatitude: 59.0321
      minLongitude: -153.6536
      minTime: '2005-12-11T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810690/CIDrifter0631Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0632Y2006_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d397f73351ff5a10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4c8963e33170a731)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6138
      maxLongitude: -151.1742
      maxTime: '2006-07-12T17:00:00.000000000'
      minLatitude: 59.575
      minLongitude: -152.4659
      minTime: '2006-06-01T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810691/CIDrifter0632Y2006_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0633Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34a5549fe64291d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0402975dd09af709)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.2217
      maxLongitude: -151.8346
      maxTime: '2005-12-12T18:00:00.000000000'
      minLatitude: 59.1262
      minLongitude: -152.0186
      minTime: '2005-12-11T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810692/CIDrifter0633Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0634Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7ef901dd5eeb90de)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(618623aeb8b45c12)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8157
      maxLongitude: -151.6152
      maxTime: '2006-01-08T23:00:00.000000000'
      minLatitude: 58.9699
      minLongitude: -153.4388
      minTime: '2005-12-24T16:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810693/CIDrifter0634Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0635Y2006_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7d82bbf5a0889fa3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4d687f5ab711a021)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7942
      maxLongitude: -151.1074
      maxTime: '2006-07-26T22:00:00.000000000'
      minLatitude: 59.6772
      minLongitude: -152.5021
      minTime: '2006-05-31T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810694/CIDrifter0635Y2006_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0636Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3edaa61cfa328fe9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(aa9af3672609242d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8097
      maxLongitude: -151.5838
      maxTime: '2006-01-27T15:00:00.000000000'
      minLatitude: 58.2952
      minLongitude: -153.3291
      minTime: '2005-12-24T15:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810695/CIDrifter0636Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0637Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6f06f0f435cf0af6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bb4a8485ae6501ac)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.877
      maxLongitude: -151.6131
      maxTime: '2005-12-17T17:00:00.000000000'
      minLatitude: 59.4643
      minLongitude: -153.3432
      minTime: '2005-11-29T02:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810696/CIDrifter0637Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0638Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(338481a3908a156e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9e4fed67a305a332)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8547
      maxLongitude: -151.5716
      maxTime: '2005-10-30T00:00:00.000000000'
      minLatitude: 59.1853
      minLongitude: -152.8011
      minTime: '2005-09-16T03:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810697/CIDrifter0638Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0639Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eecf0050d07cb01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e58ce56d0456e88b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8111
      maxLongitude: -151.5948
      maxTime: '2005-12-05T20:00:00.000000000'
      minLatitude: 59.4258
      minLongitude: -152.5248
      minTime: '2005-10-26T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810698/CIDrifter0639Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0640Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(281729732dcd9979)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1f6517e186ec34f1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.581
      maxLongitude: -151.7218
      maxTime: '2005-12-07T20:00:00.000000000'
      minLatitude: 59.0247
      minLongitude: -153.6683
      minTime: '2005-11-21T06:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810699/CIDrifter0640Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0641Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cf809c8ff1e986c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(dc9bc534c030e369)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7812
      maxLongitude: -151.5383
      maxTime: '2005-09-22T22:00:00.000000000'
      minLatitude: 60.2953
      minLongitude: -151.9769
      minTime: '2005-09-16T03:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810673/CIDrifter0641Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(64dde0b85e245c14)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1126670ad1413b31)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8215
      maxLongitude: -151.4056
      maxTime: '2004-01-19T12:00:00.000000000'
      minLatitude: 59.4453
      minLongitude: -153.157
      minTime: '2003-12-14T15:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810450/CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d41424e8456eb392)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ddc44226e8022a82)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5815
      maxLongitude: -151.6721
      maxTime: '2004-07-08T22:00:00.000000000'
      minLatitude: 50.6601
      minLongitude: -177.1554
      minTime: '2003-12-20T13:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810451/CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5f1a3ea0484961df)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0d6740de591bfd5b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9354
      maxLongitude: -151.2705
      maxTime: '2004-01-28T09:00:00.000000000'
      minLatitude: 58.5651
      minLongitude: -153.8851
      minTime: '2003-12-14T18:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810452/CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5db5445350913a10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7620eaa87c5b9bd6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8521
      maxLongitude: -151.5297
      maxTime: '2003-12-14T00:00:00.000000000'
      minLatitude: 59.6003
      minLongitude: -152.4562
      minTime: '2003-04-06T14:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810453/CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e616ea1ed7cc32)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(371df45d88a7a2dd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8385
      maxLongitude: -151.4716
      maxTime: '2003-09-09T22:00:00.000000000'
      minLatitude: 59.484
      minLongitude: -152.8955
      minTime: '2003-04-06T09:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810454/CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f01dc877f32c8b1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(381a2ab9fdffd974)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7554
      maxLongitude: -151.5835
      maxTime: '2003-06-07T03:00:00.000000000'
      minLatitude: 60.2528
      minLongitude: -152.0512
      minTime: '2003-05-21T23:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810455/CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(565b64a6da2b1512)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2e40f2da8d3c8aa8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5582
      maxLongitude: -151.6085
      maxTime: '2003-04-13T10:00:00.000000000'
      minLatitude: 60.2834
      minLongitude: -152.1501
      minTime: '2003-04-06T23:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810456/CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7036d0982b25c401)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(09da7f93bc54622d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8219
      maxLongitude: -151.5167
      maxTime: '2003-09-23T23:00:00.000000000'
      minLatitude: 60.0284
      minLongitude: -152.5828
      minTime: '2003-09-10T23:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810457/CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(821710c9ded7f0f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d8ed7d077716e370)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5948
      maxLongitude: -151.308
      maxTime: '2003-09-25T21:00:00.000000000'
      minLatitude: 58.8544
      minLongitude: -153.3599
      minTime: '2003-07-06T00:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810458/CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7650640c87ed2d02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cb6012eb997ec385)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7299
      maxLongitude: -151.4304
      maxTime: '2004-03-29T23:00:00.000000000'
      minLatitude: 50.3348
      minLongitude: -163.3627
      minTime: '2003-07-06T07:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810459/CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52da34a289b179c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(987ab1a570f677dc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.2224
      maxLongitude: -151.6031
      maxTime: '2003-10-03T22:00:00.000000000'
      minLatitude: 57.5263
      minLongitude: -155.6863
      minTime: '2003-06-17T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810460/CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb6f6028495592e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2a292f6b3ea5f515)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7889
      maxLongitude: -151.6152
      maxTime: '2003-11-05T23:00:00.000000000'
      minLatitude: 59.3939
      minLongitude: -153.4388
      minTime: '2003-06-17T19:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810461/CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d80d8bc33fa53e90)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c4548b0bbe2dd2cd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7963
      maxLongitude: -151.3993
      maxTime: '2004-06-06T10:00:00.000000000'
      minLatitude: 51.1722
      minLongitude: -164.2163
      minTime: '2003-09-11T13:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Lat
          - Long
          - datetime
          - depth_m
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810449/CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment01Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7994e042bdc065)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bf43fe497b8db401)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68372
      maxLongitude: -151.20727
      maxTime: '2019-05-24T16:30:00.000000000'
      minLatitude: 59.62888
      minLongitude: -151.43054
      minTime: '2019-05-22T16:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810371/KBDeployment01Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment01Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(215bfee784fbb91f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f678319b16ddfa67)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.67283
      maxLongitude: -151.16229
      maxTime: '2020-06-05T22:10:00.000000000'
      minLatitude: 59.57147
      minLongitude: -151.3842
      minTime: '2020-06-02T22:10:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810372/KBDeployment01Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment02Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(403b5c5b50e0e30f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ed6e39ff3da9d122)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.71686
      maxLongitude: -151.11786
      maxTime: '2019-05-26T23:10:00.000000000'
      minLatitude: 59.64345
      minLongitude: -151.37748
      minTime: '2019-05-24T18:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810373/KBDeployment02Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment02Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8effd340e22a53b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4bb23c55d2b92a80)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.7752
      maxLongitude: -150.98384
      maxTime: '2020-06-07T19:50:00.000000000'
      minLatitude: 59.62973
      minLongitude: -151.21543
      minTime: '2020-06-05T23:10:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810374/KBDeployment02Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment03Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aab8ebab132cf136)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6a41aba1fa550870)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.78231
      maxLongitude: -151.00314
      maxTime: '2019-06-03T23:00:00.000000000'
      minLatitude: 59.66006
      minLongitude: -151.25535
      minTime: '2019-06-02T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810375/KBDeployment03Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment03Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f9c8ff35b504a0c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9a11f36bca40e778)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.65914
      maxLongitude: -151.15243
      maxTime: '2020-06-08T21:50:00.000000000'
      minLatitude: 59.65429
      minLongitude: -151.18413
      minTime: '2020-06-07T20:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810376/KBDeployment03Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment04Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f059f705da679aad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0d450100af0e0887)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.78181
      maxLongitude: -151.0085
      maxTime: '2019-06-06T14:44:00.000000000'
      minLatitude: 59.65825
      minLongitude: -151.30257
      minTime: '2019-06-04T00:14:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810377/KBDeployment04Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment04Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88e8b71031d674d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e6f41e85d346a6e2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73408
      maxLongitude: -151.04615
      maxTime: '2020-06-11T02:30:00.000000000'
      minLatitude: 59.63096
      minLongitude: -151.25581
      minTime: '2020-06-09T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810378/KBDeployment04Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment05Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1014fdebe05865a1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6f8eea9f01529b1a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66538
      maxLongitude: -151.18514
      maxTime: '2019-07-04T14:30:00.000000000'
      minLatitude: 59.56698
      minLongitude: -151.49096
      minTime: '2019-07-02T15:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810381/KBDeployment05Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment05Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4cc5a3315bcc2c03)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a04c12781fd2c9d1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66765
      maxLongitude: -151.15436
      maxTime: '2020-07-04T20:10:00.000000000'
      minLatitude: 59.57379
      minLongitude: -151.30445
      minTime: '2020-07-02T21:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810383/KBDeployment05Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment06Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(51d938ebea92236a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(aab8acb7bf9c14a2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77112
      maxLongitude: -150.98315
      maxTime: '2019-07-07T23:00:00.000000000'
      minLatitude: 59.63572
      minLongitude: -151.24658
      minTime: '2019-07-04T14:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810384/KBDeployment06Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment06Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57e798d73b544448)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(58d11dc07fb8d2d8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58505
      maxLongitude: -151.26189
      maxTime: '2020-07-03T23:50:00.000000000'
      minLatitude: 59.55146
      minLongitude: -151.43017
      minTime: '2020-07-02T22:40:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810385/KBDeployment06Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment07Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b2cfc0dd5a6d86df)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(79dae4bae17119b2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68577
      maxLongitude: -151.12856
      maxTime: '2019-07-30T22:50:00.000000000'
      minLatitude: 59.64098
      minLongitude: -151.44016
      minTime: '2019-07-28T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810386/KBDeployment07Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment07Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0854b43b5a0fe499)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(dfe4f379b645a641)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58861
      maxLongitude: -151.26264
      maxTime: '2020-07-04T21:50:00.000000000'
      minLatitude: 59.55365
      minLongitude: -151.47328
      minTime: '2020-07-04T00:20:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810387/KBDeployment07Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment08Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d5e11f46282eb36)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3dbadb73414ec545)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77246
      maxLongitude: -150.98571
      maxTime: '2019-08-03T21:20:00.000000000'
      minLatitude: 59.64959
      minLongitude: -151.30557
      minTime: '2019-07-31T16:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810388/KBDeployment08Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment08Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4800d29d5b795c64)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(50f124d0b76d357c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66251
      maxLongitude: -151.15708
      maxTime: '2020-07-07T03:10:00.000000000'
      minLatitude: 59.57518
      minLongitude: -151.3367
      minTime: '2020-07-05T00:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810389/KBDeployment08Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment09Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(885de3b6ee1e7ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ea7cf01d7f7dac26)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73992
      maxLongitude: -151.04925
      maxTime: '2019-09-01T00:40:00.000000000'
      minLatitude: 59.65877
      minLongitude: -151.2945
      minTime: '2019-08-28T22:40:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810390/KBDeployment09Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment09Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88a1d11bd3b6132d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(467e9e90d56c3a94)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.60907
      maxLongitude: -151.34982
      maxTime: '2020-07-06T20:50:00.000000000'
      minLatitude: 59.52323
      minLongitude: -151.65831
      minTime: '2020-07-05T01:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810391/KBDeployment09Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment10Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b831b4c7562787f2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(48fb1d5c55ca9998)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77991
      maxLongitude: -151.01485
      maxTime: '2020-07-08T23:10:00.000000000'
      minLatitude: 59.65689
      minLongitude: -151.23468
      minTime: '2020-07-07T03:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810393/KBDeployment10Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment11Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8ebf8f159967390)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3053ee9a9f375e34)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.76524
      maxLongitude: -151.37152
      maxTime: '2020-07-09T02:00:00.000000000'
      minLatitude: 59.51209
      minLongitude: -151.8709
      minTime: '2020-07-07T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810394/KBDeployment11Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment12Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a64130c02a4ea95)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1dbf72a6128379e1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.65844
      maxLongitude: -151.16331
      maxTime: '2020-08-04T00:40:00.000000000'
      minLatitude: 59.56175
      minLongitude: -151.29192
      minTime: '2020-08-01T23:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810395/KBDeployment12Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment13Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16e59e54a37d091a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ab59ac838b349715)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.61719
      maxLongitude: -151.38166
      maxTime: '2020-08-02T19:40:00.000000000'
      minLatitude: 59.51093
      minLongitude: -151.62815
      minTime: '2020-08-01T23:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810396/KBDeployment13Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment14Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(27bd4517c07b5c2e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3401dabc8b0691ed)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73829
      maxLongitude: -151.34994
      maxTime: '2020-08-04T22:20:00.000000000'
      minLatitude: 59.53385
      minLongitude: -151.91654
      minTime: '2020-08-03T00:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810397/KBDeployment14Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment15Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7d94f6e18e5b13ff)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fa36c1bce23a1ad6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73444
      maxLongitude: -151.03718
      maxTime: '2020-08-07T21:10:00.000000000'
      minLatitude: 59.57278
      minLongitude: -151.33137
      minTime: '2020-08-04T01:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810398/KBDeployment15Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment16Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c22439ef1b11666)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(51582dae00cd43bc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.64329
      maxLongitude: -151.23952
      maxTime: '2020-08-06T21:50:00.000000000'
      minLatitude: 59.55292
      minLongitude: -151.81143
      minTime: '2020-08-05T00:50:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810399/KBDeployment16Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment17Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f19ac448fea01d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b71ccc7565f9feb9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.62946
      maxLongitude: -151.35956
      maxTime: '2020-09-15T19:50:00.000000000'
      minLatitude: 59.55423
      minLongitude: -151.57116
      minTime: '2020-09-14T23:10:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810400/KBDeployment17Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment18Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ec24bb9862bcd055)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(89f4d775a6d94683)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.76856
      maxLongitude: -151.04491
      maxTime: '2020-09-19T21:10:00.000000000'
      minLatitude: 59.65431
      minLongitude: -151.30654
      minTime: '2020-09-15T04:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810401/KBDeployment18Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment19Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41ed7062545a6efe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a2f1f1b94b314535)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68016
      maxLongitude: -151.37246
      maxTime: '2020-09-17T21:30:00.000000000'
      minLatitude: 59.54424
      minLongitude: -151.80654
      minTime: '2020-09-16T02:10:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810402/KBDeployment19Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment20Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bd993820514deb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(834f809fd791d15c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58614
      maxLongitude: -151.37893
      maxTime: '2020-09-19T22:00:00.000000000'
      minLatitude: 59.55083
      minLongitude: -151.58827
      minTime: '2020-09-18T23:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810403/KBDeployment20Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment01Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ef65878a2fe8f59b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f451864c29c8b23)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.70586
      maxLongitude: -134.99308
      maxTime: '2019-07-11T21:40:00.000000000'
      minLatitude: 58.64083
      minLongitude: -135.12002
      minTime: '2019-07-10T17:20:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810404/LCDeployment01Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment01Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3759453bd17cdd40)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c2b39cb19790bb8f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.9592
      maxLongitude: -134.81422
      maxTime: '2020-06-09T16:30:00.000000000'
      minLatitude: 58.49284
      minLongitude: -135.29712
      minTime: '2020-06-06T19:10:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810405/LCDeployment01Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment02Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8fa234bea635d75c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a3055f5dedbc93fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.98468
      maxLongitude: -134.84661
      maxTime: '2019-11-13T00:00:00.000000000'
      minLatitude: 57.09672
      minLongitude: -156.45087
      minTime: '2019-08-15T20:30:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810406/LCDeployment02Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment02Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33bc8bb1959a0145)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a3c81fdafdf62e6b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.66793
      maxLongitude: -134.83333
      maxTime: '2020-06-21T18:30:00.000000000'
      minLatitude: 58.49903
      minLongitude: -134.98551
      minTime: '2020-06-19T23:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810407/LCDeployment02Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment03Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560856445339a256)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6cb971534025445e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.62373
      maxLongitude: -134.86276
      maxTime: '2019-09-05T05:00:00.000000000'
      minLatitude: 58.065
      minLongitude: -136.03644
      minTime: '2019-08-28T23:20:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810408/LCDeployment03Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment03Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6f50d29f5994c50e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(776855ec445f6fc8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.04533
      maxLongitude: -134.88265
      maxTime: '2020-08-07T00:00:00.000000000'
      minLatitude: 58.41289
      minLongitude: -135.37793
      minTime: '2020-07-23T00:00:00.000000000'
      plots:
        data:
          c: depth_m
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: simplecache://::https://researchworkspace.com/files/41810409/LCDeployment03Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a02c7909de04a249:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaf607a8e5429ebc)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a04c12781fd2c9d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4cc5a3315bcc2c03)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a2f1f1b94b314535:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41ed7062545a6efe)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3055f5dedbc93fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8fa234bea635d75c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3c81fdafdf62e6b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33bc8bb1959a0145)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aa9af3672609242d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3edaa61cfa328fe9)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aab8acb7bf9c14a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(51d938ebea92236a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aab8ebab132cf136:
    kwargs:
      data: '{data(fa07167d8b9d47d8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aaf607a8e5429ebc:
    kwargs:
      data: '{data(dcc9442fa082dfe4)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ab59ac838b349715:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16e59e54a37d091a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  acdd2933c464cceb:
    kwargs:
      data: '{data(ed7792346054dff6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b094803121263a25:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(370e968d4013c2d0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0ad7de30eda2158:
    kwargs:
      data: '{data(47842382d30d5e95)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b17f6bf6833cfba1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b4ebdad6158659a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b1d848a050f6ee0b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(873b2d34ff743a25)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b2cfc0dd5a6d86df:
    kwargs:
      data: '{data(9555650df5438173)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b398d7067bb8ca24:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34ab148ca70b646e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b6ad81034a5d3176:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0ad7de30eda2158)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b71ccc7565f9feb9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f19ac448fea01d7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b831b4c7562787f2:
    kwargs:
      data: '{data(b53c09b0be0d3285)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bb4a8485ae6501ac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6f06f0f435cf0af6)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf43fe497b8db401:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7994e042bdc065)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bfdc4c40690add6c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8d9028ef2e7876d8)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c13c229f6d906e40:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7b06bc6e97f6b76d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c222310f1a32a71b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29e1cc2610f22a86)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2b39cb19790bb8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3759453bd17cdd40)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c3882b1550753b69:
    kwargs:
      data: '{data(1ad79571107fc657)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c4548b0bbe2dd2cd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d80d8bc33fa53e90)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c6929cdd79681db6:
    kwargs:
      data: '{data(f4e3f5891e1a9bcb)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c77088df2130362d:
    kwargs:
      data: '{data(a90b48a5174f3ebe)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8effd340e22a53b:
    kwargs:
      data: '{data(757eb51a6d7efc3a)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cb6012eb997ec385:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7650640c87ed2d02)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cbb6c2149c9cb405:
    kwargs:
      data: '{data(364fbf55cef088b7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cf809c8ff1e986c2:
    kwargs:
      data: '{data(16c85838d235ffc9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cf89df106d82af5d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(daa5640bfd113d8c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cfff81351bb8d043:
    kwargs:
      data: '{data(c1027798a452e6b1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d397f73351ff5a10:
    kwargs:
      data: '{data(f3ae7fe6ae87c057)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d41424e8456eb392:
    kwargs:
      data: '{data(2a21cbd400d23e35)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d6f72865d1ca39e4:
    kwargs:
      data: '{data(6ad958ff889c3e6e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d80d8bc33fa53e90:
    kwargs:
      data: '{data(e67ede96240194f1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d8ed7d077716e370:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(821710c9ded7f0f5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  da15e0a823570774:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(acdd2933c464cceb)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  daa5640bfd113d8c:
    kwargs:
      data: '{data(673492111ccd7afb)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  db277995df099e3d:
    kwargs:
      data: '{data(086f0f699bdbb4ef)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dc9bc534c030e369:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cf809c8ff1e986c2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ddc44226e8022a82:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d41424e8456eb392)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  de4abc8d7ba8d9cd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb041d78ec26ce6b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dfa9d9849b8ec381:
    kwargs:
      data: '{data(d3417d31c1593643)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dfe4f379b645a641:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0854b43b5a0fe499)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e58ce56d0456e88b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eecf0050d07cb01)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e656cfc0917a6bd0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c3882b1550753b69)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e67187206ac5a70e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c7c23fd50371063)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6f41e85d346a6e2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88e8b71031d674d2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e8675edfaa9d2888:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(84a142701f0e9dcf)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e8ebf8f159967390:
    kwargs:
      data: '{data(39d4f5aff42129cc)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ea7cf01d7f7dac26:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(885de3b6ee1e7ec2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eb041d78ec26ce6b:
    kwargs:
      data: '{data(6e8e139d3f523768)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eb6f6028495592e3:
    kwargs:
      data: '{data(9f7c40560c09c41d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ec24bb9862bcd055:
    kwargs:
      data: '{data(96adc600ca4e4238)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ed6e39ff3da9d122:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(403b5c5b50e0e30f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ef65878a2fe8f59b:
    kwargs:
      data: '{data(d5bdd06cebadd89c)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f059f705da679aad:
    kwargs:
      data: '{data(f2ca46e9ee291fac)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f288b4e9eeb4810e:
    kwargs:
      data: '{data(e762400f04d514d2)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f319dd028ab0651a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c82ff813d4582e5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6704a2f74133d2b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7892540c0c5f624c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f678319b16ddfa67:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(215bfee784fbb91f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f9387191d0792f2a:
    kwargs:
      data: '{data(00481d32cf6cdb74)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
      storage_options:
        simplecache:
          cache_storage: /Users/kthyng/Library/Caches/cook-inlet-catalogs
          same_names: true
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f940c8499fe21955:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cbb6c2149c9cb405)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa36c1bce23a1ad6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7d94f6e18e5b13ff)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
metadata:
  featuretype: trajectory
  header_names: null
  included: true
  key_variables:
  - salt
  - temp
  map:
    coastline: false
    geo: true
    height: 700
    kind: paths
    legend: false
    line_width: 5
    tiles: true
    title: drifters_uaf
    width: 600
    x: longitude
    xlabel: Longitude [W]
    y: latitude
    ylabel: Latitude [N]
  map_description: Drifters
  maplabels:
    fontscale: 1.5
    geo: true
    hover: false
    kind: labels
    text: station
    text_alpha: 0.5
    text_baseline: bottom
    text_color: black
    text_font_size: 10pt
    x: longitude
    y: latitude
  maptype: box
  maxLatitude: 64.03285
  maxLongitude: -132.28854
  maxTime: '2020-09-19T22:00:00.000000000'
  minLatitude: 46.36621
  minLongitude: -198.81437
  minTime: '2003-04-06T09:00:00.000000000'
  notes: These are accessed from Research Workspace.
  overall_desc: Drifters (UAF)
  project_name: Drifters (UAF), multiple projects
  summary: "Drifters run by Mark Johnson and others out of UAF with various years\
    \ and drogue depths.\n        \n* 2003: 7.5m (Cook Inlet)\n* 2004: 5m (Cook Inlet)\n\
    * 2005: 5m, 80m (Cook Inlet)\n* 2006: 5m (Cook Inlet)\n* 2012: 1m (Cook Inlet),\
    \ 15m (Cook Inlet)\n* 2013: 1m (Cook Inlet), 15m (Cook Inlet)\n* 2014: 1m (Cook\
    \ Inlet)\n* 2019: 1m (Kachemak Bay, Lynn Canal)\n* 2020: 1m (Kachemak Bay, Lynn\
    \ Canal)\n\nDescriptive summary of later drifter deployment: https://www.alaska.edu/epscor/about/newsletters/May-2022-feature-current-events.php,\
    \ data portal: https://ak-epscor.portal.axds.co/\n"
  time: From 2003 to 2020, variable
user_parameters: {}
version: 2

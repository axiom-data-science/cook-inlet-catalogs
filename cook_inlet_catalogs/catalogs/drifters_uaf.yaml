aliases:
  CIDrifter0001Y2012_MicrostarSurfaceAt1M: CIDrifter0001Y2012_MicrostarSurfaceAt1M
  CIDrifter0002Y2012_MicrostarSurfaceAt1M: CIDrifter0002Y2012_MicrostarSurfaceAt1M
  CIDrifter0003Y2012_MicrostarSurfaceAt1M: CIDrifter0003Y2012_MicrostarSurfaceAt1M
  CIDrifter0004Y2012_MicrostarSurfaceAt1M: CIDrifter0004Y2012_MicrostarSurfaceAt1M
  CIDrifter0005Y2012_MicrostarSurfaceAt1M: CIDrifter0005Y2012_MicrostarSurfaceAt1M
  CIDrifter0006Y2012_MicrostarSurfaceAt1M: CIDrifter0006Y2012_MicrostarSurfaceAt1M
  CIDrifter0007Y2013_MicrostarSurfaceAt1M: CIDrifter0007Y2013_MicrostarSurfaceAt1M
  CIDrifter0008Y2013_MicrostarSurfaceAt1M: CIDrifter0008Y2013_MicrostarSurfaceAt1M
  CIDrifter0009Y2013_MicrostarSurfaceAt1M: CIDrifter0009Y2013_MicrostarSurfaceAt1M
  CIDrifter0010Y2013_MicrostarSurfaceAt1M: CIDrifter0010Y2013_MicrostarSurfaceAt1M
  CIDrifter0011Y2012_SubsurfaceDrogueAt15M: CIDrifter0011Y2012_SubsurfaceDrogueAt15M
  CIDrifter0012Y2012_SubsurfaceDrogueAt15M: CIDrifter0012Y2012_SubsurfaceDrogueAt15M
  CIDrifter0013Y2012_SubsurfaceDrogueAt15M: CIDrifter0013Y2012_SubsurfaceDrogueAt15M
  CIDrifter0014Y2012_SubsurfaceDrogueAt15M: CIDrifter0014Y2012_SubsurfaceDrogueAt15M
  CIDrifter0015Y2012_SubsurfaceDrogueAt15M: CIDrifter0015Y2012_SubsurfaceDrogueAt15M
  CIDrifter0016Y2012_SubsurfaceDrogueAt15M: CIDrifter0016Y2012_SubsurfaceDrogueAt15M
  CIDrifter0017Y2013_SubsurfaceDrogueAt15M: CIDrifter0017Y2013_SubsurfaceDrogueAt15M
  CIDrifter0018Y2013_SubsurfaceDrogueAt15M: CIDrifter0018Y2013_SubsurfaceDrogueAt15M
  CIDrifter0019Y2013_SubsurfaceDrogueAt15M: CIDrifter0019Y2013_SubsurfaceDrogueAt15M
  CIDrifter0020Y2013_SubsurfaceDrogueAt15M: CIDrifter0020Y2013_SubsurfaceDrogueAt15M
  CIDrifter0021Y2013_MicrostarSurfaceAt1M: CIDrifter0021Y2013_MicrostarSurfaceAt1M
  CIDrifter0022Y2014_MicrostarSurfaceAt1M: CIDrifter0022Y2014_MicrostarSurfaceAt1M
  CIDrifter0023Y2014_MicrostarSurfaceAt1M: CIDrifter0023Y2014_MicrostarSurfaceAt1M
  CIDrifter0024Y2014_MicrostarSurfaceAt1M: CIDrifter0024Y2014_MicrostarSurfaceAt1M
  CIDrifter0190Y2005_SubsurfaceDrogueAt5M: CIDrifter0190Y2005_SubsurfaceDrogueAt5M
  CIDrifter0192Y2005_SubsurfaceDrogueAt5M: CIDrifter0192Y2005_SubsurfaceDrogueAt5M
  CIDrifter0193Y2005_SubsurfaceDrogueAt5M: CIDrifter0193Y2005_SubsurfaceDrogueAt5M
  CIDrifter0197Y2005_SubsurfaceDrogueAt5M: CIDrifter0197Y2005_SubsurfaceDrogueAt5M
  CIDrifter0227Y2004_SubsurfaceDrogueAt5M: CIDrifter0227Y2004_SubsurfaceDrogueAt5M
  CIDrifter0229Y2004_SubsurfaceDrogueAt5M: CIDrifter0229Y2004_SubsurfaceDrogueAt5M
  CIDrifter0230Y2004_SubsurfaceDrogueAt5M: CIDrifter0230Y2004_SubsurfaceDrogueAt5M
  CIDrifter0236Y2004_SubsurfaceDrogueAt5M: CIDrifter0236Y2004_SubsurfaceDrogueAt5M
  CIDrifter0237Y2004_SubsurfaceDrogueAt5M: CIDrifter0237Y2004_SubsurfaceDrogueAt5M
  CIDrifter0246Y2004_SubsurfaceDrogueAt5M: CIDrifter0246Y2004_SubsurfaceDrogueAt5M
  CIDrifter0247Y2004_SubsurfaceDrogueAt5M: CIDrifter0247Y2004_SubsurfaceDrogueAt5M
  CIDrifter0248Y2004_SubsurfaceDrogueAt5M: CIDrifter0248Y2004_SubsurfaceDrogueAt5M
  CIDrifter0627Y2005_SubsurfaceDrogueAt5M: CIDrifter0627Y2005_SubsurfaceDrogueAt5M
  CIDrifter0628Y2005_SubsurfaceDrogueAt5M: CIDrifter0628Y2005_SubsurfaceDrogueAt5M
  CIDrifter0629Y2005_SubsurfaceDrogueAt5M: CIDrifter0629Y2005_SubsurfaceDrogueAt5M
  CIDrifter0630Y2005_SubsurfaceDrogueAt5M: CIDrifter0630Y2005_SubsurfaceDrogueAt5M
  CIDrifter0631Y2005_SubsurfaceDrogueAt5M: CIDrifter0631Y2005_SubsurfaceDrogueAt5M
  CIDrifter0632Y2006_SubsurfaceDrogueAt5M: CIDrifter0632Y2006_SubsurfaceDrogueAt5M
  CIDrifter0633Y2005_SubsurfaceDrogueAt5M: CIDrifter0633Y2005_SubsurfaceDrogueAt5M
  CIDrifter0634Y2005_SubsurfaceDrogueAt5M: CIDrifter0634Y2005_SubsurfaceDrogueAt5M
  CIDrifter0635Y2006_SubsurfaceDrogueAt5M: CIDrifter0635Y2006_SubsurfaceDrogueAt5M
  CIDrifter0636Y2005_SubsurfaceDrogueAt5M: CIDrifter0636Y2005_SubsurfaceDrogueAt5M
  CIDrifter0637Y2005_SubsurfaceDrogueAt5M: CIDrifter0637Y2005_SubsurfaceDrogueAt5M
  CIDrifter0638Y2005_SubsurfaceDrogueAt5M: CIDrifter0638Y2005_SubsurfaceDrogueAt5M
  CIDrifter0639Y2005_SubsurfaceDrogueAt5M: CIDrifter0639Y2005_SubsurfaceDrogueAt5M
  CIDrifter0640Y2005_SubsurfaceDrogueAt5M: CIDrifter0640Y2005_SubsurfaceDrogueAt5M
  CIDrifter0641Y2005_SubsurfaceDrogueAt5M: CIDrifter0641Y2005_SubsurfaceDrogueAt5M
  CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M
  CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M: CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M
  KBDeployment01Y2019: KBDeployment01Y2019
  KBDeployment01Y2020: KBDeployment01Y2020
  KBDeployment02Y2019: KBDeployment02Y2019
  KBDeployment02Y2020: KBDeployment02Y2020
  KBDeployment03Y2019: KBDeployment03Y2019
  KBDeployment03Y2020: KBDeployment03Y2020
  KBDeployment04Y2019: KBDeployment04Y2019
  KBDeployment04Y2020: KBDeployment04Y2020
  KBDeployment05Y2019: KBDeployment05Y2019
  KBDeployment05Y2020: KBDeployment05Y2020
  KBDeployment06Y2019: KBDeployment06Y2019
  KBDeployment06Y2020: KBDeployment06Y2020
  KBDeployment07Y2019: KBDeployment07Y2019
  KBDeployment07Y2020: KBDeployment07Y2020
  KBDeployment08Y2019: KBDeployment08Y2019
  KBDeployment08Y2020: KBDeployment08Y2020
  KBDeployment09Y2019: KBDeployment09Y2019
  KBDeployment09Y2020: KBDeployment09Y2020
  KBDeployment10Y2020: KBDeployment10Y2020
  KBDeployment11Y2020: KBDeployment11Y2020
  KBDeployment12Y2020: KBDeployment12Y2020
  KBDeployment13Y2020: KBDeployment13Y2020
  KBDeployment14Y2020: KBDeployment14Y2020
  KBDeployment15Y2020: KBDeployment15Y2020
  KBDeployment16Y2020: KBDeployment16Y2020
  KBDeployment17Y2020: KBDeployment17Y2020
  KBDeployment18Y2020: KBDeployment18Y2020
  KBDeployment19Y2020: KBDeployment19Y2020
  KBDeployment20Y2020: KBDeployment20Y2020
  LCDeployment01Y2019: LCDeployment01Y2019
  LCDeployment01Y2020: LCDeployment01Y2020
  LCDeployment02Y2019: LCDeployment02Y2019
  LCDeployment02Y2020: LCDeployment02Y2020
  LCDeployment03Y2019: LCDeployment03Y2019
  LCDeployment03Y2020: LCDeployment03Y2020
data:
  0c78cb8df8bedeb0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810698/CIDrifter0639Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  1227ff14efc141a3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810388/KBDeployment08Y2019_data.csv
    metadata: {}
    user_parameters: {}
  1567191614f92b88:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810680/CIDrifter0230Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  17e9f4ca9c38f3ad:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810694/CIDrifter0635Y2006_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  192f5352d3122b29:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810406/LCDeployment02Y2019_data.csv
    metadata: {}
    user_parameters: {}
  25d5262babff87e7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810393/KBDeployment10Y2020_data.csv
    metadata: {}
    user_parameters: {}
  26ed174d0df4dc06:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810395/KBDeployment12Y2020_data.csv
    metadata: {}
    user_parameters: {}
  27e359ededdb3bc4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810452/CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  28b78f3964202223:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810374/KBDeployment02Y2020_data.csv
    metadata: {}
    user_parameters: {}
  28c1a89d5a796514:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810381/KBDeployment05Y2019_data.csv
    metadata: {}
    user_parameters: {}
  2c8921dd75d6e354:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810683/CIDrifter0246Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  2cb4142e6de54442:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810441/CIDrifter0018Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  2d4bd8f16d543a28:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810456/CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  2df7527894840712:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810401/KBDeployment18Y2020_data.csv
    metadata: {}
    user_parameters: {}
  2e604934e15e2dc8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810697/CIDrifter0638Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  2ebc0f1ac7e019c0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810360/CIDrifter0004Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  301252b15a1e544e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810679/CIDrifter0229Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  316f2740c41bc6d3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810459/CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  37f828c86e818d3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810435/CIDrifter0012Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  38724bbb6c233793:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810688/CIDrifter0629Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  38b2ec43dd8716eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810357/CIDrifter0001Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  3ede0be6faa61e71:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810400/KBDeployment17Y2020_data.csv
    metadata: {}
    user_parameters: {}
  3eed76398053a823:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810409/LCDeployment03Y2020_data.csv
    metadata: {}
    user_parameters: {}
  4069bde83da68844:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810684/CIDrifter0247Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  44eed16d41d9f5f0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810383/KBDeployment05Y2020_data.csv
    metadata: {}
    user_parameters: {}
  47b1cac5f27a9c2f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810397/KBDeployment14Y2020_data.csv
    metadata: {}
    user_parameters: {}
  48667e18d3e35297:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810673/CIDrifter0641Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  497b8fa034ae12b1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810396/KBDeployment13Y2020_data.csv
    metadata: {}
    user_parameters: {}
  50114e67de584d72:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810391/KBDeployment09Y2020_data.csv
    metadata: {}
    user_parameters: {}
  51da5c4541852f98:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810696/CIDrifter0637Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  53cdf878ec7cf9ea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810685/CIDrifter0248Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  587993f3c3761aee:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810682/CIDrifter0237Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  58cd2b77485d7462:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810437/CIDrifter0014Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  5ba2f4dbefb89d69:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810386/KBDeployment07Y2019_data.csv
    metadata: {}
    user_parameters: {}
  5ba36f076faca73b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810384/KBDeployment06Y2019_data.csv
    metadata: {}
    user_parameters: {}
  5c3dda75abcdd4a8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810693/CIDrifter0634Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  5d9571067cd4cd4b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810449/CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  619e7821d78bde49:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810399/KBDeployment16Y2020_data.csv
    metadata: {}
    user_parameters: {}
  61f70a1c79b9c0b1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810363/CIDrifter0007Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  6242e92a63affd31:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810405/LCDeployment01Y2020_data.csv
    metadata: {}
    user_parameters: {}
  629a73c5401cce02:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810675/CIDrifter0192Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  65a5997c57e4e51f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810454/CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  6b243c11cbfb3361:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810378/KBDeployment04Y2020_data.csv
    metadata: {}
    user_parameters: {}
  7437350bd28664a0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810440/CIDrifter0017Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  7563d4914a1e8c3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810403/KBDeployment20Y2020_data.csv
    metadata: {}
    user_parameters: {}
  7a992a7e9ff4a965:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810371/KBDeployment01Y2019_data.csv
    metadata: {}
    user_parameters: {}
  7cf728c00b74f589:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810461/CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  7e4e457c9f90839a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810436/CIDrifter0013Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  7ffb7be252ff0e09:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810373/KBDeployment02Y2019_data.csv
    metadata: {}
    user_parameters: {}
  80f54fda31eec6fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810404/LCDeployment01Y2019_data.csv
    metadata: {}
    user_parameters: {}
  82753eb39fd608b7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810674/CIDrifter0190Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  83f30d93085c0d9d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810387/KBDeployment07Y2020_data.csv
    metadata: {}
    user_parameters: {}
  857072d61d4f4edd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810390/KBDeployment09Y2019_data.csv
    metadata: {}
    user_parameters: {}
  863216b258117a4b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810394/KBDeployment11Y2020_data.csv
    metadata: {}
    user_parameters: {}
  88940853615b5aec:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810455/CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  8ae0e59582891ba3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810372/KBDeployment01Y2020_data.csv
    metadata: {}
    user_parameters: {}
  8d6d2b4acdb46476:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810362/CIDrifter0006Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  8f1d8a4eef4887be:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810359/CIDrifter0003Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  970375bf74131777:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810438/CIDrifter0015Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  9785c6065ada4a9e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810433/CIDrifter0020Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  99cc5b5590228f74:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810366/CIDrifter0010Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  99f6fa5198ef241d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810398/KBDeployment15Y2020_data.csv
    metadata: {}
    user_parameters: {}
  9a4576579429d244:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810368/CIDrifter0022Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  9dce031f884e01ff:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810407/LCDeployment02Y2020_data.csv
    metadata: {}
    user_parameters: {}
  a21be55d8df672a6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810361/CIDrifter0005Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  a2a6deba6362693b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810367/CIDrifter0021Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  a52c0c9ba6fc8535:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810385/KBDeployment06Y2020_data.csv
    metadata: {}
    user_parameters: {}
  a5956dc7bc5dd2a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810408/LCDeployment03Y2019_data.csv
    metadata: {}
    user_parameters: {}
  ad66fa9beb338b2d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810699/CIDrifter0640Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  aea73d03132de58d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810375/KBDeployment03Y2019_data.csv
    metadata: {}
    user_parameters: {}
  b27e8c9c100d4099:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810691/CIDrifter0632Y2006_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  b5f01e4140b77c9d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810369/CIDrifter0023Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  ba06daf4dca1413f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810376/KBDeployment03Y2020_data.csv
    metadata: {}
    user_parameters: {}
  ba698c036a9cdeb5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810458/CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  bfed1a7b61ab9d74:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810450/CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  c16dec05e8d75e37:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810676/CIDrifter0193Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  c9ab37379912967f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810365/CIDrifter0009Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  cdc9920c64ca682a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810442/CIDrifter0019Y2013_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  cde8e527a088b760:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810681/CIDrifter0236Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  d0f99a327ecc80c9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810457/CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  d2e563d4265c984d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810451/CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  d39f79e807b9f8d4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810687/CIDrifter0628Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  d3f0e7f98676c8a8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810377/KBDeployment04Y2019_data.csv
    metadata: {}
    user_parameters: {}
  d6f0d7798bd56025:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810364/CIDrifter0008Y2013_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  d9e8bc0bee07f248:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810402/KBDeployment19Y2020_data.csv
    metadata: {}
    user_parameters: {}
  de16ecc542f9e377:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810358/CIDrifter0002Y2012_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
  de5d8f49fde46cdd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810453/CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  e04a422fd326dcd8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810695/CIDrifter0636Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  e585c59f50f50cda:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810678/CIDrifter0227Y2004_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  e82cf4ddf4000cb8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810692/CIDrifter0633Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  eb5cbd211bfcc76b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810677/CIDrifter0197Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  eba841d50d6bbce8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810439/CIDrifter0016Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  eed2bf537d247602:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810460/CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M_data.csv
    metadata: {}
    user_parameters: {}
  ef909187502e8640:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810434/CIDrifter0011Y2012_SubsurfaceDrogueAt15M_data.csv
    metadata: {}
    user_parameters: {}
  f10584acb4261936:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810389/KBDeployment08Y2020_data.csv
    metadata: {}
    user_parameters: {}
  f32c04a5cca07811:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810689/CIDrifter0630Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  f75da3b40fd064a4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810686/CIDrifter0627Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  fa9775b1035224b0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810690/CIDrifter0631Y2005_SubsurfaceDrogueAt5M_data.csv
    metadata: {}
    user_parameters: {}
  fd6c9e9663f110ff:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://researchworkspace.com/files/41810370/CIDrifter0024Y2014_MicrostarSurfaceAt1M_data.csv
    metadata: {}
    user_parameters: {}
entries:
  00923cbb5fcb594b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4698e2175d26b2c5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00bf0090abf63c71:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7f5136ee6e32e62)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00cd5c66ece909a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d47dd9b9464ced4a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00f267efd983fda9:
    kwargs:
      data: '{data(99f6fa5198ef241d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  016d277095f2d192:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2cbb6dc7a8ebd968)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  019685857c57602f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e32c7952b69a78c4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01a6d8344e0e9d5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8226ca4b45e910bf)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  026de1e7eac2f922:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5f48e0c9a98b7c5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  03cb4fdbee8fe0a5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ebacaea61b6e1945)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0496d47b62f791bb:
    kwargs:
      data: '{data(e04a422fd326dcd8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  054fdaa2712b6937:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6915042599a847a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0594fcecd70d9933:
    kwargs:
      data: '{data(1227ff14efc141a3)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0abfa0bf5258c115:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b3dfaa33abf859d2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b4d1e12886e67a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f146f67f0418c6eb)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b70919e87e612f3:
    kwargs:
      data: '{data(83f30d93085c0d9d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0ccc475698cd1b4c:
    kwargs:
      data: '{data(619e7821d78bde49)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0cd3260e74f64e0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(27e7ca302284ccf4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0fd8474a605aa7e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dbcb5cc8a20799f0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1085b1632ba356cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d965f8ac5d853bc7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  11c76dca7e623b86:
    kwargs:
      data: '{data(80f54fda31eec6fe)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  14c9028841a87cd6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7df687ebf85dfc42)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  17b9d0ee524b32a6:
    kwargs:
      data: '{data(8ae0e59582891ba3)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1c54f51c06a11cf5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d7323d9097adc69)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1f2dfb9699d8234a:
    kwargs:
      data: '{data(28b78f3964202223)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  21373b571c8781ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(69fb6d32e8f3d232)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  223a3c6ddffd0e8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c250c839e779f879)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  228142428fdc4f76:
    kwargs:
      data: '{data(d3f0e7f98676c8a8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2394b439e05bb00d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0b70919e87e612f3)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  25f316d9b871ccd8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9f8f8944ad1e98c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  262da0a494831777:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b28a3a292632d0af)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  27e7ca302284ccf4:
    kwargs:
      data: '{data(48667e18d3e35297)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a3b389ba73b30bf:
    kwargs:
      data: '{data(37f828c86e818d3c)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a5b0cceee1874a4:
    kwargs:
      data: '{data(de16ecc542f9e377)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a5e318213215396:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(847aa90594d7705f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2b011908eadb15ca:
    kwargs:
      data: '{data(65a5997c57e4e51f)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2cbb6dc7a8ebd968:
    kwargs:
      data: '{data(27e359ededdb3bc4)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2e0982c5adc0cf6c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e84fef50455b651)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ea67274e9184570:
    kwargs:
      data: '{data(cdc9920c64ca682a)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2faaa3dfa4e3f0fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b02d850faee442e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  300c90401dfc256c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(870d5a3b15494871)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  302990fa11eb8b78:
    kwargs:
      data: '{data(de5d8f49fde46cdd)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  30b50458cba3d0eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8d3de4c51e81b0b2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33ab6b1b59df2011:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(728875cbea2217e8)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  342bd96bb3082088:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a12cc0686b8346)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  373a49d733fa366f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa7e885a5d3f9ba0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  386f4e0645092a41:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b28551867b01a145)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3e94c58689ed46fd:
    kwargs:
      data: '{data(6242e92a63affd31)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  42d30d176d224cda:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9a08350acc250159)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4427115e559c26dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95e697d04f8656e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  45a12cc0686b8346:
    kwargs:
      data: '{data(5ba36f076faca73b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  45dfa763195d7744:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ccc475698cd1b4c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4698e2175d26b2c5:
    kwargs:
      data: '{data(857072d61d4f4edd)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  489b0697307c401c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(581665b69ccb396b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4938bbc4ea510665:
    kwargs:
      data: '{data(192f5352d3122b29)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a8363c3435f3dc0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b19fa6353eb039b0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4d5e1442c1ee61a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b74a575cc006d5b4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ffc1f58b1d07c75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(302990fa11eb8b78)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  509746625f34d54d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88524eba7f103951)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  527beab464575416:
    kwargs:
      data: '{data(a52c0c9ba6fc8535)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  52916799605822ed:
    kwargs:
      data: '{data(d2e563d4265c984d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  55fc7e05bdbb4e13:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9d431c19f06f442c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  581665b69ccb396b:
    kwargs:
      data: '{data(7563d4914a1e8c3c)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  587b098117348e6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a5b0cceee1874a4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b02d850faee442e:
    kwargs:
      data: '{data(9dce031f884e01ff)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5b5959ccd73de1f2:
    kwargs:
      data: '{data(51da5c4541852f98)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d4eda42eefa53ab:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(228142428fdc4f76)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d7323d9097adc69:
    kwargs:
      data: '{data(eed2bf537d247602)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  60d0e43966ae9073:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d7907e3252e95ab2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61020b12117684a1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(de9552653dc5f599)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  646d54675a0ed16a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c562a882440f45bb)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  656baf514f758086:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11c76dca7e623b86)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  65cde78636881edb:
    kwargs:
      data: '{data(8f1d8a4eef4887be)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  66e3dc37e7d0a4ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dda0a9045ab1174b)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67a405b18d7083df:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(777bdafbfb70421c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  68c3b0c174d9e2be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f2dfb9699d8234a)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  68ef5814853fce2e:
    kwargs:
      data: '{data(ad66fa9beb338b2d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  69214480a1f59510:
    kwargs:
      data: '{data(5c3dda75abcdd4a8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  69fb6d32e8f3d232:
    kwargs:
      data: '{data(d9e8bc0bee07f248)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a22a0c73450fd5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65cde78636881edb)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ab9b3502ab69b17:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9d8b99392f3e5a10)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6c91db944d3c605d:
    kwargs:
      data: '{data(17e9f4ca9c38f3ad)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6e84fef50455b651:
    kwargs:
      data: '{data(1567191614f92b88)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7088ad2934d6cb80:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f71f3828ff79e1d7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  728875cbea2217e8:
    kwargs:
      data: '{data(6b243c11cbfb3361)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  72e1913f5c0ab11e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b83356ff81013c34)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72ee550a135a967c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ea67274e9184570)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  777bdafbfb70421c:
    kwargs:
      data: '{data(f10584acb4261936)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7c4cd96c087f2b78:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2b011908eadb15ca)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7d6665314de6ae2c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee69047ee1b1261d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7df687ebf85dfc42:
    kwargs:
      data: '{data(26ed174d0df4dc06)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7e03d77dabc2b01e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0594fcecd70d9933)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ebd86a406636434:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f74e608003953839)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7fb8c3ea2db5ba8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c91db944d3c605d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8226ca4b45e910bf:
    kwargs:
      data: '{data(61f70a1c79b9c0b1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  83e6fe4c0247376a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52916799605822ed)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  84081ece347447e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddd41837214c4905)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  847aa90594d7705f:
    kwargs:
      data: '{data(eba841d50d6bbce8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  86439cde2f6370d5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b469add19b193cb7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  870d5a3b15494871:
    kwargs:
      data: '{data(38724bbb6c233793)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  87909cb520ce122b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95800e0c9162992e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  88524eba7f103951:
    kwargs:
      data: '{data(c16dec05e8d75e37)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  89d6b3f014d21e0f:
    kwargs:
      data: '{data(c9ab37379912967f)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8b4d272ea5a8471c:
    kwargs:
      data: '{data(f32c04a5cca07811)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8d3de4c51e81b0b2:
    kwargs:
      data: '{data(fd6c9e9663f110ff)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8edf2b26666fb2f7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a3b389ba73b30bf)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f12fb5ca0d2cd86:
    kwargs:
      data: '{data(38b2ec43dd8716eb)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  91d5e08aed647553:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(69214480a1f59510)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  929a3c18839e9fa7:
    kwargs:
      data: '{data(7a992a7e9ff4a965)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  955900b6529954cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(17b9d0ee524b32a6)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  95800e0c9162992e:
    kwargs:
      data: '{data(b27e8c9c100d4099)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  991fe7f217b1f687:
    kwargs:
      data: '{data(301252b15a1e544e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9a08350acc250159:
    kwargs:
      data: '{data(8d6d2b4acdb46476)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9b407f7e53012073:
    kwargs:
      data: '{data(25d5262babff87e7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9d431c19f06f442c:
    kwargs:
      data: '{data(7437350bd28664a0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9d4d86b2b2ae24ff:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b5959ccd73de1f2)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9d8b99392f3e5a10:
    kwargs:
      data: '{data(aea73d03132de58d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9e79ee5443cf9db9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e57ca268df7a1ddc)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f6b48f3a2d88c8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cf517a8ac2adccc0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9fb47ecde71d470a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9d6f1ea3781fe96)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0001Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f12fb5ca0d2cd86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c1dd4f56ea1ddf8e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.19537
      maxLongitude: -151.18589
      maxTime: '2012-08-15T21:00:00.000000000'
      minLatitude: 59.48805
      minLongitude: -152.31923
      minTime: '2012-06-01T02:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810357/CIDrifter0001Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0002Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a5b0cceee1874a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(587b098117348e6f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.75698
      maxLongitude: -151.03107
      maxTime: '2012-08-19T02:00:00.000000000'
      minLatitude: 59.46476
      minLongitude: -151.9143
      minTime: '2012-06-15T18:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810358/CIDrifter0002Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0003Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65cde78636881edb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6a22a0c73450fd5e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.8957
      maxLongitude: -150.96006
      maxTime: '2012-08-23T19:00:00.000000000'
      minLatitude: 59.30108
      minLongitude: -153.00315
      minTime: '2012-06-05T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810359/CIDrifter0003Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0004Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b24b83f2a57e1681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e98d0f4a7571702e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.55835
      maxLongitude: -151.37244
      maxTime: '2012-07-06T09:00:00.000000000'
      minLatitude: 59.54404
      minLongitude: -151.40815
      minTime: '2012-07-05T20:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810360/CIDrifter0004Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0005Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7471626d0ee45fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c83f192209f3ae6d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.995
      maxLongitude: -151.3083
      maxTime: '2013-05-31T03:00:00.000000000'
      minLatitude: 59.41774
      minLongitude: -152.21815
      minTime: '2012-07-19T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810361/CIDrifter0005Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0006Y2012_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9a08350acc250159)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(42d30d176d224cda)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.77141
      maxLongitude: -150.98476
      maxTime: '2012-09-02T23:00:00.000000000'
      minLatitude: 59.56145
      minLongitude: -151.47772
      minTime: '2012-08-09T21:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810362/CIDrifter0006Y2012_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0007Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8226ca4b45e910bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01a6d8344e0e9d5e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.75824
      maxLongitude: -151.05757
      maxTime: '2013-05-19T01:00:00.000000000'
      minLatitude: 59.55223
      minLongitude: -151.46505
      minTime: '2013-05-01T03:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810363/CIDrifter0007Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0008Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e32c7952b69a78c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(019685857c57602f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.89782
      maxLongitude: -151.01568
      maxTime: '2013-10-04T22:00:00.000000000'
      minLatitude: 55.97923
      minLongitude: -156.3305
      minTime: '2013-05-16T03:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810364/CIDrifter0008Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0009Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89d6b3f014d21e0f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a37324238f1dbd3e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.39748
      maxLongitude: -151.1627
      maxTime: '2013-07-27T02:00:00.000000000'
      minLatitude: 59.54004
      minLongitude: -152.38437
      minTime: '2013-06-07T09:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810365/CIDrifter0009Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0010Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddd41837214c4905)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(84081ece347447e7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21645
      maxLongitude: -150.95971
      maxTime: '2013-10-13T17:00:00.000000000'
      minLatitude: 57.07587
      minLongitude: -155.78968
      minTime: '2013-06-28T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810366/CIDrifter0010Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0011Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6915042599a847a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(054fdaa2712b6937)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74595
      maxLongitude: -151.04673
      maxTime: '2013-06-27T19:00:00.000000000'
      minLatitude: 59.52029
      minLongitude: -151.83927
      minTime: '2012-06-01T00:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810434/CIDrifter0011Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0012Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2a3b389ba73b30bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8edf2b26666fb2f7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74594
      maxLongitude: -151.04697
      maxTime: '2013-09-25T21:00:00.000000000'
      minLatitude: 59.41832
      minLongitude: -151.92897
      minTime: '2012-06-05T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810435/CIDrifter0012Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0013Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea77e1080852e6f0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f10ccc696abeef7c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74495
      maxLongitude: -151.03306
      maxTime: '2013-11-25T03:00:00.000000000'
      minLatitude: 59.27449
      minLongitude: -152.01804
      minTime: '2012-06-15T18:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810436/CIDrifter0013Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0014Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a574c90ba7aabb8f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e0bda4c5c44f5578)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.65531
      maxLongitude: -151.16792
      maxTime: '2013-11-07T01:00:00.000000000'
      minLatitude: 54.17017
      minLongitude: -163.36817
      minTime: '2012-07-05T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810437/CIDrifter0014Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0015Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc3f5b3cb90944d9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e70d468333980a29)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.50961
      maxLongitude: -151.30863
      maxTime: '2012-08-28T18:00:00.000000000'
      minLatitude: 59.41774
      minLongitude: -151.58559
      minTime: '2012-07-19T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810438/CIDrifter0015Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0016Y2012_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(847aa90594d7705f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2a5e318213215396)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.74473
      maxLongitude: -151.02401
      maxTime: '2013-10-14T01:00:00.000000000'
      minLatitude: 55.95675
      minLongitude: -158.71898
      minTime: '2012-08-09T21:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810439/CIDrifter0016Y2012_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0017Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9d431c19f06f442c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(55fc7e05bdbb4e13)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21189
      maxLongitude: -132.28854
      maxTime: '2014-12-08T00:00:00.000000000'
      minLatitude: 46.36621
      minLongitude: -169.7242
      minTime: '2013-08-21T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810440/CIDrifter0017Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0018Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f595aaadf18c0fc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f152286a98875f56)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.6205
      maxLongitude: -151.78407
      maxTime: '2015-05-03T19:00:00.000000000'
      minLatitude: 52.32094
      minLongitude: -198.81437
      minTime: '2013-10-08T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810441/CIDrifter0018Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0019Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ea67274e9184570)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(72ee550a135a967c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.81209
      maxLongitude: -151.42064
      maxTime: '2014-02-27T01:00:00.000000000'
      minLatitude: 52.51845
      minLongitude: -166.63584
      minTime: '2013-10-09T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810442/CIDrifter0019Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0020Y2013_SubsurfaceDrogueAt15M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b19fa6353eb039b0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4a8363c3435f3dc0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.03285
      maxLongitude: -151.62188
      maxTime: '2014-10-28T01:00:00.000000000'
      minLatitude: 54.23967
      minLongitude: -188.30247
      minTime: '2013-09-28T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810433/CIDrifter0020Y2013_SubsurfaceDrogueAt15M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0021Y2013_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d47dd9b9464ced4a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00cd5c66ece909a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.77121
      maxLongitude: -150.99253
      maxTime: '2013-08-29T01:00:00.000000000'
      minLatitude: 59.56702
      minLongitude: -151.70182
      minTime: '2013-07-24T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810367/CIDrifter0021Y2013_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0022Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3dc1d10b405045)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ee9b30aef68f5c94)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.21938
      maxLongitude: -151.49872
      maxTime: '2014-05-24T22:00:00.000000000'
      minLatitude: 59.54919
      minLongitude: -152.21061
      minTime: '2014-03-28T20:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810368/CIDrifter0022Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0023Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b74a575cc006d5b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4d5e1442c1ee61a8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.56434
      maxLongitude: -151.51154
      maxTime: '2014-03-29T08:00:00.000000000'
      minLatitude: 59.5493
      minLongitude: -151.54371
      minTime: '2014-03-28T20:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810369/CIDrifter0023Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0024Y2014_MicrostarSurfaceAt1M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8d3de4c51e81b0b2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(30b50458cba3d0eb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.28691
      maxLongitude: -151.51238
      maxTime: '2014-05-30T13:00:00.000000000'
      minLatitude: 59.51614
      minLongitude: -152.30924
      minTime: '2014-03-28T21:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810370/CIDrifter0024Y2014_MicrostarSurfaceAt1M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0190Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b9de2bf1dfebf907)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b50cbc9e4bd77e23)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.868
      maxLongitude: -151.6112
      maxTime: '2005-11-26T22:00:00.000000000'
      minLatitude: 59.9343
      minLongitude: -152.5258
      minTime: '2005-09-08T12:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810674/CIDrifter0190Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0192Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c250c839e779f879)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(223a3c6ddffd0e8b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9507
      maxLongitude: -151.2963
      maxTime: '2005-08-29T21:00:00.000000000'
      minLatitude: 60.2858
      minLongitude: -152.0263
      minTime: '2005-08-22T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810675/CIDrifter0192Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0193Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88524eba7f103951)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(509746625f34d54d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6979
      maxLongitude: -151.5981
      maxTime: '2005-11-23T22:00:00.000000000'
      minLatitude: 56.5091
      minLongitude: -155.9587
      minTime: '2005-09-08T15:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810676/CIDrifter0193Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0197Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5f48e0c9a98b7c5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(026de1e7eac2f922)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.866
      maxLongitude: -137.3509
      maxTime: '2006-05-24T22:00:00.000000000'
      minLatitude: 48.7636
      minLongitude: -160.7373
      minTime: '2005-08-22T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810677/CIDrifter0197Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0227Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e0b86c2e008815d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fbbf7ca9a6bc17b1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6813
      maxLongitude: -151.5156
      maxTime: '2004-09-10T22:00:00.000000000'
      minLatitude: 59.8928
      minLongitude: -152.4635
      minTime: '2004-07-15T22:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810678/CIDrifter0227Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0229Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(991fe7f217b1f687)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(baf10d412c6b6f8e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6794
      maxLongitude: -151.648
      maxTime: '2004-11-16T22:00:00.000000000'
      minLatitude: 56.8058
      minLongitude: -155.594
      minTime: '2004-07-15T18:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810679/CIDrifter0229Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0230Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e84fef50455b651)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2e0982c5adc0cf6c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6893
      maxLongitude: -151.5403
      maxTime: '2005-01-12T15:00:00.000000000'
      minLatitude: 49.2317
      minLongitude: -173.6592
      minTime: '2004-09-01T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810680/CIDrifter0230Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0236Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d7907e3252e95ab2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(60d0e43966ae9073)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6866
      maxLongitude: -151.5416
      maxTime: '2004-11-06T22:00:00.000000000'
      minLatitude: 56.6198
      minLongitude: -155.044
      minTime: '2004-09-01T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810681/CIDrifter0236Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0237Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9d6f1ea3781fe96)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9fb47ecde71d470a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8923
      maxLongitude: -151.4442
      maxTime: '2005-07-01T14:00:00.000000000'
      minLatitude: 50.7861
      minLongitude: -181.5597
      minTime: '2004-09-29T21:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810682/CIDrifter0237Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0246Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d965f8ac5d853bc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1085b1632ba356cb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6923
      maxLongitude: -151.5855
      maxTime: '2004-11-03T18:00:00.000000000'
      minLatitude: 57.8984
      minLongitude: -153.9713
      minTime: '2004-09-29T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810683/CIDrifter0246Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0247Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e57ca268df7a1ddc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9e79ee5443cf9db9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6279
      maxLongitude: -151.6499
      maxTime: '2004-12-24T10:00:00.000000000'
      minLatitude: 60.3312
      minLongitude: -151.9862
      minTime: '2004-12-13T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810684/CIDrifter0247Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0248Y2004_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dbcb5cc8a20799f0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0fd8474a605aa7e8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7267
      maxLongitude: -151.5536
      maxTime: '2005-03-21T22:00:00.000000000'
      minLatitude: 57.69
      minLongitude: -154.862
      minTime: '2004-12-12T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810685/CIDrifter0248Y2004_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0627Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7f5136ee6e32e62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00bf0090abf63c71)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7813
      maxLongitude: -151.6032
      maxTime: '2005-07-11T10:00:00.000000000'
      minLatitude: 58.8661
      minLongitude: -153.6654
      minTime: '2005-05-28T12:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810686/CIDrifter0627Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0628Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f146f67f0418c6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0b4d1e12886e67a2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9259
      maxLongitude: -151.3505
      maxTime: '2005-12-27T04:00:00.000000000'
      minLatitude: 59.0078
      minLongitude: -153.3836
      minTime: '2005-11-29T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810687/CIDrifter0628Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0629Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(870d5a3b15494871)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(300c90401dfc256c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.007
      maxLongitude: -151.9272
      maxTime: '2005-12-26T18:00:00.000000000'
      minLatitude: 57.6012
      minLongitude: -155.7416
      minTime: '2005-12-11T10:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810688/CIDrifter0629Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0630Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b4d272ea5a8471c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e2e1a56dd6ac08bf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.9917
      maxLongitude: -151.941
      maxTime: '2005-12-27T04:00:00.000000000'
      minLatitude: 59.0282
      minLongitude: -153.6491
      minTime: '2005-12-11T07:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810689/CIDrifter0630Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0631Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f9f8f8944ad1e98c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(25f316d9b871ccd8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.8885
      maxLongitude: -151.6054
      maxTime: '2006-01-01T07:00:00.000000000'
      minLatitude: 59.0321
      minLongitude: -153.6536
      minTime: '2005-12-11T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810690/CIDrifter0631Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0632Y2006_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95800e0c9162992e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(87909cb520ce122b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.6138
      maxLongitude: -151.1742
      maxTime: '2006-07-12T17:00:00.000000000'
      minLatitude: 59.575
      minLongitude: -152.4659
      minTime: '2006-06-01T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810691/CIDrifter0632Y2006_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0633Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cf517a8ac2adccc0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f6b48f3a2d88c8d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.2217
      maxLongitude: -151.8346
      maxTime: '2005-12-12T18:00:00.000000000'
      minLatitude: 59.1262
      minLongitude: -152.0186
      minTime: '2005-12-11T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810692/CIDrifter0633Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0634Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(69214480a1f59510)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91d5e08aed647553)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8157
      maxLongitude: -151.6152
      maxTime: '2006-01-08T23:00:00.000000000'
      minLatitude: 58.9699
      minLongitude: -153.4388
      minTime: '2005-12-24T16:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810693/CIDrifter0634Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0635Y2006_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c91db944d3c605d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7fb8c3ea2db5ba8f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7942
      maxLongitude: -151.1074
      maxTime: '2006-07-26T22:00:00.000000000'
      minLatitude: 59.6772
      minLongitude: -152.5021
      minTime: '2006-05-31T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810694/CIDrifter0635Y2006_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0636Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0496d47b62f791bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(dd6bb0883e6ef706)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8097
      maxLongitude: -151.5838
      maxTime: '2006-01-27T15:00:00.000000000'
      minLatitude: 58.2952
      minLongitude: -153.3291
      minTime: '2005-12-24T15:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810695/CIDrifter0636Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0637Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b5959ccd73de1f2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9d4d86b2b2ae24ff)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.877
      maxLongitude: -151.6131
      maxTime: '2005-12-17T17:00:00.000000000'
      minLatitude: 59.4643
      minLongitude: -153.3432
      minTime: '2005-11-29T02:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810696/CIDrifter0637Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0638Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c49b34209e43d572)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d14e8d8a9886df43)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8547
      maxLongitude: -151.5716
      maxTime: '2005-10-30T00:00:00.000000000'
      minLatitude: 59.1853
      minLongitude: -152.8011
      minTime: '2005-09-16T03:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810697/CIDrifter0638Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0639Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f71f3828ff79e1d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7088ad2934d6cb80)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8111
      maxLongitude: -151.5948
      maxTime: '2005-12-05T20:00:00.000000000'
      minLatitude: 59.4258
      minLongitude: -152.5248
      minTime: '2005-10-26T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810698/CIDrifter0639Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0640Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(68ef5814853fce2e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d796b2a772982849)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.581
      maxLongitude: -151.7218
      maxTime: '2005-12-07T20:00:00.000000000'
      minLatitude: 59.0247
      minLongitude: -153.6683
      minTime: '2005-11-21T06:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810699/CIDrifter0640Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0641Y2005_SubsurfaceDrogueAt5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(27e7ca302284ccf4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0cd3260e74f64e0c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7812
      maxLongitude: -151.5383
      maxTime: '2005-09-22T22:00:00.000000000'
      minLatitude: 60.2953
      minLongitude: -151.9769
      minTime: '2005-09-16T03:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810673/CIDrifter0641Y2005_SubsurfaceDrogueAt5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b28a3a292632d0af)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(262da0a494831777)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8215
      maxLongitude: -151.4056
      maxTime: '2004-01-19T12:00:00.000000000'
      minLatitude: 59.4453
      minLongitude: -153.157
      minTime: '2003-12-14T15:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810450/CIDrifter0907Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52916799605822ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(83e6fe4c0247376a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5815
      maxLongitude: -151.6721
      maxTime: '2004-07-08T22:00:00.000000000'
      minLatitude: 50.6601
      minLongitude: -177.1554
      minTime: '2003-12-20T13:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810451/CIDrifter0908Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2cbb6dc7a8ebd968)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(016d277095f2d192)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.9354
      maxLongitude: -151.2705
      maxTime: '2004-01-28T09:00:00.000000000'
      minLatitude: 58.5651
      minLongitude: -153.8851
      minTime: '2003-12-14T18:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810452/CIDrifter0909Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(302990fa11eb8b78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ffc1f58b1d07c75)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8521
      maxLongitude: -151.5297
      maxTime: '2003-12-14T00:00:00.000000000'
      minLatitude: 59.6003
      minLongitude: -152.4562
      minTime: '2003-04-06T14:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810453/CIDrifter0910Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2b011908eadb15ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7c4cd96c087f2b78)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8385
      maxLongitude: -151.4716
      maxTime: '2003-09-09T22:00:00.000000000'
      minLatitude: 59.484
      minLongitude: -152.8955
      minTime: '2003-04-06T09:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810454/CIDrifter0912Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b469add19b193cb7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(86439cde2f6370d5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7554
      maxLongitude: -151.5835
      maxTime: '2003-06-07T03:00:00.000000000'
      minLatitude: 60.2528
      minLongitude: -152.0512
      minTime: '2003-05-21T23:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810455/CIDrifter0913Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b3dfaa33abf859d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0abfa0bf5258c115)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5582
      maxLongitude: -151.6085
      maxTime: '2003-04-13T10:00:00.000000000'
      minLatitude: 60.2834
      minLongitude: -152.1501
      minTime: '2003-04-06T23:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810456/CIDrifter0914Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dccba3304e689492)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ae0e6a640c3fdf44)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.8219
      maxLongitude: -151.5167
      maxTime: '2003-09-23T23:00:00.000000000'
      minLatitude: 60.0284
      minLongitude: -152.5828
      minTime: '2003-09-10T23:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810457/CIDrifter0991Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e5ce50ba108350d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e4ac469fd602c667)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.5948
      maxLongitude: -151.308
      maxTime: '2003-09-25T21:00:00.000000000'
      minLatitude: 58.8544
      minLongitude: -153.3599
      minTime: '2003-07-06T00:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810458/CIDrifter0994Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d8e13fd938cf80a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e4afa5f41103c1b9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7299
      maxLongitude: -151.4304
      maxTime: '2004-03-29T23:00:00.000000000'
      minLatitude: 50.3348
      minLongitude: -163.3627
      minTime: '2003-07-06T07:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810459/CIDrifter0995Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d7323d9097adc69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1c54f51c06a11cf5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.2224
      maxLongitude: -151.6031
      maxTime: '2003-10-03T22:00:00.000000000'
      minLatitude: 57.5263
      minLongitude: -155.6863
      minTime: '2003-06-17T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810460/CIDrifter0996Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(de9552653dc5f599)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61020b12117684a1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7889
      maxLongitude: -151.6152
      maxTime: '2003-11-05T23:00:00.000000000'
      minLatitude: 59.3939
      minLongitude: -153.4388
      minTime: '2003-06-17T19:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810461/CIDrifter0997Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f74e608003953839)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7ebd86a406636434)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '7.5'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.7963
      maxLongitude: -151.3993
      maxTime: '2004-06-06T10:00:00.000000000'
      minLatitude: 51.1722
      minLongitude: -164.2163
      minTime: '2003-09-11T13:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - Lat
          - Long
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810449/CIDrifter0998Y2003_SubsurfaceDrogueAt7p5M_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment01Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(929a3c18839e9fa7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a56ebc844309457e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68372
      maxLongitude: -151.20727
      maxTime: '2019-05-24T16:30:00.000000000'
      minLatitude: 59.62888
      minLongitude: -151.43054
      minTime: '2019-05-22T16:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810371/KBDeployment01Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment01Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(17b9d0ee524b32a6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(955900b6529954cb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.67283
      maxLongitude: -151.16229
      maxTime: '2020-06-05T22:10:00.000000000'
      minLatitude: 59.57147
      minLongitude: -151.3842
      minTime: '2020-06-02T22:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810372/KBDeployment01Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment02Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b83356ff81013c34)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(72e1913f5c0ab11e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.71686
      maxLongitude: -151.11786
      maxTime: '2019-05-26T23:10:00.000000000'
      minLatitude: 59.64345
      minLongitude: -151.37748
      minTime: '2019-05-24T18:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810373/KBDeployment02Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment02Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f2dfb9699d8234a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(68c3b0c174d9e2be)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.7752
      maxLongitude: -150.98384
      maxTime: '2020-06-07T19:50:00.000000000'
      minLatitude: 59.62973
      minLongitude: -151.21543
      minTime: '2020-06-05T23:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810374/KBDeployment02Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment03Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9d8b99392f3e5a10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6ab9b3502ab69b17)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.78231
      maxLongitude: -151.00314
      maxTime: '2019-06-03T23:00:00.000000000'
      minLatitude: 59.66006
      minLongitude: -151.25535
      minTime: '2019-06-02T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810375/KBDeployment03Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment03Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95e697d04f8656e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4427115e559c26dd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.65914
      maxLongitude: -151.15243
      maxTime: '2020-06-08T21:50:00.000000000'
      minLatitude: 59.65429
      minLongitude: -151.18413
      minTime: '2020-06-07T20:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810376/KBDeployment03Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment04Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(228142428fdc4f76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5d4eda42eefa53ab)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.78181
      maxLongitude: -151.0085
      maxTime: '2019-06-06T14:44:00.000000000'
      minLatitude: 59.65825
      minLongitude: -151.30257
      minTime: '2019-06-04T00:14:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810377/KBDeployment04Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment04Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(728875cbea2217e8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(33ab6b1b59df2011)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73408
      maxLongitude: -151.04615
      maxTime: '2020-06-11T02:30:00.000000000'
      minLatitude: 59.63096
      minLongitude: -151.25581
      minTime: '2020-06-09T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810378/KBDeployment04Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment05Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d0468f1615d729e7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b833173c0e898dd3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66538
      maxLongitude: -151.18514
      maxTime: '2019-07-04T14:30:00.000000000'
      minLatitude: 59.56698
      minLongitude: -151.49096
      minTime: '2019-07-02T15:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810381/KBDeployment05Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment05Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa7e885a5d3f9ba0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(373a49d733fa366f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66765
      maxLongitude: -151.15436
      maxTime: '2020-07-04T20:10:00.000000000'
      minLatitude: 59.57379
      minLongitude: -151.30445
      minTime: '2020-07-02T21:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810383/KBDeployment05Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment06Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a12cc0686b8346)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(342bd96bb3082088)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77112
      maxLongitude: -150.98315
      maxTime: '2019-07-07T23:00:00.000000000'
      minLatitude: 59.63572
      minLongitude: -151.24658
      minTime: '2019-07-04T14:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810384/KBDeployment06Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment06Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(527beab464575416)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c16fb1311c13b2f2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58505
      maxLongitude: -151.26189
      maxTime: '2020-07-03T23:50:00.000000000'
      minLatitude: 59.55146
      minLongitude: -151.43017
      minTime: '2020-07-02T22:40:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810385/KBDeployment06Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment07Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b28551867b01a145)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(386f4e0645092a41)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68577
      maxLongitude: -151.12856
      maxTime: '2019-07-30T22:50:00.000000000'
      minLatitude: 59.64098
      minLongitude: -151.44016
      minTime: '2019-07-28T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810386/KBDeployment07Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment07Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0b70919e87e612f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2394b439e05bb00d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58861
      maxLongitude: -151.26264
      maxTime: '2020-07-04T21:50:00.000000000'
      minLatitude: 59.55365
      minLongitude: -151.47328
      minTime: '2020-07-04T00:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810387/KBDeployment07Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment08Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0594fcecd70d9933)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7e03d77dabc2b01e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77246
      maxLongitude: -150.98571
      maxTime: '2019-08-03T21:20:00.000000000'
      minLatitude: 59.64959
      minLongitude: -151.30557
      minTime: '2019-07-31T16:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810388/KBDeployment08Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment08Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(777bdafbfb70421c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(67a405b18d7083df)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.66251
      maxLongitude: -151.15708
      maxTime: '2020-07-07T03:10:00.000000000'
      minLatitude: 59.57518
      minLongitude: -151.3367
      minTime: '2020-07-05T00:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810389/KBDeployment08Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment09Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4698e2175d26b2c5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00923cbb5fcb594b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73992
      maxLongitude: -151.04925
      maxTime: '2019-09-01T00:40:00.000000000'
      minLatitude: 59.65877
      minLongitude: -151.2945
      minTime: '2019-08-28T22:40:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810390/KBDeployment09Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment09Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eba7bcbaffee533d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c9220c2c15115115)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.60907
      maxLongitude: -151.34982
      maxTime: '2020-07-06T20:50:00.000000000'
      minLatitude: 59.52323
      minLongitude: -151.65831
      minTime: '2020-07-05T01:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810391/KBDeployment09Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment10Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b407f7e53012073)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e0fe796d4da0e033)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.77991
      maxLongitude: -151.01485
      maxTime: '2020-07-08T23:10:00.000000000'
      minLatitude: 59.65689
      minLongitude: -151.23468
      minTime: '2020-07-07T03:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810393/KBDeployment10Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment11Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa7ce393d32a6122)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bba019dc9f3be84d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.76524
      maxLongitude: -151.37152
      maxTime: '2020-07-09T02:00:00.000000000'
      minLatitude: 59.51209
      minLongitude: -151.8709
      minTime: '2020-07-07T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810394/KBDeployment11Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment12Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7df687ebf85dfc42)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(14c9028841a87cd6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.65844
      maxLongitude: -151.16331
      maxTime: '2020-08-04T00:40:00.000000000'
      minLatitude: 59.56175
      minLongitude: -151.29192
      minTime: '2020-08-01T23:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810395/KBDeployment12Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment13Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ebacaea61b6e1945)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(03cb4fdbee8fe0a5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.61719
      maxLongitude: -151.38166
      maxTime: '2020-08-02T19:40:00.000000000'
      minLatitude: 59.51093
      minLongitude: -151.62815
      minTime: '2020-08-01T23:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810396/KBDeployment13Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment14Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(adea08bff099cce5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cef66d41c3c31155)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73829
      maxLongitude: -151.34994
      maxTime: '2020-08-04T22:20:00.000000000'
      minLatitude: 59.53385
      minLongitude: -151.91654
      minTime: '2020-08-03T00:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810397/KBDeployment14Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment15Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00f267efd983fda9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ee369f159f10d5b2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.73444
      maxLongitude: -151.03718
      maxTime: '2020-08-07T21:10:00.000000000'
      minLatitude: 59.57278
      minLongitude: -151.33137
      minTime: '2020-08-04T01:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810398/KBDeployment15Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment16Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ccc475698cd1b4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(45dfa763195d7744)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.64329
      maxLongitude: -151.23952
      maxTime: '2020-08-06T21:50:00.000000000'
      minLatitude: 59.55292
      minLongitude: -151.81143
      minTime: '2020-08-05T00:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810399/KBDeployment16Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment17Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb3d744f780e0c02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(dde761021171c1ae)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.62946
      maxLongitude: -151.35956
      maxTime: '2020-09-15T19:50:00.000000000'
      minLatitude: 59.55423
      minLongitude: -151.57116
      minTime: '2020-09-14T23:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810400/KBDeployment17Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment18Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dda0a9045ab1174b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(66e3dc37e7d0a4ea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.76856
      maxLongitude: -151.04491
      maxTime: '2020-09-19T21:10:00.000000000'
      minLatitude: 59.65431
      minLongitude: -151.30654
      minTime: '2020-09-15T04:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810401/KBDeployment18Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment19Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(69fb6d32e8f3d232)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(21373b571c8781ed)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.68016
      maxLongitude: -151.37246
      maxTime: '2020-09-17T21:30:00.000000000'
      minLatitude: 59.54424
      minLongitude: -151.80654
      minTime: '2020-09-16T02:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810402/KBDeployment19Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  KBDeployment20Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(581665b69ccb396b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(489b0697307c401c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.58614
      maxLongitude: -151.37893
      maxTime: '2020-09-19T22:00:00.000000000'
      minLatitude: 59.55083
      minLongitude: -151.58827
      minTime: '2020-09-18T23:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810403/KBDeployment20Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment01Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11c76dca7e623b86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(656baf514f758086)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.70586
      maxLongitude: -134.99308
      maxTime: '2019-07-11T21:40:00.000000000'
      minLatitude: 58.64083
      minLongitude: -135.12002
      minTime: '2019-07-10T17:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810404/LCDeployment01Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment01Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e94c58689ed46fd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a0d2e46dae819051)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.9592
      maxLongitude: -134.81422
      maxTime: '2020-06-09T16:30:00.000000000'
      minLatitude: 58.49284
      minLongitude: -135.29712
      minTime: '2020-06-06T19:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810405/LCDeployment01Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment02Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4938bbc4ea510665)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a4c2b08e6d6048ef)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.98468
      maxLongitude: -134.84661
      maxTime: '2019-11-13T00:00:00.000000000'
      minLatitude: 57.09672
      minLongitude: -156.45087
      minTime: '2019-08-15T20:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810406/LCDeployment02Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment02Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b02d850faee442e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2faaa3dfa4e3f0fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.66793
      maxLongitude: -134.83333
      maxTime: '2020-06-21T18:30:00.000000000'
      minLatitude: 58.49903
      minLongitude: -134.98551
      minTime: '2020-06-19T23:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810407/LCDeployment02Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment03Y2019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee69047ee1b1261d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7d6665314de6ae2c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 58.62373
      maxLongitude: -134.86276
      maxTime: '2019-09-05T05:00:00.000000000'
      minLatitude: 58.065
      minLongitude: -136.03644
      minTime: '2019-08-28T23:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810408/LCDeployment03Y2019_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  LCDeployment03Y2020:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c562a882440f45bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(646d54675a0ed16a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - Year
          - Month
          - Day
          - Hour
          - Minute
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '1'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables:
      - temp
      - salt
      maptype: box
      maxLatitude: 59.04533
      maxLongitude: -134.88265
      maxTime: '2020-08-07T00:00:00.000000000'
      minLatitude: 58.41289
      minLongitude: -135.37793
      minTime: '2020-07-23T00:00:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - Long
          - depth_m
          - Temperature
          - Lat
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: Long
          xlabel: Longitude [W]
          y: Lat
          ylabel: Latitude [N]
      urlpath: https://researchworkspace.com/files/41810409/LCDeployment03Y2020_data.csv
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a0d2e46dae819051:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e94c58689ed46fd)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a37324238f1dbd3e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89d6b3f014d21e0f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4c2b08e6d6048ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4938bbc4ea510665)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a56ebc844309457e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(929a3c18839e9fa7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a574c90ba7aabb8f:
    kwargs:
      data: '{data(58cd2b77485d7462)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a7471626d0ee45fe:
    kwargs:
      data: '{data(a21be55d8df672a6)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aa7ce393d32a6122:
    kwargs:
      data: '{data(863216b258117a4b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  adea08bff099cce5:
    kwargs:
      data: '{data(47b1cac5f27a9c2f)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ae0e6a640c3fdf44:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dccba3304e689492)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b19fa6353eb039b0:
    kwargs:
      data: '{data(9785c6065ada4a9e)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b24b83f2a57e1681:
    kwargs:
      data: '{data(2ebc0f1ac7e019c0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b28551867b01a145:
    kwargs:
      data: '{data(5ba2f4dbefb89d69)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b28a3a292632d0af:
    kwargs:
      data: '{data(bfed1a7b61ab9d74)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b3dfaa33abf859d2:
    kwargs:
      data: '{data(2d4bd8f16d543a28)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b469add19b193cb7:
    kwargs:
      data: '{data(88940853615b5aec)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b50cbc9e4bd77e23:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b9de2bf1dfebf907)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b74a575cc006d5b4:
    kwargs:
      data: '{data(b5f01e4140b77c9d)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b7f5136ee6e32e62:
    kwargs:
      data: '{data(f75da3b40fd064a4)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b833173c0e898dd3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d0468f1615d729e7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b83356ff81013c34:
    kwargs:
      data: '{data(7ffb7be252ff0e09)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b9de2bf1dfebf907:
    kwargs:
      data: '{data(82753eb39fd608b7)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  baf10d412c6b6f8e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(991fe7f217b1f687)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bba019dc9f3be84d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa7ce393d32a6122)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc3dc1d10b405045:
    kwargs:
      data: '{data(9a4576579429d244)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c16fb1311c13b2f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(527beab464575416)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c1dd4f56ea1ddf8e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f12fb5ca0d2cd86)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c250c839e779f879:
    kwargs:
      data: '{data(629a73c5401cce02)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c49b34209e43d572:
    kwargs:
      data: '{data(2e604934e15e2dc8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c562a882440f45bb:
    kwargs:
      data: '{data(3eed76398053a823)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c6915042599a847a:
    kwargs:
      data: '{data(ef909187502e8640)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c83f192209f3ae6d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7471626d0ee45fe)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c9220c2c15115115:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eba7bcbaffee533d)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cb3d744f780e0c02:
    kwargs:
      data: '{data(3ede0be6faa61e71)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cc3f5b3cb90944d9:
    kwargs:
      data: '{data(970375bf74131777)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cef66d41c3c31155:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(adea08bff099cce5)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cf517a8ac2adccc0:
    kwargs:
      data: '{data(e82cf4ddf4000cb8)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d0468f1615d729e7:
    kwargs:
      data: '{data(28c1a89d5a796514)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d14e8d8a9886df43:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c49b34209e43d572)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d47dd9b9464ced4a:
    kwargs:
      data: '{data(a2a6deba6362693b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d7907e3252e95ab2:
    kwargs:
      data: '{data(cde8e527a088b760)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d796b2a772982849:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(68ef5814853fce2e)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d8e13fd938cf80a7:
    kwargs:
      data: '{data(316f2740c41bc6d3)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d965f8ac5d853bc7:
    kwargs:
      data: '{data(2c8921dd75d6e354)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dbcb5cc8a20799f0:
    kwargs:
      data: '{data(53cdf878ec7cf9ea)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dccba3304e689492:
    kwargs:
      data: '{data(d0f99a327ecc80c9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dd6bb0883e6ef706:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0496d47b62f791bb)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dda0a9045ab1174b:
    kwargs:
      data: '{data(2df7527894840712)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ddd41837214c4905:
    kwargs:
      data: '{data(99cc5b5590228f74)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dde761021171c1ae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb3d744f780e0c02)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  de9552653dc5f599:
    kwargs:
      data: '{data(7cf728c00b74f589)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e0b86c2e008815d6:
    kwargs:
      data: '{data(e585c59f50f50cda)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e0bda4c5c44f5578:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a574c90ba7aabb8f)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e0fe796d4da0e033:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b407f7e53012073)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2e1a56dd6ac08bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b4d272ea5a8471c)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e32c7952b69a78c4:
    kwargs:
      data: '{data(d6f0d7798bd56025)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e4ac469fd602c667:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e5ce50ba108350d4)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e4afa5f41103c1b9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d8e13fd938cf80a7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e57ca268df7a1ddc:
    kwargs:
      data: '{data(4069bde83da68844)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e5ce50ba108350d4:
    kwargs:
      data: '{data(ba698c036a9cdeb5)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e70d468333980a29:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc3f5b3cb90944d9)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e98d0f4a7571702e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b24b83f2a57e1681)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ea77e1080852e6f0:
    kwargs:
      data: '{data(7e4e457c9f90839a)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eba7bcbaffee533d:
    kwargs:
      data: '{data(50114e67de584d72)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ebacaea61b6e1945:
    kwargs:
      data: '{data(497b8fa034ae12b1)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee369f159f10d5b2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00f267efd983fda9)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ee69047ee1b1261d:
    kwargs:
      data: '{data(a5956dc7bc5dd2a9)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee9b30aef68f5c94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3dc1d10b405045)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f10ccc696abeef7c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea77e1080852e6f0)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f146f67f0418c6eb:
    kwargs:
      data: '{data(d39f79e807b9f8d4)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f152286a98875f56:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f595aaadf18c0fc7)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f595aaadf18c0fc7:
    kwargs:
      data: '{data(2cb4142e6de54442)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f5f48e0c9a98b7c5:
    kwargs:
      data: '{data(eb5cbd211bfcc76b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f71f3828ff79e1d7:
    kwargs:
      data: '{data(0c78cb8df8bedeb0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f74e608003953839:
    kwargs:
      data: '{data(5d9571067cd4cd4b)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f95e697d04f8656e:
    kwargs:
      data: '{data(ba06daf4dca1413f)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f9d6f1ea3781fe96:
    kwargs:
      data: '{data(587993f3c3761aee)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f9f8f8944ad1e98c:
    kwargs:
      data: '{data(fa9775b1035224b0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fa7e885a5d3f9ba0:
    kwargs:
      data: '{data(44eed16d41d9f5f0)}'
      dtype:
        Day: '{func(builtins:str)}'
        Hour: '{func(builtins:str)}'
        Minute: '{func(builtins:str)}'
        Month: '{func(builtins:str)}'
        Year: '{func(builtins:str)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fbbf7ca9a6bc17b1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e0b86c2e008815d6)}'
        - []
        - {}
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_year_month_day_hour_minute)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
metadata:
  featuretype: trajectory
  header_names: null
  included: true
  key_variables:
  - temp
  - salt
  map:
    coastline: false
    geo: true
    height: 700
    kind: paths
    legend: false
    line_width: 5
    tiles: true
    title: drifters_uaf
    width: 600
    x: longitude
    xlabel: Longitude [W]
    y: latitude
    ylabel: Latitude [N]
  map_description: Drifters
  maplabels:
    fontscale: 1.5
    geo: true
    hover: false
    kind: labels
    text: station
    text_alpha: 0.5
    text_baseline: bottom
    text_color: black
    text_font_size: 10pt
    x: longitude
    y: latitude
  maptype: box
  maxLatitude: 64.03285
  maxLongitude: -132.28854
  maxTime: '2020-09-19T22:00:00.000000000'
  minLatitude: 46.36621
  minLongitude: -198.81437
  minTime: '2003-04-06T09:00:00.000000000'
  notes: These are accessed from Research Workspace.
  overall_desc: Drifters (UAF)
  project_name: Drifters (UAF), multiple projects
  summary: "Drifters run by Mark Johnson and others out of UAF with various years\
    \ and drogue depths.\n        \n* 2003: 7.5m (Cook Inlet)\n* 2004: 5m (Cook Inlet)\n\
    * 2005: 5m, 80m (Cook Inlet)\n* 2006: 5m (Cook Inlet)\n* 2012: 1m (Cook Inlet),\
    \ 15m (Cook Inlet)\n* 2013: 1m (Cook Inlet), 15m (Cook Inlet)\n* 2014: 1m (Cook\
    \ Inlet)\n* 2019: 1m (Kachemak Bay, Lynn Canal)\n* 2020: 1m (Kachemak Bay, Lynn\
    \ Canal)\n\nDescriptive summary of later drifter deployment: https://www.alaska.edu/epscor/about/newsletters/May-2022-feature-current-events.php,\
    \ data portal: https://ak-epscor.portal.axds.co/\n"
  time: From 2003 to 2020, variable
user_parameters: {}
version: 2

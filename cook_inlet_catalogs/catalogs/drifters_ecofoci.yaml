aliases:
  106696_y2012_withTandIce: 106696_y2012_withTandIce
  106697_y2012_withTandIce: 106697_y2012_withTandIce
  111968_y2012_withTandIce: 111968_y2012_withTandIce
  111969_y2013_withT: 111969_y2013_withT
  111970_y2013_withT: 111970_y2013_withT
  111971_y2013_withT: 111971_y2013_withT
  111973_y2013_withT: 111973_y2013_withT
  111974_y2013_withT: 111974_y2013_withT
  111976_y2013_withT: 111976_y2013_withT
  113633_y2012_withT: 113633_y2012_withT
  113634_y2012_withT: 113634_y2012_withT
  113635_y2012_withTandIce: 113635_y2012_withTandIce
  113636_y2012_withTandIce: 113636_y2012_withTandIce
  113637_y2012_withTandIce: 113637_y2012_withTandIce
  113638_y2012_withTandIce: 113638_y2012_withTandIce
  113639_y2012_withTandIce: 113639_y2012_withTandIce
  113640_y2012_withTandIce: 113640_y2012_withTandIce
  113641_y2012_withTandIce: 113641_y2012_withTandIce
  113642_y2012_withTandIce: 113642_y2012_withTandIce
  119593_y2012_withTandIce: 119593_y2012_withTandIce
  119594_y2012_withTandIce: 119594_y2012_withTandIce
  119595_y2012_withTandIce: 119595_y2012_withTandIce
  119596_y2012_withTandIce: 119596_y2012_withTandIce
  119597_y2012_withTandIce: 119597_y2012_withTandIce
  119598_y2012_withTandIce: 119598_y2012_withTandIce
  119599_y2012_withTandIce: 119599_y2012_withTandIce
  119600_y2012_withTandIce: 119600_y2012_withTandIce
  122532_y2013_withT: 122532_y2013_withT
  122533_y2013_withT: 122533_y2013_withT
  122534_y2013_withTandIce: 122534_y2013_withTandIce
  122535_y2013_withTandIce: 122535_y2013_withTandIce
  122536_y2013_withTandIce: 122536_y2013_withTandIce
  122537_y2013_withTandIce: 122537_y2013_withTandIce
  122538_y2013_withTandIce: 122538_y2013_withTandIce
  122539_y2013_withTandIce: 122539_y2013_withTandIce
  122540_y2013_withTandIce: 122540_y2013_withTandIce
  122541_y2013_withTandIce: 122541_y2013_withTandIce
  122542_y2013_withT: 122542_y2013_withT
  122543_y2013: 122543_y2013
  122843_y2013_withTandIce: 122843_y2013_withTandIce
  122844_y2013_withTandIce: 122844_y2013_withTandIce
  122845_y2013_withT: 122845_y2013_withT
  122846_y2013_withTandIce: 122846_y2013_withTandIce
  122847_y2013_withTandIce: 122847_y2013_withTandIce
  128951_y2013_withTandIce: 128951_y2013_withTandIce
  128952_y2013_withT: 128952_y2013_withT
  128954_y2013_withTandIce: 128954_y2013_withTandIce
  128955_y2013_withTandIce: 128955_y2013_withTandIce
  136871_y2014_withTandIce: 136871_y2014_withTandIce
  136873_y2014_withT: 136873_y2014_withT
  136874_y2014_withT: 136874_y2014_withT
  36254_y2003: 36254_y2003
  37478_y2003: 37478_y2003
  37484_y2003: 37484_y2003
  37485_y2003: 37485_y2003
  37486_y2003: 37486_y2003
  37487_y2003: 37487_y2003
  37488_y2003: 37488_y2003
  37489_y2003: 37489_y2003
  37490_y2003: 37490_y2003
  37491_y2003: 37491_y2003
  37492_y2003: 37492_y2003
  37493_y2003: 37493_y2003
  37494_y2003: 37494_y2003
  37495_y2003: 37495_y2003
  37496_y2003: 37496_y2003
  37497_y2003: 37497_y2003
  37498_y2003: 37498_y2003
  37499_y2003: 37499_y2003
  37500_y2003: 37500_y2003
  37501_y2003: 37501_y2003
  37504_y2003: 37504_y2003
  37505_y2003: 37505_y2003
  37506_y2003: 37506_y2003
  37507_y2003: 37507_y2003
  37508_y2003: 37508_y2003
  37509_y2003: 37509_y2003
  37510_y2003: 37510_y2003
  37511_y2003: 37511_y2003
  37512_y2003: 37512_y2003
  37513_y2003: 37513_y2003
  37514_y2003: 37514_y2003
  37516_y2003: 37516_y2003
  37520_y2003: 37520_y2003
  43698_y2004: 43698_y2004
  43700_y2004: 43700_y2004
  43701_y2004: 43701_y2004
  43702_y2004: 43702_y2004
  43703_y2004: 43703_y2004
  43704_y2004: 43704_y2004
  43705_y2004: 43705_y2004
  43706_y2004: 43706_y2004
  43707_y2004: 43707_y2004
  43709_y2004: 43709_y2004
  43710_y2004: 43710_y2004
  43711_y2004: 43711_y2004
  43712_y2004: 43712_y2004
  43713_y2004: 43713_y2004
  43714_y2004: 43714_y2004
  43715_y2004: 43715_y2004
  43716_y2004: 43716_y2004
  43717_y2004: 43717_y2004
  43718_y2004: 43718_y2004
  43719_y2004: 43719_y2004
  43720_y2004: 43720_y2004
  43721_y2004: 43721_y2004
  43722_y2004: 43722_y2004
  43723_y2004: 43723_y2004
  43725_y2004: 43725_y2004
  43726_y2004: 43726_y2004
  43727_y2004: 43727_y2004
  43728_y2004: 43728_y2004
  43729_y2004: 43729_y2004
  43730_y2004: 43730_y2004
  43731_y2004: 43731_y2004
  43732_y2004: 43732_y2004
  43733_y2004: 43733_y2004
  43734_y2004: 43734_y2004
  43735_y2004: 43735_y2004
  43737_y2004: 43737_y2004
  43738_y2004: 43738_y2004
  43820_y2003: 43820_y2003
  43821_y2003: 43821_y2003
  53287_y2004: 53287_y2004
  53288_y2004: 53288_y2004
  53289_y2004: 53289_y2004
  53290_y2005: 53290_y2005
  53291_y2004: 53291_y2004
  53292_y2004: 53292_y2004
  53293_y2004: 53293_y2004
  53294_y2005: 53294_y2005
  53295_y2005: 53295_y2005
  53296_y2005: 53296_y2005
  53297_y2006: 53297_y2006
  53298_y2005: 53298_y2005
  53299_y2005: 53299_y2005
  53300_y2005: 53300_y2005
  53302_y2005: 53302_y2005
  53303_y2005: 53303_y2005
  53304_y2005: 53304_y2005
  53306_y2005: 53306_y2005
  53307_y2006: 53307_y2006
  53308_y2005: 53308_y2005
  53309_y2005: 53309_y2005
  53310_y2005: 53310_y2005
  53311_y2005: 53311_y2005
  53312_y2005: 53312_y2005
  53313_y2006: 53313_y2006
  53314_y2006: 53314_y2006
  53315_y2005: 53315_y2005
  53316_y2005: 53316_y2005
  53317_y2005: 53317_y2005
  53318_y2005: 53318_y2005
  53319_y2005: 53319_y2005
  53320_y2005: 53320_y2005
  53321_y2005: 53321_y2005
  57863_y2006: 57863_y2006
  57866_y2006: 57866_y2006
  57867_y2006: 57867_y2006
  57868_y2006: 57868_y2006
  57869_y2006: 57869_y2006
  57870_y2005: 57870_y2005
  57872_y2005: 57872_y2005
  57873_y2006: 57873_y2006
  57874_y2005: 57874_y2005
  57875_y2006: 57875_y2006
  57876_y2005: 57876_y2005
  57878_y2005: 57878_y2005
  57879_y2005: 57879_y2005
  57880_y2005: 57880_y2005
  57881_y2005: 57881_y2005
  57883_y2006: 57883_y2006
  57885_y2005: 57885_y2005
  57887_y2005: 57887_y2005
  57888_y2006: 57888_y2006
  57889_y2005: 57889_y2005
data:
  00b3fcd6bb9c1bf3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    metadata: {}
    user_parameters: {}
  00d256adab12eb1a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53291_y2004.asc
    metadata: {}
    user_parameters: {}
  0298ebbd319be488:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    metadata: {}
    user_parameters: {}
  03acd0bdcc3ad772:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37496_y2003.asc
    metadata: {}
    user_parameters: {}
  043927c94147d362:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    metadata: {}
    user_parameters: {}
  04a1a5ff88915e68:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37501_y2003.asc
    metadata: {}
    user_parameters: {}
  06e90686b379b76d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43738_y2004.asc
    metadata: {}
    user_parameters: {}
  08e1048a24643911:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37498_y2003.asc
    metadata: {}
    user_parameters: {}
  0af14b2d83b70f15:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    metadata: {}
    user_parameters: {}
  0ddfcdfb791ba9b5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43711_y2004.asc
    metadata: {}
    user_parameters: {}
  0f7cb5bc9c942dc9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53289_y2004.asc
    metadata: {}
    user_parameters: {}
  102156a564a096ad:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37514_y2003.asc
    metadata: {}
    user_parameters: {}
  122fb98fdfa7e111:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37505_y2003.asc
    metadata: {}
    user_parameters: {}
  15e399ff2bd7d333:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53287_y2004.asc
    metadata: {}
    user_parameters: {}
  16057e930dced4a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    metadata: {}
    user_parameters: {}
  176229a798bf1faa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    metadata: {}
    user_parameters: {}
  17781d838312df36:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    metadata: {}
    user_parameters: {}
  17dc7dc341ff08b5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57888_y2006.asc
    metadata: {}
    user_parameters: {}
  1ae19950b13f3a59:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    metadata: {}
    user_parameters: {}
  1b5cc335595d323d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    metadata: {}
    user_parameters: {}
  1e7ce44b41acb69f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    metadata: {}
    user_parameters: {}
  2142fb3dc2edd046:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43722_y2004.asc
    metadata: {}
    user_parameters: {}
  2166f39b284b0817:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    metadata: {}
    user_parameters: {}
  22a7fcc17fac775a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37478_y2003.asc
    metadata: {}
    user_parameters: {}
  250d6db3426eb40a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    metadata: {}
    user_parameters: {}
  25b260deecb88c2f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2637e77e54e5b6ef:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  27202cc06ec90a5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  27a681065c898df5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43715_y2004.asc
    metadata: {}
    user_parameters: {}
  29800418bd51f48a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122847_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2c38d602b0189b26:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43735_y2004.asc
    metadata: {}
    user_parameters: {}
  3039b8409f989a30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  32859702db0ffa30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43733_y2004.asc
    metadata: {}
    user_parameters: {}
  3555846dbbe8f181:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  35869eb68296394b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  36c70cf099476ecd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37508_y2003.asc
    metadata: {}
    user_parameters: {}
  38fc4611fa0b0e8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37488_y2003.asc
    metadata: {}
    user_parameters: {}
  3a09839512267caf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37485_y2003.asc
    metadata: {}
    user_parameters: {}
  3a82aa5cb245c12e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    metadata: {}
    user_parameters: {}
  3d94b27c58ec9d77:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  3ee8e04f015a1424:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/43820_y2003.asc
    metadata: {}
    user_parameters: {}
  3ef4fabacab692e0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/36254_y2003.asc
    metadata: {}
    user_parameters: {}
  4422281109eceaea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37512_y2003.asc
    metadata: {}
    user_parameters: {}
  463642ed3268015f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37511_y2003.asc
    metadata: {}
    user_parameters: {}
  46b92d2ac7c70e2b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  48165b0ea9a220cc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  4a0962f0a7947f5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43707_y2004.asc
    metadata: {}
    user_parameters: {}
  4c0f534afb636ca2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  4ea2d3c7ff0fd4bf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122846_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  4eb8e54b95d94e5c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43729_y2004.asc
    metadata: {}
    user_parameters: {}
  5031b4a9172dcd40:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43702_y2004.asc
    metadata: {}
    user_parameters: {}
  504b6d23b90a6289:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53293_y2004.asc
    metadata: {}
    user_parameters: {}
  50d424c83354e4d9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    metadata: {}
    user_parameters: {}
  55770fd2c32cb94a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37493_y2003.asc
    metadata: {}
    user_parameters: {}
  56c2efba4072026a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  57a3bec617c5d194:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  59a9be915087d77f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    metadata: {}
    user_parameters: {}
  5cb47bf795f950fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43703_y2004.asc
    metadata: {}
    user_parameters: {}
  603576f54b88b55b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    metadata: {}
    user_parameters: {}
  6159e2fe0f19bac0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    metadata: {}
    user_parameters: {}
  6280061551197bd3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53297_y2006.asc
    metadata: {}
    user_parameters: {}
  63827a55f353bd93:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  651da3bc70e2aaea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37497_y2003.asc
    metadata: {}
    user_parameters: {}
  65680b22f1e65dca:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43718_y2004.asc
    metadata: {}
    user_parameters: {}
  6828b0804f38800e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    metadata: {}
    user_parameters: {}
  685ba6638536e07f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37504_y2003.asc
    metadata: {}
    user_parameters: {}
  68e4a0c2603fdcdc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37495_y2003.asc
    metadata: {}
    user_parameters: {}
  69398aa2624b3c03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    metadata: {}
    user_parameters: {}
  69fe39b0cb8b5151:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6bfd3f3df3fcf6fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6cf31fc934fb55af:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43710_y2004.asc
    metadata: {}
    user_parameters: {}
  6d1e12a3d86ed42d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43737_y2004.asc
    metadata: {}
    user_parameters: {}
  6d87c4883decc1dd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6d9a968634f8b947:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43731_y2004.asc
    metadata: {}
    user_parameters: {}
  724d9d292b9d2526:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37492_y2003.asc
    metadata: {}
    user_parameters: {}
  73e64c4b883a6ffa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  7570137f1de8ae34:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  7963ee1eb22a5525:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37491_y2003.asc
    metadata: {}
    user_parameters: {}
  79912cbdda2e4df4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  79aedd5c0757fa85:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  7e3ee610e6b30f63:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37509_y2003.asc
    metadata: {}
    user_parameters: {}
  80287b2e5b6839a2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37486_y2003.asc
    metadata: {}
    user_parameters: {}
  80d889d84b7f4060:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43712_y2004.asc
    metadata: {}
    user_parameters: {}
  81c9338428368d64:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37484_y2003.asc
    metadata: {}
    user_parameters: {}
  8250c777a5fbaf8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    metadata: {}
    user_parameters: {}
  83fa802703858b8f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37506_y2003.asc
    metadata: {}
    user_parameters: {}
  855811dd28225e7d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122539_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  872c4d76e891a8fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  878e492709c70f0f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  8e117a800072c7e8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    metadata: {}
    user_parameters: {}
  8e97bd7a68474b1c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    metadata: {}
    user_parameters: {}
  92717cbbb53efb41:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    metadata: {}
    user_parameters: {}
  9377990511ea7c81:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43713_y2004.asc
    metadata: {}
    user_parameters: {}
  942ae527a06f2722:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43719_y2004.asc
    metadata: {}
    user_parameters: {}
  94a7d2971ad21b5f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    metadata: {}
    user_parameters: {}
  95572cd2add32005:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  9577c74ca3bba84c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    metadata: {}
    user_parameters: {}
  983fa67f27eb1325:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  98b94fcf8454becb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  9beb604bf73b7677:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    metadata: {}
    user_parameters: {}
  9c7329c72e788771:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43706_y2004.asc
    metadata: {}
    user_parameters: {}
  9c99e80c267b62d6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43723_y2004.asc
    metadata: {}
    user_parameters: {}
  a2a292bf2fb8a72f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43730_y2004.asc
    metadata: {}
    user_parameters: {}
  a2e69af5c8aa83c1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    metadata: {}
    user_parameters: {}
  a311322ad5d29168:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43720_y2004.asc
    metadata: {}
    user_parameters: {}
  ab543029cb764389:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43704_y2004.asc
    metadata: {}
    user_parameters: {}
  abe5c89ce4af7369:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    metadata: {}
    user_parameters: {}
  ae8da310999d4e5c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    metadata: {}
    user_parameters: {}
  af51edc0a933dbcc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b08c3f262831b320:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    metadata: {}
    user_parameters: {}
  b1062cfa9c67f024:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b156e0f61491ba1a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43726_y2004.asc
    metadata: {}
    user_parameters: {}
  b15cd7ed916f91ba:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    metadata: {}
    user_parameters: {}
  b1ba0fdd238acc30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b2c0f685bd78596a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b4d533c3bb150ee5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b700c6dfb7a5d511:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  b71876475c1d6fbe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37487_y2003.asc
    metadata: {}
    user_parameters: {}
  b89316d4854c45b0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43725_y2004.asc
    metadata: {}
    user_parameters: {}
  bace0eb85f8b5735:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  bf36c09e30a4352a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37516_y2003.asc
    metadata: {}
    user_parameters: {}
  c0f803c5cb9863da:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    metadata: {}
    user_parameters: {}
  c1cda64678efbf86:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c21c1c5556dbe29d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43714_y2004.asc
    metadata: {}
    user_parameters: {}
  c286835c06037430:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37494_y2003.asc
    metadata: {}
    user_parameters: {}
  c4eb286ec741be33:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c7c96753def8fd60:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    metadata: {}
    user_parameters: {}
  c85609269d933956:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37513_y2003.asc
    metadata: {}
    user_parameters: {}
  cbc84645a77e045c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43705_y2004.asc
    metadata: {}
    user_parameters: {}
  cc2b3eeffac2a9c7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37499_y2003.asc
    metadata: {}
    user_parameters: {}
  cdbd22bbbcec5c02:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43734_y2004.asc
    metadata: {}
    user_parameters: {}
  cdf91c1eca3cc14c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43728_y2004.asc
    metadata: {}
    user_parameters: {}
  ce828fd606e8f45c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37520_y2003.asc
    metadata: {}
    user_parameters: {}
  cf338890f386cf54:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    metadata: {}
    user_parameters: {}
  d06c656af9c3021d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43698_y2004.asc
    metadata: {}
    user_parameters: {}
  d44b6d3ca83b8cd1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57883_y2006.asc
    metadata: {}
    user_parameters: {}
  d797205072b2ab78:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43716_y2004.asc
    metadata: {}
    user_parameters: {}
  d7b6169e2e1506bb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    metadata: {}
    user_parameters: {}
  d82a0dbbebda8d17:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  d9dd67e782bc96eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37510_y2003.asc
    metadata: {}
    user_parameters: {}
  da5ec63dbbb8a066:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43717_y2004.asc
    metadata: {}
    user_parameters: {}
  db6e329ab71af6f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  dc386959183e60ee:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    metadata: {}
    user_parameters: {}
  dd6439f5c1e02076:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/43821_y2003.asc
    metadata: {}
    user_parameters: {}
  ddb358bc9fc4b0fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  de5c35842929103e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  deb91e3d93f8b04f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43701_y2004.asc
    metadata: {}
    user_parameters: {}
  e0ebcde1693aa070:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e26c50f94baa9862:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43727_y2004.asc
    metadata: {}
    user_parameters: {}
  e4e0fb2a2b1cfee6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e58a3016ab1e5f6c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    metadata: {}
    user_parameters: {}
  e620eaa8ff69040c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37490_y2003.asc
    metadata: {}
    user_parameters: {}
  e66d68da0ddfb95b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43709_y2004.asc
    metadata: {}
    user_parameters: {}
  e774a98cae3bceca:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37500_y2003.asc
    metadata: {}
    user_parameters: {}
  e8f66bcf71758d01:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43732_y2004.asc
    metadata: {}
    user_parameters: {}
  e99b265255b7c297:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  ea686806a919b2e0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  ea9d5c822f430532:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37507_y2003.asc
    metadata: {}
    user_parameters: {}
  eac720dd0f31c073:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    metadata: {}
    user_parameters: {}
  ecc0945f280b9e3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    metadata: {}
    user_parameters: {}
  ed5badf7ee89cbf7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    metadata: {}
    user_parameters: {}
  ee30325b76a6c545:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    metadata: {}
    user_parameters: {}
  ee66c60f7ca68ef4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53288_y2004.asc
    metadata: {}
    user_parameters: {}
  f00abda7b507fe16:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    metadata: {}
    user_parameters: {}
  f2829ba6621d1fa7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53307_y2006.asc
    metadata: {}
    user_parameters: {}
  f2a17809cf7ed3c4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  f2f3ed29a2903506:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43721_y2004.asc
    metadata: {}
    user_parameters: {}
  f7675176ae9b5a3d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53292_y2004.asc
    metadata: {}
    user_parameters: {}
  f7c8edd5a905cf37:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  f8acba4f4c81c729:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  f9b424d0a2842417:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  fa7d9823bf63e3eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    metadata: {}
    user_parameters: {}
  fde257ef6740e93f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    metadata: {}
    user_parameters: {}
  fe423d06d697785b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    metadata: {}
    user_parameters: {}
  fe5347c342f50f53:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  fe900ae87233d68b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    metadata: {}
    user_parameters: {}
entries:
  005c6a76045b1b01:
    kwargs:
      data: '{data(603576f54b88b55b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0066ae5d96a70cc1:
    kwargs:
      data: '{data(1ae19950b13f3a59)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  006c0d07d1594133:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00f37ad8f2e0e039:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6a3233266abdb0b8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01068f364e1024f8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2f0bfc219c822a09)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01f971f30a4997e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4e0474aaeb965f4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  02751310063d486c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d9dc8ec53b5c4968)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  02822dbe41b09cbc:
    kwargs:
      data: '{data(cf338890f386cf54)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  034299d0877df9c1:
    kwargs:
      data: '{data(27202cc06ec90a5a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  04555fcdb80370c6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0467c3e3115b6091:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  04dd6616c1245183:
    kwargs:
      data: '{data(e58a3016ab1e5f6c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  050a7a15076744d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  055841ce7797c18b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(af6c937c28e319dd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  05bf73801a176ea5:
    kwargs:
      data: '{data(9c7329c72e788771)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  05d193a8920ff584:
    kwargs:
      data: '{data(79aedd5c0757fa85)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  06801c04270cb9ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c28bb8d73826103f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0703c406133ff3e9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9ecf766b3ce3408b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  079b3b61d01038a3:
    kwargs:
      data: '{data(f00abda7b507fe16)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  07cb4244815fc6eb:
    kwargs:
      data: '{data(3555846dbbe8f181)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  084a0be3943acbe3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7556e816ea74ed2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0854a5e6a2595d37:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  088252a2cbf32f5a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  08fc5bde0cb0be37:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0902533b6cd7197d:
    kwargs:
      data: '{data(dc386959183e60ee)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0911090798d5f6ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0a197043769fef5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(821dacb6d78e8447)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0abf7654e1d1aefe:
    kwargs:
      data: '{data(abe5c89ce4af7369)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0afb4470ded4cb4d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b5de737b7000e5f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b634f570fa1bae1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0bc952d9d10ea2fb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0c4f0b7ab0ca3af7:
    kwargs:
      data: '{data(36c70cf099476ecd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c7eea200a721554:
    kwargs:
      data: '{data(0af14b2d83b70f15)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c81ce6f7e5fae66:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0d053c0d9cd013b4:
    kwargs:
      data: '{data(f8acba4f4c81c729)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0d154237a9f15c8a:
    kwargs:
      data: '{data(e8f66bcf71758d01)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0db64f81c7a08ab7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f3092b5558784c27)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0dcb09bc3c6f4662:
    kwargs:
      data: '{data(6d87c4883decc1dd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e2408e0005c72ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(543cc6e2c67f3841)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0f1c4ddc19df3124:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106696_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5296f8ff3e6d956c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5f859ed2a52f1252)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.091
      maxLongitude: -166.136
      maxTime: '2012-11-17T07:25:00.000000000'
      minLatitude: 66.008
      minLongitude: -174.238
      minTime: '2012-08-17T23:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106697_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b3d952a14a5330eb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d834cfd29b51ac8f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.625
      maxLongitude: -138.067
      maxTime: '2013-04-24T06:07:00.000000000'
      minLatitude: 69.511
      minLongitude: -164.205
      minTime: '2012-05-30T23:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111968_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7fda96b699d938ea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5f07db62a8a0fcfc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.835
      maxLongitude: -168.091
      maxTime: '2013-10-21T06:00:00.000000000'
      minLatitude: 67.903
      minLongitude: -205.212
      minTime: '2012-08-19T02:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111969_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bc497e791403328f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(aad0254273c00518)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.262
      maxLongitude: -134.314
      maxTime: '2013-12-15T13:32:00.000000000'
      minLatitude: 55.959
      minLongitude: -147.558
      minTime: '2013-04-17T22:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111970_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a2066e73e7d7f437)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2369cd6ce5ee1a4f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.019
      maxLongitude: -140.053
      maxTime: '2013-07-23T04:21:00.000000000'
      minLatitude: 58.407
      minLongitude: -151.602
      minTime: '2013-04-20T03:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111971_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7d8ccde1aa47b08a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f65b615ac300f18e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.969
      maxLongitude: -134.306
      maxTime: '2014-12-19T13:03:00.000000000'
      minLatitude: 52.698
      minLongitude: -179.999
      minTime: '2013-04-17T18:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111973_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a25bfd9212321f73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2ec20de02f02f488)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.904
      maxLongitude: -135.793
      maxTime: '2013-10-19T02:14:00.000000000'
      minLatitude: 55.849
      minLongitude: -155.342
      minTime: '2013-04-16T13:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111974_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9e2a338178d336c1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61a131ceab7b62db)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.39
      maxLongitude: -136.872
      maxTime: '2013-07-08T02:28:00.000000000'
      minLatitude: 57.515
      minLongitude: -140.537
      minTime: '2013-04-17T17:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111976_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9307a232f307fa10)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f157639b1e9a59a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.356
      maxLongitude: -135.711
      maxTime: '2013-12-03T16:09:00.000000000'
      minLatitude: 52.728
      minLongitude: -168.459
      minTime: '2013-04-16T07:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113633_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a52441e85302021d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(19061e5d6314b707)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.122
      maxLongitude: -161.076
      maxTime: '2012-11-26T00:00:00.000000000'
      minLatitude: 55.594
      minLongitude: -165.003
      minTime: '2012-05-19T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113634_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1418b2b10c75fb1f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb2e2d6ea650109f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.894
      maxLongitude: -164.762
      maxTime: '2013-04-20T23:42:00.000000000'
      minLatitude: 54.123
      minLongitude: -199.86
      minTime: '2011-06-18T23:53:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113635_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(33b0950c152f6306)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c2bfa83f6bed2749)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.619
      maxLongitude: -162.819
      maxTime: '2013-01-14T05:55:00.000000000'
      minLatitude: 55.25
      minLongitude: -165.42
      minTime: '2012-05-19T12:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113636_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ac3a9d42d6864b80)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2b4011bbb2972ca6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.676
      maxLongitude: -157.685
      maxTime: '2014-08-29T04:26:00.000000000'
      minLatitude: 55.959
      minLongitude: -170.886
      minTime: '2012-05-19T10:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113637_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dd04ce475c9bb7e0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eaedc8d243549e0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.94
      maxLongitude: -159.584
      maxTime: '2013-07-29T23:28:00.000000000'
      minLatitude: 55.921
      minLongitude: -165.337
      minTime: '2012-05-19T10:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113638_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e5f5ef5222aba4bd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2f4e40a9471615ad)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.255
      maxLongitude: -164.962
      maxTime: '2014-02-03T05:59:00.000000000'
      minLatitude: 53.111
      minLongitude: -198.802
      minTime: '2012-05-19T12:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113639_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(81866db1b9eba3d8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a4e339525fabe46c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.069
      maxLongitude: -164.979
      maxTime: '2013-02-17T10:33:00.000000000'
      minLatitude: 53.791
      minLongitude: -178.366
      minTime: '2012-05-19T13:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113640_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c987b6f7532e644e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5e68b4d49c4dcae2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.977
      maxLongitude: -164.141
      maxTime: '2013-06-22T00:29:00.000000000'
      minLatitude: 55.032
      minLongitude: -186.81
      minTime: '2012-05-19T14:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113641_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fc5e126cf7de6e55)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7c4f80f7879cc073)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.358
      maxLongitude: -159.496
      maxTime: '2013-01-10T19:35:00.000000000'
      minLatitude: 55.732
      minLongitude: -165.215
      minTime: '2012-05-19T12:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113642_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(537f169d79da6937)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ad6513048c8fcf24)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.709
      maxLongitude: -164.866
      maxTime: '2013-12-18T08:48:00.000000000'
      minLatitude: 48.752
      minLongitude: -200.787
      minTime: '2012-01-30T00:12:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113bb6b7b6650708:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  117fc571aa6f1742:
    kwargs:
      data: '{data(3ee8e04f015a1424)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  119593_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d5e4e3833a0994f9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00f37ad8f2e0e039)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.682
      maxLongitude: -154.445
      maxTime: '2014-07-17T21:40:00.000000000'
      minLatitude: 71.051
      minLongitude: -196.963
      minTime: '2012-08-24T16:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119594_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bf714fde5236c7d3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7d3043a9998cf4a4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.921
      maxLongitude: -154.013
      maxTime: '2013-04-10T18:14:00.000000000'
      minLatitude: 70.731
      minLongitude: -197.649
      minTime: '2012-08-25T11:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119595_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4e722f0ff40b2b60)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ebd7667ce9935f7f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.885
      maxLongitude: -167.438
      maxTime: '2013-08-21T23:00:00.000000000'
      minLatitude: 68.671
      minLongitude: -200.183
      minTime: '2012-08-30T21:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119596_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7663ac1940f27d50)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(34f17f5c14e599e7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.08
      maxLongitude: -154.045
      maxTime: '2013-01-14T01:48:00.000000000'
      minLatitude: 70.767
      minLongitude: -172.133
      minTime: '2012-08-13T10:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119597_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1853edd80b83c946)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a9234a1a94749feb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.16
      maxLongitude: -151.76
      maxTime: '2012-11-21T02:16:00.000000000'
      minLatitude: 71.175
      minLongitude: -164.952
      minTime: '2012-08-13T20:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119598_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(77636f43acf8e66b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ebaae50c9beade8b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.957
      maxLongitude: -164.316
      maxTime: '2012-11-25T10:39:00.000000000'
      minLatitude: 64.071
      minLongitude: -169.562
      minTime: '2012-08-14T09:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119599_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3fe30b2cc1dbf2ef)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f09e8977f6aef546)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.221
      maxLongitude: -151.248
      maxTime: '2012-11-07T14:05:00.000000000'
      minLatitude: 70.988
      minLongitude: -161.75
      minTime: '2012-08-24T16:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119600_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d6caf72a29ea1a08)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(055841ce7797c18b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.544
      maxLongitude: -152.259
      maxTime: '2013-03-24T16:46:00.000000000'
      minLatitude: 69.289
      minLongitude: -167.611
      minTime: '2012-08-20T01:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  11bb7059a073e738:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12076bc271532979:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122532_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(421a67232bcaee22)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f852e0c022cad62)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.402
      maxLongitude: -134.467
      maxTime: '2014-09-11T19:58:00.000000000'
      minLatitude: 56.102
      minLongitude: -154.089
      minTime: '2013-07-03T11:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122533_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8f3d77ab7cb69b3f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(02751310063d486c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.131
      maxLongitude: -135.205
      maxTime: '2015-03-03T14:57:00.000000000'
      minLatitude: 49.069
      minLongitude: -166.789
      minTime: '2013-07-03T18:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122534_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a21133d671780d8d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a01c9b6892410238)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.313
      maxLongitude: -168.026
      maxTime: '2014-12-31T18:49:00.000000000'
      minLatitude: 67.768
      minLongitude: -190.397
      minTime: '2013-08-23T01:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122535_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9b9453f77e12a0c8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(22867033690dcb03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.284
      maxLongitude: -153.972
      maxTime: '2013-11-09T04:09:00.000000000'
      minLatitude: 70.882
      minLongitude: -165.629
      minTime: '2013-08-27T04:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122536_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(81d6e67ac6f3cd22)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ac32b7b592cb7d29)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.844
      maxLongitude: -152.14
      maxTime: '2014-02-18T23:42:00.000000000'
      minLatitude: 71.12
      minLongitude: -179.385
      minTime: '2013-09-03T20:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122537_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9d84b44e98e08bf0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(986a900207eb2b03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.038
      maxLongitude: -160.874
      maxTime: '2015-03-31T23:15:00.000000000'
      minLatitude: 55.819
      minLongitude: -177.156
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122538_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c3c2966e68ae7afc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(876b92d534471d7d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.816
      maxLongitude: -155.239
      maxTime: '2013-11-02T15:06:00.000000000'
      minLatitude: 71.045
      minLongitude: -173.801
      minTime: '2013-08-28T07:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122539_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bd7605a9b219b00c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6a82e52deb10b31e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.574
      maxLongitude: -153.867
      maxTime: '2013-11-03T14:27:00.000000000'
      minLatitude: 70.807
      minLongitude: -164.327
      minTime: '2013-08-27T09:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122539_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122540_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3af3b2ae4d17da51)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(89cd22e5ff35e6e6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.688
      maxLongitude: -157.741
      maxTime: '2014-09-15T04:51:00.000000000'
      minLatitude: 69.292
      minLongitude: -184.136
      minTime: '2013-08-25T20:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122541_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(08fc5bde0cb0be37)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3262e716c2a1e6bf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.842
      maxLongitude: -147.595
      maxTime: '2014-07-31T23:14:00.000000000'
      minLatitude: 70.58
      minLongitude: -162.99
      minTime: '2013-08-27T22:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122542_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(29eed688142b5c67)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eb97d70709a9f247)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.046
      maxLongitude: -140.632
      maxTime: '2014-01-07T10:03:00.000000000'
      minLatitude: 52.159
      minLongitude: -171.494
      minTime: '2013-04-20T19:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122543_y2013:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c1156a8064dd7025)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a89119a894087d0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -136.606
      maxTime: '2013-04-07T13:44:00.000000000'
      minLatitude: 58.164
      minLongitude: -136.77
      minTime: '2013-04-07T08:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122843_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4344242c41c6a389)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(879e92f9c29dc59b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.533
      maxLongitude: -160.253
      maxTime: '2015-05-03T22:39:00.000000000'
      minLatitude: 55.68
      minLongitude: -165.392
      minTime: '2013-05-05T00:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122844_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(63ba731657a6186b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6e6441ff8b6c05e8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.773
      maxLongitude: -158.451
      maxTime: '2014-08-30T07:39:00.000000000'
      minLatitude: 55.375
      minLongitude: -166.074
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122845_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(eedf9b227f477007)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1c4ed78c58060b4c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.598
      maxLongitude: -164.044
      maxTime: '2015-05-03T21:00:00.000000000'
      minLatitude: 52.264
      minLongitude: -199.207
      minTime: '2013-05-05T01:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122846_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(89c2d8a43622f231)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(688043574fa5e922)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.108
      maxLongitude: -161.096
      maxTime: '2015-03-31T22:26:00.000000000'
      minLatitude: 55.757
      minLongitude: -170.261
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122846_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122847_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cd35ce3c86f99980)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1d130e172742368c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.975
      maxLongitude: -165.015
      maxTime: '2015-01-22T18:23:00.000000000'
      minLatitude: 55.734
      minLongitude: -179.357
      minTime: '2013-05-05T02:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122847_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128951_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(abe301d787f6338f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d02a30a44e5784a8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.86
      maxLongitude: -156.565
      maxTime: '2014-08-15T17:10:00.000000000'
      minLatitude: 70.161
      minLongitude: -169.217
      minTime: '2013-09-04T07:12:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128952_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fa7f720a49ecd5b8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(665a38abe68b27a2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.195
      maxLongitude: -165.456
      maxTime: '2013-09-19T01:02:00.000000000'
      minLatitude: 66.572
      minLongitude: -168.487
      minTime: '2013-08-09T19:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128954_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(46d3e4c6997db019)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1e29daaa59917908)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.512
      maxLongitude: -167.605
      maxTime: '2014-01-02T15:47:00.000000000'
      minLatitude: 67.582
      minLongitude: -175.926
      minTime: '2013-08-12T20:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128955_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(783b3a9585085ab2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(400cccdb5d8b3f62)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.263
      maxLongitude: -150.977
      maxTime: '2014-07-21T06:39:00.000000000'
      minLatitude: 69.817
      minLongitude: -194.731
      minTime: '2013-08-23T00:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12ba053feacd681a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  130abebf3380d6d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1341aec5b3ed3ea8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  134d4e59c7b368d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136871_y2014_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(263fbb0838fbace0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3c3dacfddb8300f1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 63.902
      maxLongitude: -165.142
      maxTime: '2015-07-05T09:40:00.000000000'
      minLatitude: 54.071
      minLongitude: -182.416
      minTime: '2014-05-15T07:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136873_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5d851017eb66207c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f3afdcdc19e94a88)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.432
      maxLongitude: -168.008
      maxTime: '2016-07-26T20:55:00.000000000'
      minLatitude: 44.112
      minLongitude: -202.389
      minTime: '2014-05-14T21:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136874_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(472f02dac9a17605)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8cd2bbb5a9ccec03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.532
      maxLongitude: -164.688
      maxTime: '2016-01-18T21:24:00.000000000'
      minLatitude: 52.11
      minLongitude: -186.52
      minTime: '2013-10-01T23:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13d8a7f6a0d7c15a:
    kwargs:
      data: '{data(c85609269d933956)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1418b2b10c75fb1f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  141f094d1114ba72:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  14af8ff9fc8336cf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a065f721a7a0da3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  153e8b07890df63d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  156b7f173d2291f3:
    kwargs:
      data: '{data(b700c6dfb7a5d511)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1688312322cf2a86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16b3d90c4787777c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4ae9910e1eaa546)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16b92dcb1cfbf46d:
    kwargs:
      data: '{data(250d6db3426eb40a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1799ff0a118caef4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1853edd80b83c946:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  187a19e2a36d1366:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ab6c862d33bb5e18)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  18d8181cd9babacb:
    kwargs:
      data: '{data(80d889d84b7f4060)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  18ed6585c6a03893:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19061e5d6314b707:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7ebf0309c5e06f7d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19075a910d4f86c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  195687f7f49e5abf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cd3f2445bc6af9e9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  197fcdf0674365c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(40fae301554e2e5f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19a4023f440f844a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19c8ac47c30a822c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1a63403d64f9c02f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5d79863955d35658)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1abd6c19b1659472:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1b502b2fd566c436:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c8ad97fd35c67a6a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c1c447cff6a04d6:
    kwargs:
      data: '{data(d06c656af9c3021d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1c2df0d0f6f51d5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c4ed78c58060b4c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bbc58871e1432ba8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1cba476c59afdc80:
    kwargs:
      data: '{data(b1ba0fdd238acc30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1d130e172742368c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(134d4e59c7b368d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1d3c80ff4bc8833b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1d4723efd7d2abdc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1e29daaa59917908:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2178a28326d480d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ebe00673625717b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ec1ec09b8c0e2b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2d96cba3d1d5ea8d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1f79c7cf6b593a70:
    kwargs:
      data: '{data(e26c50f94baa9862)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2026dbcb99e2e570:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  204796633387e7ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2178a28326d480d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  217fce4157e0ee48:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  221842e6b2de8092:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22867033690dcb03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8d8d41a70081490b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2369cd6ce5ee1a4f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d2ca55e3d8410014)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2573f0d3835ca5c3:
    kwargs:
      data: '{data(00b3fcd6bb9c1bf3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  25f0fe0cd02f9e0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c79d04a524b5c5be)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  263fbb0838fbace0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2667ebd9fffc2ea7:
    kwargs:
      data: '{data(4eb8e54b95d94e5c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2695fddda54c399e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  26d60fbda9af5139:
    kwargs:
      data: '{data(bf36c09e30a4352a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  279b7e152f11b08e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a535e1e3bcb82e23)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  279d34b46f70dcc3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3eb8fcf610bf0302)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  27ea2956b3f22aac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28516b7a21631488:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2886bea5055a1ce6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28f16e461659b5a9:
    kwargs:
      data: '{data(65680b22f1e65dca)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  293fd947137e2708:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b1e358e31f7b3093)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  295c253f559eb863:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e5a9a59f3f076553)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29eed688142b5c67:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29efadf4ccc184b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29f77920074cbd7d:
    kwargs:
      data: '{data(48165b0ea9a220cc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a3d7ddc614a1c11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6363a37aacd6c8ee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2a7d0928ea717952:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2b4011bbb2972ca6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(767dd086738de4ca)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ba5190ebd9fee3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ba9f2c3ef3d9424:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c3a8ac60ef28b68:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c5bb7042b9b16f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d9ac4c1147914815)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c9cb812473226e3:
    kwargs:
      data: '{data(4a0962f0a7947f5a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2d74a9f7ae7402ad:
    kwargs:
      data: '{data(2142fb3dc2edd046)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2d96cba3d1d5ea8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e1d481b19f7c29b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e313087e6b19cee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e340643328a2234:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e69ee0462fd3223:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2eb450c0e5157d9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ec20de02f02f488:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ba9bc16612ebae58)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ef3310a90aef9c2:
    kwargs:
      data: '{data(d9dd67e782bc96eb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2f0bfc219c822a09:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f4e40a9471615ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c010d4f3d384491e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3004644ee834bbae:
    kwargs:
      data: '{data(95572cd2add32005)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3060da18e2ab664e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  30b2d9d3a356a7f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31355422187bd160:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31bf3ba3c290a9cf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(aad1e4f03eab3e9a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3262e716c2a1e6bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4f2582fe762df1bb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3271d25698b61ee2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  32a3fb8e1ee8074b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  32ecd4924d2ec98f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33314afc63d93b1e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33b0950c152f6306:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33f247f329ec2f3b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  '3484164830153054':
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34b4bf14f1662143:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0c81ce6f7e5fae66)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34f17f5c14e599e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c363aecdcda24831)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3582f3e1b100e355:
    kwargs:
      data: '{data(57a3bec617c5d194)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  360500e4401b094f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6f0f3984262ce5c2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36254_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4438d335c280ccb9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4fc6093b9d4ac9cb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.341
      maxLongitude: -148.941
      maxTime: '2003-09-22T12:35:00.000000000'
      minLatitude: 59.246
      minLongitude: -149.572
      minTime: '2003-09-16T17:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/36254_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3688548c404e9a1f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7bbc38361b15302)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  368edb33ed44e4a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3697aad041628e60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a329f87ce5cc05f1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36e32e652f7ba1e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37478_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5434ea08699f30b8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(545ac8e9cdc232fe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.062
      maxLongitude: -164.791
      maxTime: '2003-12-21T05:22:00.000000000'
      minLatitude: 54.326
      minLongitude: -171.427
      minTime: '2003-03-02T15:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37478_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37484_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0911090798d5f6ed)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b4bc96ad835b5b75)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.244
      maxLongitude: -148.693
      maxTime: '2003-05-03T05:37:00.000000000'
      minLatitude: 58.969
      minLongitude: -151.612
      minTime: '2003-04-21T05:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37484_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37485_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(43c59afe0b957792)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fa10379fd08c7bf2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.945
      maxLongitude: -149.172
      maxTime: '2003-12-04T10:03:00.000000000'
      minLatitude: 54.042
      minLongitude: -165.856
      minTime: '2003-04-22T00:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37485_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37486_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(aad962bed8775b7e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(412e06b90698b81a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.99
      maxLongitude: -149.399
      maxTime: '2003-10-01T22:30:00.000000000'
      minLatitude: 58.281
      minLongitude: -154.134
      minTime: '2003-07-29T18:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37486_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37487_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(771172bf8619cca9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f1ac305022835369)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.528
      maxLongitude: -149.182
      maxTime: '2004-04-02T09:41:00.000000000'
      minLatitude: 54.196
      minLongitude: -172.891
      minTime: '2003-04-24T05:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37487_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37488_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0b634f570fa1bae1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(31bf3ba3c290a9cf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.129
      maxLongitude: -148.699
      maxTime: '2003-09-18T13:20:00.000000000'
      minLatitude: 59.051
      minLongitude: -148.773
      minTime: '2003-09-16T17:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37488_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37489_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b901c5b56795a406)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(580bf62b45a2cce0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.782
      maxLongitude: -159.125
      maxTime: '2003-07-16T18:42:00.000000000'
      minLatitude: 56.498
      minLongitude: -160.193
      minTime: '2003-05-21T14:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37490_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a959400d06b1c037)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(44e82e61806f53ad)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.687
      maxLongitude: -148.639
      maxTime: '2003-05-20T00:22:00.000000000'
      minLatitude: 58.936
      minLongitude: -151.645
      minTime: '2003-04-24T10:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37490_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37491_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(12ba053feacd681a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d091f8eed924d03a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.284
      maxLongitude: -148.855
      maxTime: '2003-12-31T20:20:00.000000000'
      minLatitude: 51.505
      minLongitude: -164.028
      minTime: '2003-02-26T04:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37491_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37492_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(68ad5243704e8445)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7b463f6d12f50410)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.182
      maxLongitude: -139.597
      maxTime: '2004-12-30T14:56:00.000000000'
      minLatitude: 47.783
      minLongitude: -194.968
      minTime: '2003-05-12T23:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37492_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37493_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5a3694489e208c73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(58a8bb0ca00e89f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.374
      maxLongitude: -144.587
      maxTime: '2003-12-31T20:21:00.000000000'
      minLatitude: 50.929
      minLongitude: -164.241
      minTime: '2003-05-03T10:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37493_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37494_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7fbed37203dc7093)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7470723088102b64)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.007
      maxLongitude: -148.779
      maxTime: '2004-04-07T11:09:00.000000000'
      minLatitude: 51.742
      minLongitude: -179.516
      minTime: '2003-07-29T03:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37494_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37495_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ae26a27a165d8c5a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(969364ecce1ca069)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.267
      maxLongitude: -148.375
      maxTime: '2003-11-14T02:08:00.000000000'
      minLatitude: 50.588
      minLongitude: -168.417
      minTime: '2003-02-25T23:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37495_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37496_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dda2b94dc47eeebd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6dd427b0fdef56da)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.512
      maxLongitude: -148.988
      maxTime: '2004-06-02T08:15:00.000000000'
      minLatitude: 53.719
      minLongitude: -164.558
      minTime: '2003-07-29T11:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37496_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37497_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e2d6c1f2a4d3137b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2c5bb7042b9b16f2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.966
      maxLongitude: -147.58
      maxTime: '2004-09-30T02:54:00.000000000'
      minLatitude: 53.846
      minLongitude: -183.547
      minTime: '2003-05-16T05:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37497_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37498_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ed39615a5140eb73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61d67af49a69df91)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.287
      maxLongitude: -148.876
      maxTime: '2003-12-31T20:27:00.000000000'
      minLatitude: 55.662
      minLongitude: -156.949
      minTime: '2003-09-20T16:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37498_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37499_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6dd27e173d782e11)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e6c8ced76db35bb2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.596
      maxLongitude: -146.843
      maxTime: '2004-11-06T00:33:00.000000000'
      minLatitude: 53.934
      minLongitude: -169.15
      minTime: '2003-09-27T05:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37499_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37500_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6249b4abe6f36f61)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4e3ded9df2f00a6a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.886
      maxLongitude: -138.626
      maxTime: '2003-11-07T03:35:00.000000000'
      minLatitude: 56.493
      minLongitude: -154.406
      minTime: '2003-05-13T05:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37500_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37501_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7012f309131ff542)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c5dc7774d005f8f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.646
      maxLongitude: -149.216
      maxTime: '2004-09-02T15:44:00.000000000'
      minLatitude: 53.922
      minLongitude: -170.843
      minTime: '2003-09-20T04:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37501_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37504_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(48d29f6d44e5504c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4d90516b0d23d8f7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.033
      maxLongitude: -145.37
      maxTime: '2005-01-12T09:57:00.000000000'
      minLatitude: 52.061
      minLongitude: -196.783
      minTime: '2003-05-15T11:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37504_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37505_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5b8418d4f59d23d7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b687b1a757f2cb6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.651
      maxLongitude: -149.46
      maxTime: '2005-02-07T03:17:00.000000000'
      minLatitude: 53.864
      minLongitude: -171.908
      minTime: '2003-05-11T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37505_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37506_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3abb4b90235b126c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(efc75197fa677c94)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.145
      maxLongitude: -148.659
      maxTime: '2003-10-16T00:57:00.000000000'
      minLatitude: 57.368
      minLongitude: -156.112
      minTime: '2003-09-16T15:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37506_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37507_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3484164830153054)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(752fd5b572ea6c2d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.792
      maxLongitude: -144.635
      maxTime: '2003-11-07T10:36:00.000000000'
      minLatitude: 59.198
      minLongitude: -150.85
      minTime: '2003-08-04T00:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37507_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37508_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2695fddda54c399e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(713be3148cbec1ec)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.604
      maxLongitude: -154.564
      maxTime: '2003-12-08T16:30:00.000000000'
      minLatitude: 55.719
      minLongitude: -156.607
      minTime: '2003-07-01T08:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37508_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37509_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9f0b74da7ae23f97)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c73eeb774c7d76a5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.688
      maxLongitude: -149.31
      maxTime: '2003-05-05T16:53:00.000000000'
      minLatitude: 59.038
      minLongitude: -151.299
      minTime: '2003-04-23T19:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37509_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37510_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(92e3a3e4ad9ec85f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5178ea118ec51069)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.975
      maxLongitude: -147.445
      maxTime: '2004-07-19T00:41:00.000000000'
      minLatitude: 52.172
      minLongitude: -190.305
      minTime: '2003-02-26T00:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37510_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37511_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fb7ed8a25a707281)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0703c406133ff3e9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.312
      maxLongitude: -144.525
      maxTime: '2005-01-22T01:18:00.000000000'
      minLatitude: 53.806
      minLongitude: -178.727
      minTime: '2003-05-02T04:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37511_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37512_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b1911eb62a7d1e98)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(279d34b46f70dcc3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.702
      maxLongitude: -148.652
      maxTime: '2004-12-19T23:34:00.000000000'
      minLatitude: 52.365
      minLongitude: -178.568
      minTime: '2003-04-21T19:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37512_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37513_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(221842e6b2de8092)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f819ac9be7e26dbe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.622
      maxLongitude: -154.994
      maxTime: '2003-07-20T05:05:00.000000000'
      minLatitude: 56.608
      minLongitude: -157.179
      minTime: '2003-07-01T08:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37513_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37514_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e91da9a59154c53a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(caa174644edc776a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.322
      maxLongitude: -147.651
      maxTime: '2003-10-19T07:40:00.000000000'
      minLatitude: 53.198
      minLongitude: -167.928
      minTime: '2003-02-25T17:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37514_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37516_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4cd11f8f1a4946d8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ce3011d994957ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.75
      maxLongitude: -146.781
      maxTime: '2005-02-03T22:59:00.000000000'
      minLatitude: 48.601
      minLongitude: -201.051
      minTime: '2003-09-26T19:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37516_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37520_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3fe4fc36a9e4088e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c42a71144fc56eda)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.286
      maxLongitude: -159.08
      maxTime: '2003-12-31T09:52:00.000000000'
      minLatitude: 56.982
      minLongitude: -163.266
      minTime: '2003-05-21T10:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37520_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  379e62bd94ea4140:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecb2068a00f90a50)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37f1e80a857868a6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  39b601d496ca66a9:
    kwargs:
      data: '{data(6280061551197bd3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  39f5720bc8eeddb9:
    kwargs:
      data: '{data(8e117a800072c7e8)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3a8f59233452374b:
    kwargs:
      data: '{data(81c9338428368d64)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3abb4b90235b126c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3af3b2ae4d17da51:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3b1d041df62ae0ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3bc4fee0107d8b82:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c2efd05ed55c9cd:
    kwargs:
      data: '{data(50d424c83354e4d9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3c3dacfddb8300f1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c7c919efb1d4cf03)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c82aba49f30f931:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3d9ac131d4457e40:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3da4efd7554f48eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3b1d041df62ae0ca)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3e4ad392c90ec964:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(78bbc95fa0560bed)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3e6f937eb342d566:
    kwargs:
      data: '{data(59a9be915087d77f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3eb8fcf610bf0302:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3fe30b2cc1dbf2ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3fe4fc36a9e4088e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  400cccdb5d8b3f62:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6fbc67df22b9d52c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  40dd7a4685b85739:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  40fae301554e2e5f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  412e06b90698b81a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7bf85b315fa5ddd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  421a67232bcaee22:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  421c023e00dc2e83:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42b95a37273ba198:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(67cca495bfc75d8f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42cb662ed02a3da0:
    kwargs:
      data: '{data(83fa802703858b8f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  430c524da1708138:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4344242c41c6a389:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43698_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(715f9d7c308d2e06)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f0431bcba0e5f705)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.344
      maxLongitude: -147.956
      maxTime: '2005-11-15T23:56:00.000000000'
      minLatitude: 49.444
      minLongitude: -193.28
      minTime: '2004-07-10T07:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43698_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43700_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(843a0fac153389b5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(279b7e152f11b08e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.468
      maxLongitude: -149.619
      maxTime: '2005-05-08T22:56:00.000000000'
      minLatitude: 53.816
      minLongitude: -174.144
      minTime: '2004-09-15T05:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43701_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7a0a3f46896b9e1b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(42b95a37273ba198)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.917
      maxLongitude: -151.405
      maxTime: '2004-11-17T07:50:00.000000000'
      minLatitude: 54.596
      minLongitude: -159.69
      minTime: '2004-05-19T14:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43701_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43702_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(36e32e652f7ba1e6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d1dce7f7e1308447)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.886
      maxLongitude: -151.423
      maxTime: '2005-06-08T23:30:00.000000000'
      minLatitude: 49.61
      minLongitude: -169.696
      minTime: '2004-05-19T15:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43702_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43703_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(564bf1a793c7e050)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6085e2a338ba4fae)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.783
      maxLongitude: -148.871
      maxTime: '2004-05-02T06:38:00.000000000'
      minLatitude: 58.93
      minLongitude: -151.466
      minTime: '2004-04-13T00:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43703_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43704_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e0c2eb07df4355a4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1b502b2fd566c436)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.365
      maxLongitude: -148.756
      maxTime: '2004-06-15T14:01:00.000000000'
      minLatitude: 57.244
      minLongitude: -156.162
      minTime: '2004-04-11T00:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43704_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43705_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6d1ae81ef908e36f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bbc5a410956e5c8d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.012
      maxLongitude: -172.184
      maxTime: '2004-12-11T15:08:00.000000000'
      minLatitude: 62.194
      minLongitude: -175.023
      minTime: '2004-07-16T05:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43705_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43706_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ab090ce160185087)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bb78762be7250ee2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.987
      maxLongitude: -171.281
      maxTime: '2005-02-06T17:26:00.000000000'
      minLatitude: 59.823
      minLongitude: -175.318
      minTime: '2004-07-15T02:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43706_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43707_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fa09fa8e02f6b638)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9a7129c4771ecc73)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.138
      maxLongitude: -146.05
      maxTime: '2005-06-12T18:43:00.000000000'
      minLatitude: 50.639
      minLongitude: -185.171
      minTime: '2004-04-11T14:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43707_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43709_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(621663a825f62870)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0a197043769fef5e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.628
      maxLongitude: -168.989
      maxTime: '2005-04-22T02:27:00.000000000'
      minLatitude: 56.454
      minLongitude: -175.301
      minTime: '2004-08-17T01:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43709_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43710_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b3fa5639c9ef34d0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d4140c7047b93bdb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.213
      maxLongitude: -167.303
      maxTime: '2005-04-11T23:44:00.000000000'
      minLatitude: 55.687
      minLongitude: -174.187
      minTime: '2004-08-06T00:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43710_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43711_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f812d0148fd7a701)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b0187c84a8767bac)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.206
      maxLongitude: -165.992
      maxTime: '2005-03-29T22:51:00.000000000'
      minLatitude: 56.444
      minLongitude: -170.748
      minTime: '2004-05-01T14:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43711_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43712_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ec5162a2ac58072e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6ea21513ce603b20)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.124
      maxLongitude: -165.171
      maxTime: '2005-04-09T20:35:00.000000000'
      minLatitude: 54.522
      minLongitude: -171.315
      minTime: '2004-05-03T07:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43712_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43713_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9defe4159bac54d0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(14af8ff9fc8336cf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.527
      maxLongitude: -149.775
      maxTime: '2005-03-09T00:37:00.000000000'
      minLatitude: 55.849
      minLongitude: -158.489
      minTime: '2004-07-14T15:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43713_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43714_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f60bd0231e907254)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01f971f30a4997e5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.311
      maxLongitude: -148.928
      maxTime: '2005-01-17T02:33:00.000000000'
      minLatitude: 52.568
      minLongitude: -169.594
      minTime: '2004-07-19T12:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43714_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43715_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5be560ec7f5ba45d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(845ea8f3781102bd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.363
      maxLongitude: -168.097
      maxTime: '2005-03-03T05:33:00.000000000'
      minLatitude: 55.446
      minLongitude: -175.87
      minTime: '2004-07-27T22:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43715_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43716_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(130abebf3380d6d1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4780a4694b871f44)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.523
      maxLongitude: -149.175
      maxTime: '2004-11-03T06:31:00.000000000'
      minLatitude: 55.186
      minLongitude: -159.329
      minTime: '2004-07-19T14:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43716_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43717_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7b982616cb3078e1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7037922f6a87f0ca)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.287
      maxLongitude: -144.488
      maxTime: '2006-09-23T08:30:00.000000000'
      minLatitude: 48.175
      minLongitude: -172.111
      minTime: '2004-05-16T04:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43717_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43718_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(892d5bcd1ec84e5b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0e2408e0005c72ef)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.543
      maxLongitude: -148.718
      maxTime: '2004-10-17T23:49:00.000000000'
      minLatitude: 54.21
      minLongitude: -162.746
      minTime: '2004-05-16T04:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43718_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43719_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(27ea2956b3f22aac)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eeefb7f3b180666c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.479
      maxLongitude: -147.782
      maxTime: '2004-11-21T21:49:00.000000000'
      minLatitude: 53.916
      minLongitude: -155.797
      minTime: '2004-07-10T08:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43719_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43720_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8999b24776b87c11)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(295c253f559eb863)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.174
      maxLongitude: -145.453
      maxTime: '2004-11-14T01:20:00.000000000'
      minLatitude: 54.165
      minLongitude: -163.328
      minTime: '2004-05-23T19:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43720_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43721_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(32a3fb8e1ee8074b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4950dd74a0d8bddb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.543
      maxLongitude: -169.768
      maxTime: '2004-09-18T09:00:00.000000000'
      minLatitude: 56.396
      minLongitude: -170.835
      minTime: '2004-07-28T22:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43721_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43722_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7689d00838489820)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ee9071897621fd99)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.609
      maxLongitude: -166.644
      maxTime: '2005-01-30T22:15:00.000000000'
      minLatitude: 56.546
      minLongitude: -169.765
      minTime: '2004-07-28T10:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43722_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43723_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(12076bc271532979)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7fc08f776443bad8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.673
      maxLongitude: -145.003
      maxTime: '2006-01-25T23:21:00.000000000'
      minLatitude: 48.561
      minLongitude: -171.052
      minTime: '2004-05-18T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43723_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43725_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a2df726b4556e90e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(863794ebf46c567d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.095
      maxLongitude: -151.633
      maxTime: '2004-10-24T14:16:00.000000000'
      minLatitude: 54.585
      minLongitude: -156.258
      minTime: '2004-05-21T23:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43725_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43726_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5829e8c89fc0a902)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fa7b79d2e92b86b3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.14
      maxLongitude: -151.454
      maxTime: '2005-10-23T18:31:00.000000000'
      minLatitude: 49.749
      minLongitude: -179.584
      minTime: '2004-05-21T23:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43726_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43727_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9a2a98a8a64b07cc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(197fcdf0674365c5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.712
      maxLongitude: -149.279
      maxTime: '2004-06-29T23:29:00.000000000'
      minLatitude: 58.181
      minLongitude: -154.008
      minTime: '2004-05-15T20:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43727_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43728_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ff2ebf2f4b609ceb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(06801c04270cb9ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.535
      maxLongitude: -149.168
      maxTime: '2004-05-29T15:34:00.000000000'
      minLatitude: 59.139
      minLongitude: -150.586
      minTime: '2004-05-15T22:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43728_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43729_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(879c917650e7a596)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(379e62bd94ea4140)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.861
      maxLongitude: -168.133
      maxTime: '2005-01-22T18:48:00.000000000'
      minLatitude: 52.242
      minLongitude: -178.001
      minTime: '2004-04-20T02:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43729_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43730_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(df2d641605c186c0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(195687f7f49e5abf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.686
      maxLongitude: -170.076
      maxTime: '2005-02-08T01:30:00.000000000'
      minLatitude: 56.438
      minLongitude: -175.18
      minTime: '2004-07-31T21:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43730_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43731_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(204796633387e7ea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a037a5bf15020781)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 63.525
      maxLongitude: -169.417
      maxTime: '2005-12-14T23:57:00.000000000'
      minLatitude: 56.155
      minLongitude: -177.543
      minTime: '2004-07-28T20:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43731_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43732_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(454f2873819e8759)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0db64f81c7a08ab7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.907
      maxLongitude: -169.333
      maxTime: '2005-03-07T04:48:00.000000000'
      minLatitude: 56.36
      minLongitude: -174.382
      minTime: '2004-07-31T13:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43732_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43733_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6d3946f6fc849bee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d8ce6964680fc0c0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.214
      maxLongitude: -148.284
      maxTime: '2004-05-03T18:45:00.000000000'
      minLatitude: 58.553
      minLongitude: -152.236
      minTime: '2004-04-12T11:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43733_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43734_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2e69ee0462fd3223)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8f53c74231f76348)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.044
      maxLongitude: -168.536
      maxTime: '2005-02-12T05:32:00.000000000'
      minLatitude: 56.022
      minLongitude: -176.553
      minTime: '2004-07-30T08:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43734_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43735_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(67f499845a84160f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ab69335aaafa0c9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.12
      maxLongitude: -149.355
      maxTime: '2004-06-03T11:15:00.000000000'
      minLatitude: 58.968
      minLongitude: -152.475
      minTime: '2004-04-13T08:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43735_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43737_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4402cd6fcc7345ee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f3b289e19b60fb4e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.752
      maxLongitude: -148.224
      maxTime: '2004-09-17T06:03:00.000000000'
      minLatitude: 55.749
      minLongitude: -155.28
      minTime: '2004-04-12T09:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43737_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43738_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(153e8b07890df63d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e14c48acc2b0c967)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.6
      maxLongitude: -166.349
      maxTime: '2005-02-10T07:18:00.000000000'
      minLatitude: 50.625
      minLongitude: -172.921
      minTime: '2004-04-20T12:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43738_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43820_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e2f847da93ed24f5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3e4ad392c90ec964)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.639
      maxLongitude: -155.153
      maxTime: '2004-01-21T13:18:00.000000000'
      minLatitude: 54.373
      minLongitude: -165.103
      minTime: '2003-09-25T21:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/43820_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43821_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cefcadb1c6cb90a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(905491b6cd51dd94)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.628
      maxLongitude: -154.888
      maxTime: '2003-12-26T10:08:00.000000000'
      minLatitude: 51.725
      minLongitude: -169.831
      minTime: '2003-09-25T18:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/43821_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43c59afe0b957792:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4402cd6fcc7345ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4438d335c280ccb9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  44e82e61806f53ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(088252a2cbf32f5a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  454f2873819e8759:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  461f73a8a81c4bdc:
    kwargs:
      data: '{data(c286835c06037430)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  46d3e4c6997db019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  472f02dac9a17605:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  475eddcaef7aae6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4780a4694b871f44:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ba9aac7392124d20)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  47fd1913e4765289:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  48d29f6d44e5504c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4950dd74a0d8bddb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9585c1851a5ec934)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a065f721a7a0da3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a32f4c92c920bf2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a336279f1703c8a:
    kwargs:
      data: '{data(cc2b3eeffac2a9c7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a3d120fcca504e4:
    kwargs:
      data: '{data(04a1a5ff88915e68)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a5ff4708be2f8eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ab69335aaafa0c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cd158f3dd02a689e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b4db960d472ce50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b71fd9def061d92:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4bfdbca66fb4b8fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c0859c2db1c7048:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c5c4d57da11df0a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4cd11f8f1a4946d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ce3011d994957ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3d9ac131d4457e40)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4d90516b0d23d8f7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5ede99bac471c7f6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e211126dc021c25:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(28516b7a21631488)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e3ded9df2f00a6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8bb410c7ed24a2b7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e722f0ff40b2b60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4edb26d7cc2e6b72:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ee316bc05db2187:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f2582fe762df1bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4fb876d3531143cf:
    kwargs:
      data: '{data(e0ebcde1693aa070)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4fc6093b9d4ac9cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0b5de737b7000e5f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4feb44dcf8a9a166:
    kwargs:
      data: '{data(46b92d2ac7c70e2b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  502b3d08f2628e6d:
    kwargs:
      data: '{data(bace0eb85f8b5735)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5178ea118ec51069:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19c8ac47c30a822c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  522a1032ac476f7a:
    kwargs:
      data: '{data(872c4d76e891a8fe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5296f8ff3e6d956c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  52ea94a9133c2b6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53287_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7540d955310d9d28)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a206cedd244c5a86)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.541
      maxLongitude: -151.318
      maxTime: '2004-12-31T16:20:00.000000000'
      minLatitude: 53.213
      minLongitude: -167.0
      minTime: '2004-09-01T12:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53287_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53288_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a9bc216b402c3f28)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d1fc47daafd70f58)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.095
      maxLongitude: -152.049
      maxTime: '2004-11-25T11:30:00.000000000'
      minLatitude: 54.925
      minLongitude: -158.618
      minTime: '2004-08-27T20:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53288_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53289_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9792e25f43664f0e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2a3d7ddc614a1c11)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.943
      maxLongitude: -152.987
      maxTime: '2005-04-26T12:04:00.000000000'
      minLatitude: 51.985
      minLongitude: -183.949
      minTime: '2004-11-06T22:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53289_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53290_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4bfdbca66fb4b8fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b785b3e20b24ca05)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.966
      maxLongitude: -163.929
      maxTime: '2005-08-28T11:48:00.000000000'
      minLatitude: 55.271
      minLongitude: -168.056
      minTime: '2005-05-10T23:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53291_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(18ed6585c6a03893)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(64bd01c1d0c9f7d2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.908
      maxLongitude: -152.05
      maxTime: '2006-03-06T03:21:00.000000000'
      minLatitude: 51.887
      minLongitude: -182.008
      minTime: '2004-11-06T07:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53291_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53292_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(546cc517d52d1e4a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d7a7dc2d261f8d3c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.243
      maxLongitude: -153.046
      maxTime: '2005-02-11T08:31:00.000000000'
      minLatitude: 50.084
      minLongitude: -176.248
      minTime: '2004-11-08T21:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53292_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53293_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0bc952d9d10ea2fb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9d982810efc8d825)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.026
      maxLongitude: -153.317
      maxTime: '2005-08-20T23:41:00.000000000'
      minLatitude: 52.597
      minLongitude: -175.751
      minTime: '2004-11-07T05:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53293_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53294_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d535a641ad1428ad)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8827f75ac73bb4b6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.068
      maxLongitude: -151.424
      maxTime: '2005-07-21T03:31:00.000000000'
      minLatitude: 55.017
      minLongitude: -161.523
      minTime: '2005-02-23T10:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53295_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(37f1e80a857868a6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(293fd947137e2708)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.579
      maxLongitude: -149.629
      maxTime: '2006-06-27T22:44:00.000000000'
      minLatitude: 52.347
      minLongitude: -178.025
      minTime: '2005-02-24T00:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53296_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1c2df0d0f6f51d5e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(975d9fe30380382d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.575
      maxLongitude: -172.344
      maxTime: '2005-12-23T10:07:00.000000000'
      minLatitude: 59.242
      minLongitude: -178.361
      minTime: '2005-05-04T04:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53297_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9c1d3157ead089f2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4e211126dc021c25)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.029
      maxLongitude: -152.267
      maxTime: '2006-10-03T08:02:00.000000000'
      minLatitude: 56.088
      minLongitude: -154.971
      minTime: '2006-08-26T19:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53297_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53298_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d5a484fdf9f4c421)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3688548c404e9a1f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.148
      maxLongitude: -151.003
      maxTime: '2005-03-08T07:20:00.000000000'
      minLatitude: 57.938
      minLongitude: -154.761
      minTime: '2005-02-23T12:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53299_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ac6a5ecf0d316d77)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(34b4bf14f1662143)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.753
      maxLongitude: -134.771
      maxTime: '2005-10-02T17:08:00.000000000'
      minLatitude: 55.014
      minLongitude: -152.696
      minTime: '2005-02-07T14:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53300_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(31355422187bd160)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1a63403d64f9c02f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.223
      maxLongitude: -159.539
      maxTime: '2006-08-13T16:27:00.000000000'
      minLatitude: 55.192
      minLongitude: -164.449
      minTime: '2005-05-10T23:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53302_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(74d4c234985f3c9e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f22b83c190e2967d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.464
      maxLongitude: -163.974
      maxTime: '2005-06-17T22:44:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.158
      minTime: '2005-05-10T18:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53303_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ca69e08b6730b59e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5d557be60abe59f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.957
      maxLongitude: -164.346
      maxTime: '2005-06-30T23:20:00.000000000'
      minLatitude: 54.862
      minLongitude: -164.623
      minTime: '2005-05-10T15:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53304_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7ff95f8bd64678cd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b596b7febf2b8ab2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.225
      maxLongitude: -136.141
      maxTime: '2005-09-22T03:36:00.000000000'
      minLatitude: 56.052
      minLongitude: -140.38
      minTime: '2005-05-06T10:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53306_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(585cdf9b7841a553)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01068f364e1024f8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.974
      maxLongitude: -136.98
      maxTime: '2006-02-10T23:48:00.000000000'
      minLatitude: 56.36
      minLongitude: -156.327
      minTime: '2005-05-06T17:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53307_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a3ffccdb5c3be308)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a5892e8ff8620720)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.386
      maxLongitude: -151.188
      maxTime: '2007-08-16T17:37:00.000000000'
      minLatitude: 50.112
      minLongitude: -189.67
      minTime: '2006-08-29T08:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53307_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53308_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1d3c80ff4bc8833b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ce236ed29af2a1b3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.762
      maxLongitude: -137.808
      maxTime: '2006-06-24T22:15:00.000000000'
      minLatitude: 50.468
      minLongitude: -174.065
      minTime: '2005-05-03T07:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53309_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(006c0d07d1594133)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6363bec67314ca70)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.526
      maxLongitude: -130.247
      maxTime: '2006-05-25T23:37:00.000000000'
      minLatitude: 49.102
      minLongitude: -147.677
      minTime: '2005-04-23T21:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53310_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(798420726cc6996c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(360500e4401b094f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.005
      maxLongitude: -132.735
      maxTime: '2005-11-17T07:07:00.000000000'
      minLatitude: 52.074
      minLongitude: -136.372
      minTime: '2005-04-30T14:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53311_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(70528105803719ca)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(62c559565a7836a2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.026
      maxLongitude: -134.84
      maxTime: '2005-05-15T18:02:00.000000000'
      minLatitude: 55.063
      minLongitude: -138.304
      minTime: '2005-02-07T15:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53312_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(87de1bea881b9e9d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fbadcd0d6e36baf3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.07
      maxLongitude: -132.786
      maxTime: '2006-08-11T15:20:00.000000000'
      minLatitude: 52.046
      minLongitude: -160.842
      minTime: '2005-04-23T21:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53313_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(47fd1913e4765289)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b284dbb6df3cc529)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.648
      maxLongitude: -164.834
      maxTime: '2007-03-10T19:08:00.000000000'
      minLatitude: 54.638
      minLongitude: -168.201
      minTime: '2006-05-14T12:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53314_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(33314afc63d93b1e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(662264efe0660413)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.212
      maxLongitude: -164.599
      maxTime: '2007-03-09T11:09:00.000000000'
      minLatitude: 55.144
      minLongitude: -178.303
      minTime: '2006-05-15T00:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53315_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c9d586abcd1bb3de)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fe29b1655b3ad8a4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.194
      maxLongitude: -132.928
      maxTime: '2006-05-23T19:31:00.000000000'
      minLatitude: 51.315
      minLongitude: -160.219
      minTime: '2005-03-13T10:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53316_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2ba5190ebd9fee3f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c2d51b028f5237c1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.521
      maxLongitude: -160.289
      maxTime: '2005-08-30T22:47:00.000000000'
      minLatitude: 54.846
      minLongitude: -164.709
      minTime: '2005-05-10T15:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53317_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e5fbc32a4dfee86e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b99ddff0939cc68)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.952
      maxLongitude: -150.249
      maxTime: '2005-05-20T18:30:00.000000000'
      minLatitude: 55.139
      minLongitude: -160.172
      minTime: '2005-02-23T18:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53318_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b09603e5e8d306e6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cebc92b35cb1baae)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.735
      maxLongitude: -163.713
      maxTime: '2006-04-11T22:02:00.000000000'
      minLatitude: 54.446
      minLongitude: -194.148
      minTime: '2005-05-10T23:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53319_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ad7d5b97ec20cec9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3da4efd7554f48eb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.217
      maxLongitude: -132.01
      maxTime: '2005-06-11T00:58:00.000000000'
      minLatitude: 51.818
      minLongitude: -134.528
      minTime: '2005-03-13T07:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53320_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(660ad7937584e5a4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3697aad041628e60)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.15
      maxLongitude: -158.669
      maxTime: '2005-10-01T15:42:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.88
      minTime: '2005-05-10T18:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53321_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a8265d72a4bad44d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b501ad5e35aef0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.094
      maxLongitude: -137.862
      maxTime: '2006-02-22T16:22:00.000000000'
      minLatitude: 54.961
      minLongitude: -143.738
      minTime: '2005-05-03T11:11:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  537f169d79da6937:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5434ea08699f30b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  543cc6e2c67f3841:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  54539d026e255ace:
    kwargs:
      data: '{data(ee30325b76a6c545)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  545ac8e9cdc232fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cb2cfbede6c52914)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  546cc517d52d1e4a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  555415ce0c7339ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9b4c90451d42a1d4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  564bf1a793c7e050:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57863_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1abd6c19b1659472)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(abd3790a968e5bb5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.135
      maxLongitude: -163.787
      maxTime: '2006-05-27T16:39:00.000000000'
      minLatitude: 55.009
      minLongitude: -164.241
      minTime: '2006-05-15T04:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57866_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0f1c4ddc19df3124)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f82d016a6d5e5287)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.922
      maxLongitude: -159.095
      maxTime: '2007-03-26T08:32:00.000000000'
      minLatitude: 55.14
      minLongitude: -164.73
      minTime: '2006-05-15T01:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57867_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(865c4e20e7afb3c8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(16b3d90c4787777c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.15
      maxLongitude: -163.749
      maxTime: '2006-06-13T14:44:00.000000000'
      minLatitude: 54.731
      minLongitude: -165.05
      minTime: '2006-05-14T13:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57868_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ddb8e626cb30b49e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b6e032b782b9a3fb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.57
      maxLongitude: -167.435
      maxTime: '2007-03-25T04:26:00.000000000'
      minLatitude: 57.037
      minLongitude: -170.442
      minTime: '2006-05-08T20:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57869_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(30b2d9d3a356a7f5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d71984af9143ae40)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.843
      maxLongitude: -171.648
      maxTime: '2007-01-31T05:29:00.000000000'
      minLatitude: 57.768
      minLongitude: -180.457
      minTime: '2006-04-27T10:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57870_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5ac0bfebf1ba82bb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(721d465e3a20a8be)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.327
      maxLongitude: -151.187
      maxTime: '2006-11-21T23:07:00.000000000'
      minLatitude: 45.139
      minLongitude: -196.676
      minTime: '2005-07-23T18:11:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57872_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(82daabe751e4a00f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91aeb67b9b52c7e7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.935
      maxLongitude: -150.796
      maxTime: '2005-10-22T10:56:00.000000000'
      minLatitude: 54.695
      minLongitude: -158.341
      minTime: '2005-07-23T06:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57873_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1799ff0a118caef4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cab4107de836ae7e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.689
      maxLongitude: -171.456
      maxTime: '2007-01-29T13:53:00.000000000'
      minLatitude: 57.759
      minLongitude: -180.384
      minTime: '2006-04-27T05:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57874_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c5ff7a849d551243)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91163a0cd7b160b4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.2
      maxLongitude: -151.26
      maxTime: '2005-09-27T20:57:00.000000000'
      minLatitude: 57.23
      minLongitude: -156.299
      minTime: '2005-07-22T06:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57875_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d0efba3ee7617402)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b2ce9577a1479de7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.075
      maxLongitude: -168.747
      maxTime: '2007-10-29T23:42:00.000000000'
      minLatitude: 56.37
      minLongitude: -184.094
      minTime: '2006-04-22T07:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57876_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ca5a9fb0e2e3317e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b33ab01367cab5d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.111
      maxLongitude: -152.118
      maxTime: '2006-02-27T20:19:00.000000000'
      minLatitude: 54.972
      minLongitude: -162.159
      minTime: '2005-09-10T16:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57878_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8524d70928f5f8f6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(555415ce0c7339ed)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.2
      maxLongitude: -151.899
      maxTime: '2007-05-17T23:21:00.000000000'
      minLatitude: 48.316
      minLongitude: -177.111
      minTime: '2005-09-09T23:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57879_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f36ff97a8923c902)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(25f0fe0cd02f9e0c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.13
      maxLongitude: -150.578
      maxTime: '2005-11-22T00:10:00.000000000'
      minLatitude: 56.65
      minLongitude: -154.035
      minTime: '2005-07-22T16:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57880_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a811620eac1d8a84)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(084a0be3943acbe3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.311
      maxLongitude: -152.354
      maxTime: '2005-09-11T22:45:00.000000000'
      minLatitude: 57.22
      minLongitude: -152.82
      minTime: '2005-09-10T02:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57881_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8f314e6fdd20e074)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1ec1ec09b8c0e2b5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.249
      maxLongitude: -152.432
      maxTime: '2005-09-21T02:07:00.000000000'
      minLatitude: 56.896
      minLongitude: -153.486
      minTime: '2005-09-11T21:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57883_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b4ea4a7024b9d513)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(983e1d044bb9c0f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.421
      maxLongitude: -151.153
      maxTime: '2006-10-25T18:20:00.000000000'
      minLatitude: 56.195
      minLongitude: -155.252
      minTime: '2006-08-26T04:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57883_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57885_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7c9070e8435e56c9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f7a3990ef402456e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.05
      maxLongitude: -144.77
      maxTime: '2005-10-22T01:47:00.000000000'
      minLatitude: 58.858
      minLongitude: -152.073
      minTime: '2005-08-10T00:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57887_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dc5d4a373497e4a8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6332529005ecf87a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.711
      maxLongitude: -149.547
      maxTime: '2006-03-02T18:43:00.000000000'
      minLatitude: 55.069
      minLongitude: -160.128
      minTime: '2005-07-21T06:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57888_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4ee316bc05db2187)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(187a19e2a36d1366)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.563
      maxLongitude: -151.128
      maxTime: '2008-03-07T13:01:00.000000000'
      minLatitude: 50.444
      minLongitude: -181.413
      minTime: '2006-08-26T04:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57888_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57889_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c3ced844ad45774b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb5a2fdf4402c273)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -150.495
      maxTime: '2005-11-22T05:08:00.000000000'
      minLatitude: 52.59
      minLongitude: -169.453
      minTime: '2005-07-21T16:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - depth_m
          - datetime
          - latitude_N
          - longitude_E
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  579cc9a675eeb5d2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57f29fe6a0c0ba0e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  580bf62b45a2cce0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b019c17863a19723)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5829e8c89fc0a902:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  585cdf9b7841a553:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  58a8bb0ca00e89f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(430c524da1708138)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5a3694489e208c73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5ac0bfebf1ba82bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b8418d4f59d23d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5be560ec7f5ba45d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5c7122f85c71b725:
    kwargs:
      data: '{data(6d9a968634f8b947)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5c740091a13a3fb5:
    kwargs:
      data: '{data(cdf91c1eca3cc14c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5ca217993041f640:
    kwargs:
      data: '{data(ce828fd606e8f45c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d0a3a602c41a88b:
    kwargs:
      data: '{data(d7b6169e2e1506bb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d557be60abe59f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(368edb33ed44e4a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d7101901b85af33:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d79863955d35658:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d851017eb66207c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e68b4d49c4dcae2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(76e8223d00e12ae5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e86da0a3d4b255b:
    kwargs:
      data: '{data(8e97bd7a68474b1c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5ebbed79bbad61dd:
    kwargs:
      data: '{data(c7c96753def8fd60)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5ede99bac471c7f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f07db62a8a0fcfc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b4db960d472ce50)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f859ed2a52f1252:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf198aed67ec6c66)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5fd667f7ab5f31a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6085e2a338ba4fae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b09291bd8097ec75)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  60cd596df3132df0:
    kwargs:
      data: '{data(b4d533c3bb150ee5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  60fbb611791bd6e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61a131ceab7b62db:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8c7fca51ccd1f6d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61d3db54f90d7b90:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61d67af49a69df91:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(32ecd4924d2ec98f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  621663a825f62870:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6249b4abe6f36f61:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62c559565a7836a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2eb450c0e5157d9e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62ea7d69eb2e5fef:
    kwargs:
      data: '{data(ab543029cb764389)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  63115be7702ccaae:
    kwargs:
      data: '{data(35869eb68296394b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6332529005ecf87a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19a4023f440f844a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6348e59337f00f30:
    kwargs:
      data: '{data(4ea2d3c7ff0fd4bf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6363a37aacd6c8ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6363bec67314ca70:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9008dd01002fe681)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  63ba731657a6186b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  64bd01c1d0c9f7d2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4b123e9dc16cb6c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  65b783bedb4b159d:
    kwargs:
      data: '{data(b1062cfa9c67f024)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  660ad7937584e5a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  662264efe0660413:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ceec6c4e04541dd5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  664084ff2fd99ecb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6643e8df979ac170:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  665a38abe68b27a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e24193181053c333)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66ef57392e28a8fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67cca495bfc75d8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67f499845a84160f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  688043574fa5e922:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e340643328a2234)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  68ad5243704e8445:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6955f5900f49cb2d:
    kwargs:
      data: '{data(25b260deecb88c2f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a247fc519be5ff6:
    kwargs:
      data: '{data(b08c3f262831b320)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a3233266abdb0b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a82e52deb10b31e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6feb11edc4cec42)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a9ff213ac527650:
    kwargs:
      data: '{data(122fb98fdfa7e111)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6b720db7ecb346b2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6bbab0253f8fc0cb:
    kwargs:
      data: '{data(ea686806a919b2e0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6bec0561a05982d4:
    kwargs:
      data: '{data(5cb47bf795f950fe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6c2fc996c06d2f8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ce6f0615b08cc4f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6d1ae81ef908e36f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6d3946f6fc849bee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6dd27e173d782e11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6dd427b0fdef56da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5d7101901b85af33)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6e6441ff8b6c05e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73408c68ca4f39c5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ea21513ce603b20:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8420283c93607224)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f0f3984262ce5c2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6fb73fa6c7336f60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6fbc67df22b9d52c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7012f309131ff542:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7037922f6a87f0ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b01172057c138e1a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  70528105803719ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  713be3148cbec1ec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a32f4c92c920bf2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  715f9d7c308d2e06:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  720bb55eb3a9be30:
    kwargs:
      data: '{data(69fe39b0cb8b5151)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  721d465e3a20a8be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6fb73fa6c7336f60)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72d4512f9a139a6d:
    kwargs:
      data: '{data(3ef4fabacab692e0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  73408c68ca4f39c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73831c3127a2773a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  746f565fb309c0cd:
    kwargs:
      data: '{data(27a681065c898df5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7470723088102b64:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6b720db7ecb346b2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  74d4c234985f3c9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  752fd5b572ea6c2d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(efa8dc135179a876)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7540d955310d9d28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7563b1a376db29b5:
    kwargs:
      data: '{data(651da3bc70e2aaea)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7663ac1940f27d50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  767dd086738de4ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7689d00838489820:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  76aca103021ee2fb:
    kwargs:
      data: '{data(5031b4a9172dcd40)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  76b34934a66358b3:
    kwargs:
      data: '{data(855811dd28225e7d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  76e8223d00e12ae5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  771172bf8619cca9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77636f43acf8e66b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77ac1ea1366b0e9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  783b3a9585085ab2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  78bbc95fa0560bed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  798420726cc6996c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  79ffaca165fd721e:
    kwargs:
      data: '{data(fe423d06d697785b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7a0a3f46896b9e1b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7a894387f6ef1fd0:
    kwargs:
      data: '{data(00d256adab12eb1a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7aeee807fff8312f:
    kwargs:
      data: '{data(ea9d5c822f430532)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7b401c59a4def4da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7b463f6d12f50410:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(33f247f329ec2f3b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7b982616cb3078e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7c4f80f7879cc073:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3c82aba49f30f931)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7c9070e8435e56c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7d3043a9998cf4a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a6ef34d557dac7dd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7d8ccde1aa47b08a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7e6bc95460474b6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ebf0309c5e06f7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7f39faa3c6497c31:
    kwargs:
      data: '{data(e620eaa8ff69040c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7fbed37203dc7093:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7fc08f776443bad8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2026dbcb99e2e570)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7fda96b699d938ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ff95f8bd64678cd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8096f4c37615bd11:
    kwargs:
      data: '{data(db6e329ab71af6f1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  81866db1b9eba3d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  81d6e67ac6f3cd22:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  821dacb6d78e8447:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  822f1e044dfb8b76:
    kwargs:
      data: '{data(98b94fcf8454becb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  82daabe751e4a00f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  82e899b29270a35b:
    kwargs:
      data: '{data(08e1048a24643911)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8420283c93607224:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  843a0fac153389b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  845ea8f3781102bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8e4ce4ead600e489)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8524d70928f5f8f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8577d021a88b1a61:
    kwargs:
      data: '{data(463642ed3268015f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  85ffd365be74b051:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  863794ebf46c567d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(89de2bda7b5fa03a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  865c4e20e7afb3c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  86adae6d96dc85a5:
    kwargs:
      data: '{data(e99b265255b7c297)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8750625b49ab490b:
    kwargs:
      data: '{data(c0f803c5cb9863da)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  876b92d534471d7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1688312322cf2a86)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  879c917650e7a596:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  879e92f9c29dc59b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(eed6fa8c6b221ea0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  87de1bea881b9e9d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8827f75ac73bb4b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d10c502184a296cc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8864f3be110fe262:
    kwargs:
      data: '{data(80287b2e5b6839a2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  88f1b30d8fd4429f:
    kwargs:
      data: '{data(68e4a0c2603fdcdc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8906a88d8f5e8405:
    kwargs:
      data: '{data(79912cbdda2e4df4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8920ba9356e29f19:
    kwargs:
      data: '{data(dd6439f5c1e02076)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  892d5bcd1ec84e5b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8999b24776b87c11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89c2d8a43622f231:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89cd22e5ff35e6e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(57f29fe6a0c0ba0e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89de2bda7b5fa03a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89e3b699b5d494cb:
    kwargs:
      data: '{data(6bfd3f3df3fcf6fb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8b33ab01367cab5d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b321ca5a7e6bd5a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8b687b1a757f2cb6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(61d3db54f90d7b90)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bb410c7ed24a2b7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8c5851372ef02120:
    kwargs:
      data: '{data(a2e69af5c8aa83c1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8c7fca51ccd1f6d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8cc630fda17efe3c:
    kwargs:
      data: '{data(7e3ee610e6b30f63)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8cd2bbb5a9ccec03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c16fd3af208aff1d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d8d41a70081490b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8dc511922e34191f:
    kwargs:
      data: '{data(6d1e12a3d86ed42d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8e4ce4ead600e489:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8eae2f7abe2ea31d:
    kwargs:
      data: '{data(8250c777a5fbaf8c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8f314e6fdd20e074:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f3d77ab7cb69b3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f53c74231f76348:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6fc5c93cf3dcaa5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9008dd01002fe681:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  905491b6cd51dd94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f1f38e9b7741deb3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91163a0cd7b160b4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0467c3e3115b6091)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9124dd97dbececbc:
    kwargs:
      data: '{data(2c38d602b0189b26)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  91830f5735bf93e4:
    kwargs:
      data: '{data(102156a564a096ad)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9194c072edaf47e1:
    kwargs:
      data: '{data(c4eb286ec741be33)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  91aeb67b9b52c7e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(afe05fe214bfeb7d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  923a4565722fd880:
    kwargs:
      data: '{data(b71876475c1d6fbe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  927ba5eecc59d2cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92b7ced48eac44fe:
    kwargs:
      data: '{data(03acd0bdcc3ad772)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  92e3a3e4ad9ec85f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92e966670d6d6d0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9307a232f307fa10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9353d2b022b34f3f:
    kwargs:
      data: '{data(d797205072b2ab78)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  950a44b3b672cf06:
    kwargs:
      data: '{data(3039b8409f989a30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  95731ac97b68adaa:
    kwargs:
      data: '{data(3d94b27c58ec9d77)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9585c1851a5ec934:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  969364ecce1ca069:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3bc4fee0107d8b82)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  96c2e772d7a0a361:
    kwargs:
      data: '{data(3a82aa5cb245c12e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  96d51fb7975f8b60:
    kwargs:
      data: '{data(e774a98cae3bceca)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  975d9fe30380382d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c595c4746f8685bd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9781a06cc1109f07:
    kwargs:
      data: '{data(504b6d23b90a6289)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9792e25f43664f0e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97f40367c07eac04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  983e1d044bb9c0f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(050a7a15076744d1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  986a900207eb2b03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(66ef57392e28a8fe)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  98fb4de35c2d79aa:
    kwargs:
      data: '{data(06e90686b379b76d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9a2a98a8a64b07cc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a7129c4771ecc73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a8eca7e05c9a5926)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b149593038355e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b4c90451d42a1d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b501ad5e35aef0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ceabc8722b1c8184)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b9453f77e12a0c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b99ddff0939cc68:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf6cdc9f793ea667)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9c1d3157ead089f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9cb010dea67a259f:
    kwargs:
      data: '{data(63827a55f353bd93)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9d84b44e98e08bf0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9d982810efc8d825:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(113bb6b7b6650708)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9defe4159bac54d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e2a338178d336c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9eb786b0862a85b5:
    kwargs:
      data: '{data(92717cbbb53efb41)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9ecf766b3ce3408b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f0b74da7ae23f97:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f157639b1e9a59a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7e6bc95460474b6a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f809d8c6b85c57a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f852e0c022cad62:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0854a5e6a2595d37)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9fd671b22b2f0179:
    kwargs:
      data: '{data(878e492709c70f0f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a01c9b6892410238:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(141f094d1114ba72)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a037a5bf15020781:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3271d25698b61ee2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a0976b270933445b:
    kwargs:
      data: '{data(cdbd22bbbcec5c02)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a1b3c76fce7df0e4:
    kwargs:
      data: '{data(942ae527a06f2722)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a2066e73e7d7f437:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a206cedd244c5a86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(85ffd365be74b051)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a21133d671780d8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a25bfd9212321f73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a276983831e274ce:
    kwargs:
      data: '{data(ae8da310999d4e5c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a2df726b4556e90e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a329f87ce5cc05f1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3340da04ce536d5:
    kwargs:
      data: '{data(fe900ae87233d68b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a3ffccdb5c3be308:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a418e89a0bc616a4:
    kwargs:
      data: '{data(69398aa2624b3c03)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a4753448f9b2a81d:
    kwargs:
      data: '{data(6828b0804f38800e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a497d7a653d6c7e0:
    kwargs:
      data: '{data(73e64c4b883a6ffa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a4bb6f8525d7936f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4bf7c380140de1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4e339525fabe46c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c0859c2db1c7048)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a52441e85302021d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a535e1e3bcb82e23:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a5892e8ff8620720:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e1d481b19f7c29b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a60506c358465591:
    kwargs:
      data: '{data(af51edc0a933dbcc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a6ef34d557dac7dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a7696f96bcf1b58c:
    kwargs:
      data: '{data(de5c35842929103e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a79e63426a1005a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a811620eac1d8a84:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8265d72a4bad44d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a89119a894087d0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6c2fc996c06d2f8b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8eca7e05c9a5926:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9234a1a94749feb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf1b09f492c489aa)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a94d0e413d9acd17:
    kwargs:
      data: '{data(1e7ce44b41acb69f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a959400d06b1c037:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a977a99a047533e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9bc216b402c3f28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9e6dc239f69c4a9:
    kwargs:
      data: '{data(176229a798bf1faa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aa329239f794dfd5:
    kwargs:
      data: '{data(f2829ba6621d1fa7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aad0254273c00518:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(afae26634eee4692)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aad1e4f03eab3e9a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aad962bed8775b7e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab090ce160185087:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab1d0f4518896f87:
    kwargs:
      data: '{data(f7c8edd5a905cf37)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ab6c862d33bb5e18:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  abd3790a968e5bb5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9b149593038355e5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  abe301d787f6338f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac32b7b592cb7d29:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1341aec5b3ed3ea8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac3a9d42d6864b80:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac6a5ecf0d316d77:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac854c86751713ec:
    kwargs:
      data: '{data(f2f3ed29a2903506)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ad6513048c8fcf24:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0afb4470ded4cb4d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ad7d5b97ec20cec9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae26a27a165d8c5a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae7104e10f95239c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae9ced02626581a7:
    kwargs:
      data: '{data(983fa67f27eb1325)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aeb4f9e463363080:
    kwargs:
      data: '{data(fe5347c342f50f53)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  af1902662902a790:
    kwargs:
      data: '{data(b15cd7ed916f91ba)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  af6c937c28e319dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  afae26634eee4692:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  afe05fe214bfeb7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b01172057c138e1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0187c84a8767bac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a79e63426a1005a2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b019c17863a19723:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b09291bd8097ec75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b09603e5e8d306e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0d23ac65e40eeb2:
    kwargs:
      data: '{data(2637e77e54e5b6ef)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b1911eb62a7d1e98:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b1e358e31f7b3093:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b20c34f6a6392388:
    kwargs:
      data: '{data(b156e0f61491ba1a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b284dbb6df3cc529:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(421c023e00dc2e83)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b2ce9577a1479de7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(77ac1ea1366b0e9e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b321ca5a7e6bd5a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b3d952a14a5330eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b3fa5639c9ef34d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b44339e9c296a503:
    kwargs:
      data: '{data(ee66c60f7ca68ef4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b476760c73c93e52:
    kwargs:
      data: '{data(da5ec63dbbb8a066)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b4bc96ad835b5b75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(217fce4157e0ee48)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4e459b34aa9b164:
    kwargs:
      data: '{data(38fc4611fa0b0e8c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b4ea4a7024b9d513:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b596b7febf2b8ab2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a977a99a047533e5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b6e032b782b9a3fb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cde453d3af6dc6c1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7556e816ea74ed2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b785b3e20b24ca05:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6643e8df979ac170)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b788a571540fae62:
    kwargs:
      data: '{data(cbc84645a77e045c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b7bbc38361b15302:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7bf85b315fa5ddd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7eb4a95744ac998:
    kwargs:
      data: '{data(1b5cc335595d323d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b7fde63e298c41cb:
    kwargs:
      data: '{data(f9b424d0a2842417)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b85de1be8757d702:
    kwargs:
      data: '{data(a311322ad5d29168)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b8752f2207996d97:
    kwargs:
      data: '{data(3a09839512267caf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b8e31306c5da36a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b901c5b56795a406:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b92317e41e8f5e1e:
    kwargs:
      data: '{data(b89316d4854c45b0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ba9aac7392124d20:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ba9bc16612ebae58:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bb78762be7250ee2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c26d70ff9cd9280b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbc58871e1432ba8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbc5a410956e5c8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73831c3127a2773a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc497e791403328f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd7605a9b219b00c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd8487b0c10e8223:
    kwargs:
      data: '{data(9beb604bf73b7677)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bebbe78377d66f4c:
    kwargs:
      data: '{data(deb91e3d93f8b04f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bf198aed67ec6c66:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf1b09f492c489aa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf6cdc9f793ea667:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf714fde5236c7d3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c010d4f3d384491e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c1156a8064dd7025:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c14cf6694d9a0682:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c16fd3af208aff1d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c26d70ff9cd9280b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c28bb8d73826103f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2bfa83f6bed2749:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19075a910d4f86c9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2d51b028f5237c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecc88f04ddb13aa5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c31a3a0d0fe5cf4d:
    kwargs:
      data: '{data(f2a17809cf7ed3c4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c363aecdcda24831:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c3c2966e68ae7afc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c3ced844ad45774b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c42a71144fc56eda:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a5ff4708be2f8eb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c55a153ee585004f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c595c4746f8685bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5dc7774d005f8f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7b401c59a4def4da)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5ff7a849d551243:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c608d16502a8a76f:
    kwargs:
      data: '{data(16057e930dced4a9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c73eeb774c7d76a5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4bb6f8525d7936f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c79d04a524b5c5be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c7c919efb1d4cf03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c83dcfc830c3a459:
    kwargs:
      data: '{data(c1cda64678efbf86)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8505df48843b28f:
    kwargs:
      data: '{data(22a7fcc17fac775a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8954f7138daf5ca:
    kwargs:
      data: '{data(9377990511ea7c81)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8ad97fd35c67a6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c987b6f7532e644e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c9d586abcd1bb3de:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca5a9fb0e2e3317e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca69e08b6730b59e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  caa174644edc776a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2ba9f2c3ef3d9424)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cab4107de836ae7e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(04555fcdb80370c6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cb2cfbede6c52914:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cc535d3943343513:
    kwargs:
      data: '{data(29800418bd51f48a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cd158f3dd02a689e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd35ce3c86f99980:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd3f2445bc6af9e9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd80a66f3e7f650c:
    kwargs:
      data: '{data(0f7cb5bc9c942dc9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cde453d3af6dc6c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ce236ed29af2a1b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1d4723efd7d2abdc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ceabc8722b1c8184:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cebc92b35cb1baae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e62fdb0b3d24a03e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ceec6c4e04541dd5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cefcadb1c6cb90a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cfa27c04f364ef45:
    kwargs:
      data: '{data(a2a292bf2fb8a72f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d02a30a44e5784a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2c3a8ac60ef28b68)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d03cb8e16eeaac9e:
    kwargs:
      data: '{data(32859702db0ffa30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d04c1d85b5574ec2:
    kwargs:
      data: '{data(7963ee1eb22a5525)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d091f8eed924d03a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1ebe00673625717b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d0efba3ee7617402:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d10c502184a296cc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d12469529551a485:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d1d4cefe2cf38eac:
    kwargs:
      data: '{data(f7675176ae9b5a3d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d1dce7f7e1308447:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e8466c262e941208)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d1fc47daafd70f58:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b71fd9def061d92)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d2ca55e3d8410014:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d385376149971c21:
    kwargs:
      data: '{data(15e399ff2bd7d333)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d39812b570a53e00:
    kwargs:
      data: '{data(17781d838312df36)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d4140c7047b93bdb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6ce6f0615b08cc4f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d42dbb8434f6bd00:
    kwargs:
      data: '{data(4422281109eceaea)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d4c919fef11c1307:
    kwargs:
      data: '{data(685ba6638536e07f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d535a641ad1428ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d55a6ccf88599e78:
    kwargs:
      data: '{data(56c2efba4072026a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d55aaa981bb3de21:
    kwargs:
      data: '{data(7570137f1de8ae34)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d5a484fdf9f4c421:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d5e4e3833a0994f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d6caf72a29ea1a08:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d71984af9143ae40:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecd532faaeac9487)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d732172b7a29155c:
    kwargs:
      data: '{data(e66d68da0ddfb95b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d7a7dc2d261f8d3c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b8e31306c5da36a3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d834cfd29b51ac8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(475eddcaef7aae6f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d8ce6964680fc0c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(579cc9a675eeb5d2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9ac4c1147914815:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9dc8ec53b5c4968:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  da36c0c78e670cf6:
    kwargs:
      data: '{data(9c99e80c267b62d6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da78a007b4a47253:
    kwargs:
      data: '{data(724d9d292b9d2526)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da7c27063d470db6:
    kwargs:
      data: '{data(ed5badf7ee89cbf7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dab7fff2f581d681:
    kwargs:
      data: '{data(043927c94147d362)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dc5d4a373497e4a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dcfbcf0ccaf25b93:
    kwargs:
      data: '{data(b2c0f685bd78596a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dd04ce475c9bb7e0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dda2b94dc47eeebd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ddb8e626cb30b49e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dea615c0c11db163:
    kwargs:
      data: '{data(4c0f534afb636ca2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  df2d641605c186c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dfc792f2d209c00b:
    kwargs:
      data: '{data(0298ebbd319be488)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dffa7ff5c29b4fae:
    kwargs:
      data: '{data(2166f39b284b0817)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e0c2eb07df4355a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e14c48acc2b0c967:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(97f40367c07eac04)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e24193181053c333:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2d6c1f2a4d3137b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2f847da93ed24f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e36c3cf7fc0e2c04:
    kwargs:
      data: '{data(55770fd2c32cb94a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e3865fd7fa3af600:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e3b03ccc8a9697d4:
    kwargs:
      data: '{data(c21c1c5556dbe29d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e407770f5bf3e01f:
    kwargs:
      data: '{data(ecc0945f280b9e3c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e415c6316f78489d:
    kwargs:
      data: '{data(eac720dd0f31c073)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e4ea60769f8178c4:
    kwargs:
      data: '{data(9577c74ca3bba84c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e5a9a59f3f076553:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5f5ef5222aba4bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5fbc32a4dfee86e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e62fdb0b3d24a03e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6c8ced76db35bb2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2886bea5055a1ce6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6f7fcf8bd4b7705:
    kwargs:
      data: '{data(d44b6d3ca83b8cd1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e70cc1078b52eb1b:
    kwargs:
      data: '{data(d82a0dbbebda8d17)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e8466c262e941208:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e91da9a59154c53a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e963c114b08bbeef:
    kwargs:
      data: '{data(fa7d9823bf63e3eb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e9733a3405aba19b:
    kwargs:
      data: '{data(17dc7dc341ff08b5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e9cce33108606fb1:
    kwargs:
      data: '{data(6159e2fe0f19bac0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eae5e740de77c407:
    kwargs:
      data: '{data(e4e0fb2a2b1cfee6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eaedc8d243549e0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(11bb7059a073e738)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eb92a0737a866a4d:
    kwargs:
      data: '{data(0ddfcdfb791ba9b5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eb97d70709a9f247:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fae7c8e508436a1d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ebaae50c9beade8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e3865fd7fa3af600)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ebd7667ce9935f7f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(60fbb611791bd6e8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec5162a2ac58072e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecb2068a00f90a50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecc88f04ddb13aa5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecd532faaeac9487:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed39615a5140eb73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ee4cf0a05c36afd6:
    kwargs:
      data: '{data(ddb358bc9fc4b0fb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee9071897621fd99:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(664084ff2fd99ecb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eed6fa8c6b221ea0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eedf9b227f477007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eeefb7f3b180666c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e313087e6b19cee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efa8dc135179a876:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efc75197fa677c94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5fd667f7ab5f31a8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f0431bcba0e5f705:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4edb26d7cc2e6b72)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f09e8977f6aef546:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2a7d0928ea717952)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1ac305022835369:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(40dd7a4685b85739)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1f38e9b7741deb3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f22b83c190e2967d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(92e966670d6d6d0c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3092b5558784c27:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f36ff97a8923c902:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3afdcdc19e94a88:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(29efadf4ccc184b8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3b289e19b60fb4e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4bf7c380140de1a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4ae9910e1eaa546:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4b123e9dc16cb6c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4e0474aaeb965f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f60bd0231e907254:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f64fd14d24ed05e9:
    kwargs:
      data: '{data(94a7d2971ad21b5f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f65b615ac300f18e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(52ea94a9133c2b6f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6fc5c93cf3dcaa5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6feb11edc4cec42:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f7a3990ef402456e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d12469529551a485)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f812d0148fd7a701:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f819ac9be7e26dbe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c5c4d57da11df0a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f82d016a6d5e5287:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(927ba5eecc59d2cb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f95d36b4773e18f9:
    kwargs:
      data: '{data(6cf31fc934fb55af)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fa09fa8e02f6b638:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa10379fd08c7bf2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fb115a9e4c0e84fc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa2ed5bf20ea8cce:
    kwargs:
      data: '{data(fde257ef6740e93f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fa7b79d2e92b86b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c14cf6694d9a0682)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa7f720a49ecd5b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fae7c8e508436a1d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb115a9e4c0e84fc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb2e2d6ea650109f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c55a153ee585004f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb5a2fdf4402c273:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9f809d8c6b85c57a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb7ed8a25a707281:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fbadcd0d6e36baf3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ae7104e10f95239c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fc5e126cf7de6e55:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fe29b1655b3ad8a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3060da18e2ab664e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ff2ebf2f4b609ceb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
metadata:
  featuretype: trajectory
  header_names: null
  included: true
  key_variables: []
  map:
    coastline: false
    geo: true
    height: 700
    kind: paths
    legend: false
    line_width: 5
    tiles: true
    title: drifters_ecofoci
    width: 600
    x: longitude
    xlabel: Longitude [W]
    y: latitude
    ylabel: Latitude [N]
  map_description: Drifters
  maplabels:
    fontscale: 1.5
    geo: true
    hover: false
    kind: labels
    text: station
    text_alpha: 0.5
    text_baseline: bottom
    text_color: black
    text_font_size: 10pt
    x: longitude
    y: latitude
  maptype: box
  maxLatitude: 75.921
  maxLongitude: -130.247
  maxTime: '2016-07-26T20:55:00.000000000'
  minLatitude: 44.112
  minLongitude: -205.212
  minTime: '2003-02-25T17:16:00.000000000'
  notes: ''
  overall_desc: Drifters (EcoFOCI)
  project_name: 'Drifters: Ecosystems & Fisheries-Oceanography Coordinated Investigations
    (EcoFOCI)'
  summary: "EcoFOCI Project.\n        \nAs described on the [main project website\
    \ for EcoFOCI](https://www.ecofoci.noaa.gov/):\n\n> We study the ecosystems of\
    \ the North Pacific Ocean, Bering Sea and U.S. Arctic to improve understanding\
    \ of ecosystem dynamics and we apply that understanding to the management of living\
    \ marine resources. EcoFOCI scientists integrate field, laboratory and modeling\
    \ studies to determine how varying biological and physical factors influence large\
    \ marine ecosystems within Alaskan waters.\n\n> EcoFOCI is a joint research program\
    \ between the Alaska Fisheries Science Center (NOAA/ NMFS/ AFSC) and the Pacific\
    \ Marine Environmental Laboratory (NOAA/ OAR/ PMEL).\n\nDrifter data are being\
    \ pulled from this webpage: https://www.ecofoci.noaa.gov/drifters/efoci_drifterData.shtml\
    \ which also has a plot available for each drifter dataset.\n\nSeveral years of\
    \ EcoFOCI drifter data are also available in a private Research Workspace project:\
    \ https://researchworkspace.com/project/41531085/files.\n"
  time: From 1986 to 2017 total but 2003-2006, 2012-2014 here
user_parameters: {}
version: 2

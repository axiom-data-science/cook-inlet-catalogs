aliases:
  106696_y2012_withTandIce: 106696_y2012_withTandIce
  106697_y2012_withTandIce: 106697_y2012_withTandIce
  111968_y2012_withTandIce: 111968_y2012_withTandIce
  111969_y2013_withT: 111969_y2013_withT
  111970_y2013_withT: 111970_y2013_withT
  111971_y2013_withT: 111971_y2013_withT
  111973_y2013_withT: 111973_y2013_withT
  111974_y2013_withT: 111974_y2013_withT
  111976_y2013_withT: 111976_y2013_withT
  113633_y2012_withT: 113633_y2012_withT
  113634_y2012_withT: 113634_y2012_withT
  113635_y2012_withTandIce: 113635_y2012_withTandIce
  113636_y2012_withTandIce: 113636_y2012_withTandIce
  113637_y2012_withTandIce: 113637_y2012_withTandIce
  113638_y2012_withTandIce: 113638_y2012_withTandIce
  113639_y2012_withTandIce: 113639_y2012_withTandIce
  113640_y2012_withTandIce: 113640_y2012_withTandIce
  113641_y2012_withTandIce: 113641_y2012_withTandIce
  113642_y2012_withTandIce: 113642_y2012_withTandIce
  119593_y2012_withTandIce: 119593_y2012_withTandIce
  119594_y2012_withTandIce: 119594_y2012_withTandIce
  119595_y2012_withTandIce: 119595_y2012_withTandIce
  119596_y2012_withTandIce: 119596_y2012_withTandIce
  119597_y2012_withTandIce: 119597_y2012_withTandIce
  119598_y2012_withTandIce: 119598_y2012_withTandIce
  119599_y2012_withTandIce: 119599_y2012_withTandIce
  119600_y2012_withTandIce: 119600_y2012_withTandIce
  122532_y2013_withT: 122532_y2013_withT
  122533_y2013_withT: 122533_y2013_withT
  122534_y2013_withTandIce: 122534_y2013_withTandIce
  122535_y2013_withTandIce: 122535_y2013_withTandIce
  122536_y2013_withTandIce: 122536_y2013_withTandIce
  122537_y2013_withTandIce: 122537_y2013_withTandIce
  122538_y2013_withTandIce: 122538_y2013_withTandIce
  122540_y2013_withTandIce: 122540_y2013_withTandIce
  122541_y2013_withTandIce: 122541_y2013_withTandIce
  122542_y2013_withT: 122542_y2013_withT
  122543_y2013: 122543_y2013
  122843_y2013_withTandIce: 122843_y2013_withTandIce
  122844_y2013_withTandIce: 122844_y2013_withTandIce
  122845_y2013_withT: 122845_y2013_withT
  128951_y2013_withTandIce: 128951_y2013_withTandIce
  128952_y2013_withT: 128952_y2013_withT
  128954_y2013_withTandIce: 128954_y2013_withTandIce
  128955_y2013_withTandIce: 128955_y2013_withTandIce
  136871_y2014_withTandIce: 136871_y2014_withTandIce
  136873_y2014_withT: 136873_y2014_withT
  136874_y2014_withT: 136874_y2014_withT
  37489_y2003: 37489_y2003
  43700_y2004: 43700_y2004
  53290_y2005: 53290_y2005
  53294_y2005: 53294_y2005
  53295_y2005: 53295_y2005
  53296_y2005: 53296_y2005
  53298_y2005: 53298_y2005
  53299_y2005: 53299_y2005
  53300_y2005: 53300_y2005
  53302_y2005: 53302_y2005
  53303_y2005: 53303_y2005
  53304_y2005: 53304_y2005
  53306_y2005: 53306_y2005
  53308_y2005: 53308_y2005
  53309_y2005: 53309_y2005
  53310_y2005: 53310_y2005
  53311_y2005: 53311_y2005
  53312_y2005: 53312_y2005
  53313_y2006: 53313_y2006
  53314_y2006: 53314_y2006
  53315_y2005: 53315_y2005
  53316_y2005: 53316_y2005
  53317_y2005: 53317_y2005
  53318_y2005: 53318_y2005
  53319_y2005: 53319_y2005
  53320_y2005: 53320_y2005
  53321_y2005: 53321_y2005
  57863_y2006: 57863_y2006
  57866_y2006: 57866_y2006
  57867_y2006: 57867_y2006
  57868_y2006: 57868_y2006
  57869_y2006: 57869_y2006
  57870_y2005: 57870_y2005
  57872_y2005: 57872_y2005
  57873_y2006: 57873_y2006
  57874_y2005: 57874_y2005
  57875_y2006: 57875_y2006
  57876_y2005: 57876_y2005
  57878_y2005: 57878_y2005
  57879_y2005: 57879_y2005
  57880_y2005: 57880_y2005
  57881_y2005: 57881_y2005
  57885_y2005: 57885_y2005
  57887_y2005: 57887_y2005
  57889_y2005: 57889_y2005
data:
  00b3fcd6bb9c1bf3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    metadata: {}
    user_parameters: {}
  0298ebbd319be488:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    metadata: {}
    user_parameters: {}
  043927c94147d362:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    metadata: {}
    user_parameters: {}
  0af14b2d83b70f15:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    metadata: {}
    user_parameters: {}
  16057e930dced4a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    metadata: {}
    user_parameters: {}
  176229a798bf1faa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    metadata: {}
    user_parameters: {}
  17781d838312df36:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    metadata: {}
    user_parameters: {}
  1ae19950b13f3a59:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    metadata: {}
    user_parameters: {}
  1b5cc335595d323d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    metadata: {}
    user_parameters: {}
  1e7ce44b41acb69f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    metadata: {}
    user_parameters: {}
  2166f39b284b0817:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    metadata: {}
    user_parameters: {}
  250d6db3426eb40a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    metadata: {}
    user_parameters: {}
  25b260deecb88c2f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2637e77e54e5b6ef:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  27202cc06ec90a5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  3039b8409f989a30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  3555846dbbe8f181:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  35869eb68296394b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  3a82aa5cb245c12e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    metadata: {}
    user_parameters: {}
  3d94b27c58ec9d77:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  46b92d2ac7c70e2b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  48165b0ea9a220cc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  4c0f534afb636ca2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  50d424c83354e4d9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    metadata: {}
    user_parameters: {}
  56c2efba4072026a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  57a3bec617c5d194:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  59a9be915087d77f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    metadata: {}
    user_parameters: {}
  603576f54b88b55b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    metadata: {}
    user_parameters: {}
  6159e2fe0f19bac0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    metadata: {}
    user_parameters: {}
  63827a55f353bd93:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  6828b0804f38800e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    metadata: {}
    user_parameters: {}
  69398aa2624b3c03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    metadata: {}
    user_parameters: {}
  69fe39b0cb8b5151:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6bfd3f3df3fcf6fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6d87c4883decc1dd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  73e64c4b883a6ffa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  7570137f1de8ae34:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  79912cbdda2e4df4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  79aedd5c0757fa85:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  8250c777a5fbaf8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    metadata: {}
    user_parameters: {}
  872c4d76e891a8fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  878e492709c70f0f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  8e117a800072c7e8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    metadata: {}
    user_parameters: {}
  8e97bd7a68474b1c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    metadata: {}
    user_parameters: {}
  92717cbbb53efb41:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    metadata: {}
    user_parameters: {}
  94a7d2971ad21b5f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    metadata: {}
    user_parameters: {}
  95572cd2add32005:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  9577c74ca3bba84c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    metadata: {}
    user_parameters: {}
  983fa67f27eb1325:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  98b94fcf8454becb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  9beb604bf73b7677:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    metadata: {}
    user_parameters: {}
  a2e69af5c8aa83c1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    metadata: {}
    user_parameters: {}
  abe5c89ce4af7369:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    metadata: {}
    user_parameters: {}
  ae8da310999d4e5c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    metadata: {}
    user_parameters: {}
  af51edc0a933dbcc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b08c3f262831b320:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    metadata: {}
    user_parameters: {}
  b1062cfa9c67f024:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b15cd7ed916f91ba:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    metadata: {}
    user_parameters: {}
  b1ba0fdd238acc30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b2c0f685bd78596a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b4d533c3bb150ee5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b700c6dfb7a5d511:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  bace0eb85f8b5735:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c0f803c5cb9863da:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    metadata: {}
    user_parameters: {}
  c1cda64678efbf86:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c4eb286ec741be33:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c7c96753def8fd60:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    metadata: {}
    user_parameters: {}
  cf338890f386cf54:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    metadata: {}
    user_parameters: {}
  d7b6169e2e1506bb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    metadata: {}
    user_parameters: {}
  d82a0dbbebda8d17:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  db6e329ab71af6f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  dc386959183e60ee:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    metadata: {}
    user_parameters: {}
  ddb358bc9fc4b0fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  de5c35842929103e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  e0ebcde1693aa070:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e4e0fb2a2b1cfee6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e58a3016ab1e5f6c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    metadata: {}
    user_parameters: {}
  e99b265255b7c297:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  ea686806a919b2e0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  eac720dd0f31c073:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    metadata: {}
    user_parameters: {}
  ecc0945f280b9e3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    metadata: {}
    user_parameters: {}
  ed5badf7ee89cbf7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    metadata: {}
    user_parameters: {}
  ee30325b76a6c545:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    metadata: {}
    user_parameters: {}
  f00abda7b507fe16:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    metadata: {}
    user_parameters: {}
  f2a17809cf7ed3c4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  f7c8edd5a905cf37:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  f8acba4f4c81c729:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  f9b424d0a2842417:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  fa7d9823bf63e3eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    metadata: {}
    user_parameters: {}
  fde257ef6740e93f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    metadata: {}
    user_parameters: {}
  fe423d06d697785b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    metadata: {}
    user_parameters: {}
  fe5347c342f50f53:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  fe900ae87233d68b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    metadata: {}
    user_parameters: {}
entries:
  00079ed2e2f80c93:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(044ef181ea4f4420)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(546c31a8445e0000)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0094a6143f8674b0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2abf24163169d4db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7743d7b04aa5c9a6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00a162bb33ce62d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c3daf774a52f4fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0126eb83a3c5e9ce:
    kwargs:
      data: '{data(de5c35842929103e)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0175f4eb5cfd216b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6b224387f62b73f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01aa4a7cb4b017a0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(753f73baf91bd083)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01b0e027265a194b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05797fb7920662a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(66d0c438d7ff4157)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01e95c3a2bd1bbc2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(442fefc35f9e867b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(21a9be847cffab65)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0350e62db633b4ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f0243004da4e0d69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  044ef181ea4f4420:
    kwargs:
      data: '{data(95572cd2add32005)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  049965ac55c428ee:
    kwargs:
      data: '{data(b08c3f262831b320)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  05797fb7920662a8:
    kwargs:
      data: '{data(c7c96753def8fd60)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  05cda8326ad4fc9b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(485054acef0296ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(27f9bcfec6497ad1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  05f271c83fddb1a0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1c7f757d447d58f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  072d091c737c57d9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(97599d27f25cf8a6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c4f2f91eed5d6db)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0758a6456077a242:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e862ad7130808364)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  07d0ae521c91ca13:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3bcb6db2629d69fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0ace8f3fbf60d741:
    kwargs:
      data: '{data(48165b0ea9a220cc)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0ba2c0da5a7c7116:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dd59d439e849321)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(33465afd48afe99d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0bd12b86b4b00725:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26ecd2b925c0ae21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b4d3f73b9758e7e6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0caab8a2f079787b:
    kwargs:
      data: '{data(8e117a800072c7e8)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0cab52c9bea1b925:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa2a44becfef7de6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4231d657dffa02ac)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0d4bf0cd2e764e48:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cd3ede5e44f3ce4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0dd9bc6bf9a7ac4b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e7d64833f452a81)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0e4ec146ddc95e13:
    kwargs:
      data: '{data(eac720dd0f31c073)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e7d64833f452a81:
    kwargs:
      data: '{data(1ae19950b13f3a59)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e8d3c30da75687d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e862ad7130808364)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0fbbe73d267ab017:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5710c5f5cee3c34c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(425e6241711791e7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  102d7dc667807b4f:
    kwargs:
      data: '{data(6159e2fe0f19bac0)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  104c6a1257e567e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ace8f3fbf60d741)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106696_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36ecaf20ad7d8b21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(279282822bfe9248)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ed0a3c6c37fe6ee)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.091
      maxLongitude: -166.136
      maxTime: '2012-11-17T07:25:00.000000000'
      minLatitude: 66.008
      minLongitude: -174.238
      minTime: '2012-08-17T23:54:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106697_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5331564b4467bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(19e1ab5345bab600)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ffaa86bc729f58e8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.625
      maxLongitude: -138.067
      maxTime: '2013-04-24T06:07:00.000000000'
      minLatitude: 69.511
      minLongitude: -164.205
      minTime: '2012-05-30T23:16:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  10a6fd75b9503deb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8115f1d5f48c70ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  10db0440cc15ab3d:
    kwargs:
      data: '{data(043927c94147d362)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  111968_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(659f2d473ecd54b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1cf31ee75784640f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8e859dbf82eeb458)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.835
      maxLongitude: -168.091
      maxTime: '2013-10-21T06:00:00.000000000'
      minLatitude: 67.903
      minLongitude: -205.212
      minTime: '2012-08-19T02:04:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111969_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ce7ef0b93b7c6a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1d63b3affc739da0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(89ea251beb37645d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.262
      maxLongitude: -134.314
      maxTime: '2013-12-15T13:32:00.000000000'
      minLatitude: 55.959
      minLongitude: -147.558
      minTime: '2013-04-17T22:31:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111970_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98b148b567fb24c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f668082837b6dab0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(44318dbe5a42844c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.019
      maxLongitude: -140.053
      maxTime: '2013-07-23T04:21:00.000000000'
      minLatitude: 58.407
      minLongitude: -151.602
      minTime: '2013-04-20T03:02:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111971_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(93db0a35f4773e05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f8ff39287c042a9f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e17b79c4079f3523)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.969
      maxLongitude: -134.306
      maxTime: '2014-12-19T13:03:00.000000000'
      minLatitude: 52.698
      minLongitude: -179.999
      minTime: '2013-04-17T18:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111973_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(753f73baf91bd083)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(01aa4a7cb4b017a0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(95d0f15d8e8f8fde)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.904
      maxLongitude: -135.793
      maxTime: '2013-10-19T02:14:00.000000000'
      minLatitude: 55.849
      minLongitude: -155.342
      minTime: '2013-04-16T13:45:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111974_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0126eb83a3c5e9ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(172df17db81e2802)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(894bfd2c2857ea4d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.39
      maxLongitude: -136.872
      maxTime: '2013-07-08T02:28:00.000000000'
      minLatitude: 57.515
      minLongitude: -140.537
      minTime: '2013-04-17T17:03:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111976_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bda96656a54b2b9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a25081de1aa2b362)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ebb8f5adc2799847)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.356
      maxLongitude: -135.711
      maxTime: '2013-12-03T16:09:00.000000000'
      minLatitude: 52.728
      minLongitude: -168.459
      minTime: '2013-04-16T07:09:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111f3a20a45ce97e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43d07aa8f3a6af52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(818cfb93eac428a6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  11319ca781369374:
    kwargs:
      data: '{data(2637e77e54e5b6ef)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  113633_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddba3d884d32f408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9a0c24f5d35b8cc9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ecc7c788010d9b11)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.122
      maxLongitude: -161.076
      maxTime: '2012-11-26T00:00:00.000000000'
      minLatitude: 55.594
      minLongitude: -165.003
      minTime: '2012-05-19T14:18:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113634_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(208dac8ee6320a7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2bb390c801cea6db)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(221d6eac1bd29303)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.894
      maxLongitude: -164.762
      maxTime: '2013-04-20T23:42:00.000000000'
      minLatitude: 54.123
      minLongitude: -199.86
      minTime: '2011-06-18T23:53:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113635_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e2eaa8d2dcd818fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6e9fccdfbb704f04)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8e4d50560ad5c606)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.619
      maxLongitude: -162.819
      maxTime: '2013-01-14T05:55:00.000000000'
      minLatitude: 55.25
      minLongitude: -165.42
      minTime: '2012-05-19T12:37:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113636_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f0243004da4e0d69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e66d63e5171146a0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a1df392b47810954)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.676
      maxLongitude: -157.685
      maxTime: '2014-08-29T04:26:00.000000000'
      minLatitude: 55.959
      minLongitude: -170.886
      minTime: '2012-05-19T10:55:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113637_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cb267843160f171)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(749f2dfbef2854f4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(80987bbde8868cf1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.94
      maxLongitude: -159.584
      maxTime: '2013-07-29T23:28:00.000000000'
      minLatitude: 55.921
      minLongitude: -165.337
      minTime: '2012-05-19T10:58:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113638_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41d9156aa701dc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(78ddb90b7699000c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(edfadcc4b92ada89)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.255
      maxLongitude: -164.962
      maxTime: '2014-02-03T05:59:00.000000000'
      minLatitude: 53.111
      minLongitude: -198.802
      minTime: '2012-05-19T12:39:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113639_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ace8f3fbf60d741)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(88b404b032a6a914)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(62720ea9795a2cc9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.069
      maxLongitude: -164.979
      maxTime: '2013-02-17T10:33:00.000000000'
      minLatitude: 53.791
      minLongitude: -178.366
      minTime: '2012-05-19T13:47:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113640_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(293ec2fa20e8d120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6225b7c436dcc55e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(36430a16949354d1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.977
      maxLongitude: -164.141
      maxTime: '2013-06-22T00:29:00.000000000'
      minLatitude: 55.032
      minLongitude: -186.81
      minTime: '2012-05-19T14:19:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113641_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90a83b651dc2d432)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5fdb07a977198f27)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a7d1f8173062bdd0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.358
      maxLongitude: -159.496
      maxTime: '2013-01-10T19:35:00.000000000'
      minLatitude: 55.732
      minLongitude: -165.215
      minTime: '2012-05-19T12:38:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113642_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11319ca781369374)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f386739c9d12217e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c97eeef6562a825e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.709
      maxLongitude: -164.866
      maxTime: '2013-12-18T08:48:00.000000000'
      minLatitude: 48.752
      minLongitude: -200.787
      minTime: '2012-01-30T00:12:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119593_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c2596338ec91bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9eb442e7426db348)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(60e3964ce61d16f9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.682
      maxLongitude: -154.445
      maxTime: '2014-07-17T21:40:00.000000000'
      minLatitude: 71.051
      minLongitude: -196.963
      minTime: '2012-08-24T16:35:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119594_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(544f9690edfa8e90)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d93b266782a36449)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6a9cbae2332a1d67)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.921
      maxLongitude: -154.013
      maxTime: '2013-04-10T18:14:00.000000000'
      minLatitude: 70.731
      minLongitude: -197.649
      minTime: '2012-08-25T11:54:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119595_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62222c624dba187c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(adc1da7062bcff54)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2726cdc91fe4fa22)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.885
      maxLongitude: -167.438
      maxTime: '2013-08-21T23:00:00.000000000'
      minLatitude: 68.671
      minLongitude: -200.183
      minTime: '2012-08-30T21:31:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119596_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e0d956fc24672b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(83fd1faad6880898)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3445b9c859277002)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.08
      maxLongitude: -154.045
      maxTime: '2013-01-14T01:48:00.000000000'
      minLatitude: 70.767
      minLongitude: -172.133
      minTime: '2012-08-13T10:08:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119597_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(485054acef0296ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cbd581309650174c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(05cda8326ad4fc9b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.16
      maxLongitude: -151.76
      maxTime: '2012-11-21T02:16:00.000000000'
      minLatitude: 71.175
      minLongitude: -164.952
      minTime: '2012-08-13T20:14:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119598_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42d0aa2277f27649)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1df2fc2027046a05)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(55225aa7b6ce2812)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.957
      maxLongitude: -164.316
      maxTime: '2012-11-25T10:39:00.000000000'
      minLatitude: 64.071
      minLongitude: -169.562
      minTime: '2012-08-14T09:47:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119599_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ce7378b883acb18)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4e7547fc87c9c8b1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d2e8f41a03a2fd54)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.221
      maxLongitude: -151.248
      maxTime: '2012-11-07T14:05:00.000000000'
      minLatitude: 70.988
      minLongitude: -161.75
      minTime: '2012-08-24T16:04:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119600_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5710c5f5cee3c34c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(64460963c7756235)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0fbbe73d267ab017)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.544
      maxLongitude: -152.259
      maxTime: '2013-03-24T16:46:00.000000000'
      minLatitude: 69.289
      minLongitude: -167.611
      minTime: '2012-08-20T01:48:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12036719ab19d1f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f4f800b039464b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5714a113cc867c0c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122532_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1780adfeb6b9fef0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(87e27791a4be5653)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(659f7c83a9c75775)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.402
      maxLongitude: -134.467
      maxTime: '2014-09-11T19:58:00.000000000'
      minLatitude: 56.102
      minLongitude: -154.089
      minTime: '2013-07-03T11:28:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122533_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f01b916273ac8ae3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b8ee5ef5ec7bb3bc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bf2ddec090642341)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.131
      maxLongitude: -135.205
      maxTime: '2015-03-03T14:57:00.000000000'
      minLatitude: 49.069
      minLongitude: -166.789
      minTime: '2013-07-03T18:35:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122534_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac1c6a062953be06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1fa558bfef2e7e4a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8d2794efcba09c7a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.313
      maxLongitude: -168.026
      maxTime: '2014-12-31T18:49:00.000000000'
      minLatitude: 67.768
      minLongitude: -190.397
      minTime: '2013-08-23T01:58:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122535_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c4844aba7c6d8bf0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(17f5c95deb1f3104)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f5fd0dca00fba29)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.284
      maxLongitude: -153.972
      maxTime: '2013-11-09T04:09:00.000000000'
      minLatitude: 70.882
      minLongitude: -165.629
      minTime: '2013-08-27T04:38:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122536_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aef24bccfb9b6b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4da960fe38abac09)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6b88d51c9fdf8aa7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.844
      maxLongitude: -152.14
      maxTime: '2014-02-18T23:42:00.000000000'
      minLatitude: 71.12
      minLongitude: -179.385
      minTime: '2013-09-03T20:59:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122537_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(638f0051c42e0628)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5f680cebd16b3b84)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(31ecac361314b0bc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.038
      maxLongitude: -160.874
      maxTime: '2015-03-31T23:15:00.000000000'
      minLatitude: 55.819
      minLongitude: -177.156
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122538_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85f09e8f0837853d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ef16a3fb6f3ccca4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1dbeaebb303907e1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.816
      maxLongitude: -155.239
      maxTime: '2013-11-02T15:06:00.000000000'
      minLatitude: 71.045
      minLongitude: -173.801
      minTime: '2013-08-28T07:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122540_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e68eb199e3b3e660)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(db6be3497d291d69)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(23f3fd49b1ff462b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.688
      maxLongitude: -157.741
      maxTime: '2014-09-15T04:51:00.000000000'
      minLatitude: 69.292
      minLongitude: -184.136
      minTime: '2013-08-25T20:19:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122541_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43d07aa8f3a6af52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(31f5f577cedb3a17)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(111f3a20a45ce97e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.842
      maxLongitude: -147.595
      maxTime: '2014-07-31T23:14:00.000000000'
      minLatitude: 70.58
      minLongitude: -162.99
      minTime: '2013-08-27T22:27:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122542_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52bb2a934a81d822)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6eb90985770552a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8ec0273b2afb0f23)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.046
      maxLongitude: -140.632
      maxTime: '2014-01-07T10:03:00.000000000'
      minLatitude: 52.159
      minLongitude: -171.494
      minTime: '2013-04-20T19:33:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122543_y2013:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31695b8ac1b3970d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(38823d79a153ea12)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9e4e8a7321a0f14b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -136.606
      maxTime: '2013-04-07T13:44:00.000000000'
      minLatitude: 58.164
      minLongitude: -136.77
      minTime: '2013-04-07T08:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122843_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3bcb6db2629d69fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5db0812041c17cec)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a0825dd8f2bb24fc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.533
      maxLongitude: -160.253
      maxTime: '2015-05-03T22:39:00.000000000'
      minLatitude: 55.68
      minLongitude: -165.392
      minTime: '2013-05-05T00:57:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122844_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f2a3360758c8812f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(97f88b2fd197871a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(689ac7b35c081470)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.773
      maxLongitude: -158.451
      maxTime: '2014-08-30T07:39:00.000000000'
      minLatitude: 55.375
      minLongitude: -166.074
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122845_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(044ef181ea4f4420)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e1c245ccecc249b3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00079ed2e2f80c93)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.598
      maxLongitude: -164.044
      maxTime: '2015-05-03T21:00:00.000000000'
      minLatitude: 52.264
      minLongitude: -199.207
      minTime: '2013-05-05T01:24:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128951_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa2a44becfef7de6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1e1cf7548ec33c9e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0cab52c9bea1b925)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.86
      maxLongitude: -156.565
      maxTime: '2014-08-15T17:10:00.000000000'
      minLatitude: 70.161
      minLongitude: -169.217
      minTime: '2013-09-04T07:12:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128952_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccf655ca8df08872)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(db12a643442ec8a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a6361c4e5e5a10aa)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.195
      maxLongitude: -165.456
      maxTime: '2013-09-19T01:02:00.000000000'
      minLatitude: 66.572
      minLongitude: -168.487
      minTime: '2013-08-09T19:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128954_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3ea305d638c73e40)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(290050a9be2c7421)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(286615e4b19d64fd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.512
      maxLongitude: -167.605
      maxTime: '2014-01-02T15:47:00.000000000'
      minLatitude: 67.582
      minLongitude: -175.926
      minTime: '2013-08-12T20:14:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128955_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37a0819b25e804ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ee09d59f8b928f32)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c73d55badf5dccdf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.263
      maxLongitude: -150.977
      maxTime: '2014-07-21T06:39:00.000000000'
      minLatitude: 69.817
      minLongitude: -194.731
      minTime: '2013-08-23T00:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13027e7a95181737:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f8a9c09820a9e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  135caa2d4047fca2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(638f0051c42e0628)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136871_y2014_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7727e6f9da01d433)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f1fee0f0eb82fe43)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(262a678f879c1ed2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 63.902
      maxLongitude: -165.142
      maxTime: '2015-07-05T09:40:00.000000000'
      minLatitude: 54.071
      minLongitude: -182.416
      minTime: '2014-05-15T07:23:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136873_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e1c22fcae8704f65)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f173f0994b47d8b0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6da32c7c7ba92768)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.432
      maxLongitude: -168.008
      maxTime: '2016-07-26T20:55:00.000000000'
      minLatitude: 44.112
      minLongitude: -202.389
      minTime: '2014-05-14T21:22:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136874_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e862ad7130808364)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0758a6456077a242)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(989568835cbe72e6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.532
      maxLongitude: -164.688
      maxTime: '2016-01-18T21:24:00.000000000'
      minLatitude: 52.11
      minLongitude: -186.52
      minTime: '2013-10-01T23:30:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  149570f3ee993182:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e68eb199e3b3e660)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16b7170fb743092c:
    kwargs:
      data: '{data(1b5cc335595d323d)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  172df17db81e2802:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0126eb83a3c5e9ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1780adfeb6b9fef0:
    kwargs:
      data: '{data(b700c6dfb7a5d511)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1785e723eae2766a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f01b916273ac8ae3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  17f5c95deb1f3104:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c4844aba7c6d8bf0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1816ef9fccac7ecc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(102d7dc667807b4f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1985b29309ed7ab7:
    kwargs:
      data: '{data(fde257ef6740e93f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  19e1ab5345bab600:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5331564b4467bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1a3aa3a88b3abe69:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ce7378b883acb18)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1aa172bdc03cec78:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(049965ac55c428ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1b364dc0fb7b1157:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85f09e8f0837853d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1cd3ede5e44f3ce4:
    kwargs:
      data: '{data(fa7d9823bf63e3eb)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1cf31ee75784640f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(659f2d473ecd54b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1d63b3affc739da0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ce7ef0b93b7c6a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1db46d19d52e55d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cd3ede5e44f3ce4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a30c239a8df23eb1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1dbeaebb303907e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85f09e8f0837853d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1b364dc0fb7b1157)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1df2fc2027046a05:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42d0aa2277f27649)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1e1cf7548ec33c9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa2a44becfef7de6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1f4f800b039464b4:
    kwargs:
      data: '{data(ae8da310999d4e5c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1fa558bfef2e7e4a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac1c6a062953be06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  200a50ebf42da75e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3ea305d638c73e40)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  208dac8ee6320a7a:
    kwargs:
      data: '{data(f7c8edd5a905cf37)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  21a9be847cffab65:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(442fefc35f9e867b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  221d6eac1bd29303:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(208dac8ee6320a7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(239ac8f0330af2da)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  231c482e8d104209:
    kwargs:
      data: '{data(ee30325b76a6c545)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  232a69fb3c18c782:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a511ac9fe1e9f13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  239ac8f0330af2da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(208dac8ee6320a7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23f3fd49b1ff462b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e68eb199e3b3e660)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(149570f3ee993182)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24b761a9bcfbe892:
    kwargs:
      data: '{data(d7b6169e2e1506bb)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  25837fab2b60fcd9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(231c482e8d104209)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2591711b6a313b89:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1985b29309ed7ab7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  262a678f879c1ed2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7727e6f9da01d433)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e2847b5ced9dc412)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  26ecd2b925c0ae21:
    kwargs:
      data: '{data(abe5c89ce4af7369)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2726cdc91fe4fa22:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62222c624dba187c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c4f5775ecc0caf0c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  279282822bfe9248:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36ecaf20ad7d8b21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  27f9bcfec6497ad1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(485054acef0296ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  281deef756792c73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e2eaa8d2dcd818fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  286615e4b19d64fd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3ea305d638c73e40)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(200a50ebf42da75e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28bc3ad80ed7cc25:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(55fac0fd38f6ef35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  290050a9be2c7421:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3ea305d638c73e40)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  293ec2fa20e8d120:
    kwargs:
      data: '{data(69fe39b0cb8b5151)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  29480dbc38934903:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f8a9c09820a9e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2abf24163169d4db:
    kwargs:
      data: '{data(c0f803c5cb9863da)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2bb390c801cea6db:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(208dac8ee6320a7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e8029ef8802ca26:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(544f9690edfa8e90)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  30c25913067cfd8c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(532f6c6a2e2a3669)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3113733bea65c394:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3df1100a28c6dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31695b8ac1b3970d:
    kwargs:
      data: '{data(6828b0804f38800e)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  31ecac361314b0bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(638f0051c42e0628)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(135caa2d4047fca2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31f5f577cedb3a17:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43d07aa8f3a6af52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  325a9b0daf086587:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(55fac0fd38f6ef35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d819917b5e6f8a1b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  333420fcf4276f63:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ce7ef0b93b7c6a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33465afd48afe99d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dd59d439e849321)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3444a0d5e2e004f5:
    kwargs:
      data: '{data(0af14b2d83b70f15)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3445b9c859277002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e0d956fc24672b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a3532c46e37c2ebe)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36430a16949354d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(293ec2fa20e8d120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(95369c756cd9406f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36ecaf20ad7d8b21:
    kwargs:
      data: '{data(e0ebcde1693aa070)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  37489_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dfc175c098437cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5459de316f47ae10)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6047afece4a54618)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.782
      maxLongitude: -159.125
      maxTime: '2003-07-16T18:42:00.000000000'
      minLatitude: 56.498
      minLongitude: -160.193
      minTime: '2003-05-21T14:07:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37a0819b25e804ad:
    kwargs:
      data: '{data(79aedd5c0757fa85)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  38823d79a153ea12:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31695b8ac1b3970d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3bcb6db2629d69fc:
    kwargs:
      data: '{data(3555846dbbe8f181)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3c21dbd081072118:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccf655ca8df08872)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3dd59d439e849321:
    kwargs:
      data: '{data(00b3fcd6bb9c1bf3)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3e68a452cbed526f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cb267843160f171)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3ea305d638c73e40:
    kwargs:
      data: '{data(e99b265255b7c297)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3f3818256b46a9c2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b761a9bcfbe892)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  41d9156aa701dc7c:
    kwargs:
      data: '{data(e4e0fb2a2b1cfee6)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4231d657dffa02ac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa2a44becfef7de6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  425e6241711791e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5710c5f5cee3c34c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42d0aa2277f27649:
    kwargs:
      data: '{data(b4d533c3bb150ee5)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  43700_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f4f800b039464b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ffaabf181750a006)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(12036719ab19d1f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.468
      maxLongitude: -149.619
      maxTime: '2005-05-08T22:56:00.000000000'
      minLatitude: 53.816
      minLongitude: -174.144
      minTime: '2004-09-15T05:06:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43d07aa8f3a6af52:
    kwargs:
      data: '{data(6bfd3f3df3fcf6fb)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  44244898452074f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96e5cfbdf8ade94f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(af2aa80793fc6a18)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  442fefc35f9e867b:
    kwargs:
      data: '{data(3a82aa5cb245c12e)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  44318dbe5a42844c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98b148b567fb24c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b28a0ba4ddd7424)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4574b0e874f3be9b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4ec146ddc95e13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  466239bf1f9da0b7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5645e5e959c25012)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a2dfd09669b829e8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  47d6767e87fc65ae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(97599d27f25cf8a6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  485054acef0296ed:
    kwargs:
      data: '{data(27202cc06ec90a5a)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a86804ad502bd8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0caab8a2f079787b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(52b4d9d923d57518)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b28a0ba4ddd7424:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98b148b567fb24c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b401118929b7ddb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c3daf774a52f4fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(00a162bb33ce62d7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b59f6d497d87f2a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c177a660171c0a59)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b6ba5501b464595:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3444a0d5e2e004f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4bcc59aed381f4bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(442fefc35f9e867b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c3daf774a52f4fb:
    kwargs:
      data: '{data(1e7ce44b41acb69f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4c4f2f91eed5d6db:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(97599d27f25cf8a6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ce7ef0b93b7c6a8:
    kwargs:
      data: '{data(983fa67f27eb1325)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4da960fe38abac09:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aef24bccfb9b6b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e4c274781d997f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1c7f757d447d58f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e7547fc87c9c8b1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ce7378b883acb18)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4eaee4304b1732e9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05797fb7920662a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ed0a3c6c37fe6ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36ecaf20ad7d8b21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(99b77f3ff67ed640)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4eef2362081d9064:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1985b29309ed7ab7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6c0efa035643530e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f8a9c09820a9e1e:
    kwargs:
      data: '{data(176229a798bf1faa)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4f95893552d10f14:
    kwargs:
      data: '{data(dc386959183e60ee)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  506a55f7b62d142b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c177a660171c0a59)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  51a01f021f03f6d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3df1100a28c6dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(aef44234add7ca88)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  51f66806db04ab39:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1780adfeb6b9fef0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  52b4d9d923d57518:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0caab8a2f079787b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  52bb2a934a81d822:
    kwargs:
      data: '{data(63827a55f353bd93)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  53290_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(049965ac55c428ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1aa172bdc03cec78)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f719ecd44e368aa)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.966
      maxLongitude: -163.929
      maxTime: '2005-08-28T11:48:00.000000000'
      minLatitude: 55.271
      minLongitude: -168.056
      minTime: '2005-05-10T23:10:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53294_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6faff3acf9d36d7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c423d12279262594)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ac83ecf5826f8e67)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.068
      maxLongitude: -151.424
      maxTime: '2005-07-21T03:31:00.000000000'
      minLatitude: 55.017
      minLongitude: -161.523
      minTime: '2005-02-23T10:59:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53295_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(102d7dc667807b4f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8185dfe72877db04)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bb46bf0b805da538)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.579
      maxLongitude: -149.629
      maxTime: '2006-06-27T22:44:00.000000000'
      minLatitude: 52.347
      minLongitude: -178.025
      minTime: '2005-02-24T00:22:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53296_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3df1100a28c6dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3113733bea65c394)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(51a01f021f03f6d0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.575
      maxLongitude: -172.344
      maxTime: '2005-12-23T10:07:00.000000000'
      minLatitude: 59.242
      minLongitude: -178.361
      minTime: '2005-05-04T04:18:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53298_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c502122b4a07e314)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f98423359c252073)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6167bfdf71da2b4b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.148
      maxLongitude: -151.003
      maxTime: '2005-03-08T07:20:00.000000000'
      minLatitude: 57.938
      minLongitude: -154.761
      minTime: '2005-02-23T12:42:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53299_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73d2682f6c88b6e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d0778b2c3780bc13)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b24cd46a64f295da)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.753
      maxLongitude: -134.771
      maxTime: '2005-10-02T17:08:00.000000000'
      minLatitude: 55.014
      minLongitude: -152.696
      minTime: '2005-02-07T14:03:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  532f6c6a2e2a3669:
    kwargs:
      data: '{data(59a9be915087d77f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  53300_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8aa89db05fea2e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(70683e7d9f3fed79)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9c94c16250dfa65b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.223
      maxLongitude: -159.539
      maxTime: '2006-08-13T16:27:00.000000000'
      minLatitude: 55.192
      minLongitude: -164.449
      minTime: '2005-05-10T23:47:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53302_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(442fefc35f9e867b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4bcc59aed381f4bc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01e95c3a2bd1bbc2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.464
      maxLongitude: -163.974
      maxTime: '2005-06-17T22:44:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.158
      minTime: '2005-05-10T18:54:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53303_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccc1cc52d0987158)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c9f3e584e04df884)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9efe4c8e9277db36)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.957
      maxLongitude: -164.346
      maxTime: '2005-06-30T23:20:00.000000000'
      minLatitude: 54.862
      minLongitude: -164.623
      minTime: '2005-05-10T15:37:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53304_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f95893552d10f14)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(579c62a235e7bee7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(921b5b8d76df07ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.225
      maxLongitude: -136.141
      maxTime: '2005-09-22T03:36:00.000000000'
      minLatitude: 56.052
      minLongitude: -140.38
      minTime: '2005-05-06T10:36:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53306_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0caab8a2f079787b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f3111edc3277a394)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4a86804ad502bd8d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.974
      maxLongitude: -136.98
      maxTime: '2006-02-10T23:48:00.000000000'
      minLatitude: 56.36
      minLongitude: -156.327
      minTime: '2005-05-06T17:16:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53308_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26ecd2b925c0ae21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f77b47f319ecf746)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0bd12b86b4b00725)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.762
      maxLongitude: -137.808
      maxTime: '2006-06-24T22:15:00.000000000'
      minLatitude: 50.468
      minLongitude: -174.065
      minTime: '2005-05-03T07:40:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53309_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2abf24163169d4db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7e0be3a41e1aba54)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0094a6143f8674b0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.526
      maxLongitude: -130.247
      maxTime: '2006-05-25T23:37:00.000000000'
      minLatitude: 49.102
      minLongitude: -147.677
      minTime: '2005-04-23T21:20:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53310_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(231c482e8d104209)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(25837fab2b60fcd9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7bc086ad016c25f6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.005
      maxLongitude: -132.735
      maxTime: '2005-11-17T07:07:00.000000000'
      minLatitude: 52.074
      minLongitude: -136.372
      minTime: '2005-04-30T14:39:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53311_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e7d64833f452a81)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0dd9bc6bf9a7ac4b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bf7a11f600f87f8c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.026
      maxLongitude: -134.84
      maxTime: '2005-05-15T18:02:00.000000000'
      minLatitude: 55.063
      minLongitude: -138.304
      minTime: '2005-02-07T15:01:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53312_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96e5cfbdf8ade94f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c2a38b69e73a7144)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(44244898452074f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.07
      maxLongitude: -132.786
      maxTime: '2006-08-11T15:20:00.000000000'
      minLatitude: 52.046
      minLongitude: -160.842
      minTime: '2005-04-23T21:05:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53313_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3444a0d5e2e004f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6a965bfa18a5db8f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5b623e650c857d9b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.648
      maxLongitude: -164.834
      maxTime: '2007-03-10T19:08:00.000000000'
      minLatitude: 54.638
      minLongitude: -168.201
      minTime: '2006-05-14T12:27:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53314_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a511ac9fe1e9f13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(90026446437844cf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8e69cd633d0fe4af)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.212
      maxLongitude: -164.599
      maxTime: '2007-03-09T11:09:00.000000000'
      minLatitude: 55.144
      minLongitude: -178.303
      minTime: '2006-05-15T00:47:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53315_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(55fac0fd38f6ef35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(28bc3ad80ed7cc25)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(325a9b0daf086587)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.194
      maxLongitude: -132.928
      maxTime: '2006-05-23T19:31:00.000000000'
      minLatitude: 51.315
      minLongitude: -160.219
      minTime: '2005-03-13T10:56:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53316_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1c7f757d447d58f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(05f271c83fddb1a0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(db940a694d797ec8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.521
      maxLongitude: -160.289
      maxTime: '2005-08-30T22:47:00.000000000'
      minLatitude: 54.846
      minLongitude: -164.709
      minTime: '2005-05-10T15:34:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53317_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0d61638cd086b8e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8c7426caea49ac63)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(544d151bad9209eb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.952
      maxLongitude: -150.249
      maxTime: '2005-05-20T18:30:00.000000000'
      minLatitude: 55.139
      minLongitude: -160.172
      minTime: '2005-02-23T18:27:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53318_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dd59d439e849321)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9573d67945701b15)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0ba2c0da5a7c7116)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.735
      maxLongitude: -163.713
      maxTime: '2006-04-11T22:02:00.000000000'
      minLatitude: 54.446
      minLongitude: -194.148
      minTime: '2005-05-10T23:50:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53319_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05797fb7920662a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4eaee4304b1732e9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01b0e027265a194b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.217
      maxLongitude: -132.01
      maxTime: '2005-06-11T00:58:00.000000000'
      minLatitude: 51.818
      minLongitude: -134.528
      minTime: '2005-03-13T07:04:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53320_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(97599d27f25cf8a6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(47d6767e87fc65ae)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(072d091c737c57d9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.15
      maxLongitude: -158.669
      maxTime: '2005-10-01T15:42:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.88
      minTime: '2005-05-10T18:55:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53321_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10db0440cc15ab3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(979210e769e59ab2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5cf657a9f91ef2dd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.094
      maxLongitude: -137.862
      maxTime: '2006-02-22T16:22:00.000000000'
      minLatitude: 54.961
      minLongitude: -143.738
      minTime: '2005-05-03T11:11:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53a635a5a9cd2680:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0d61638cd086b8e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53bf04e5d6ae8ef4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccc1cc52d0987158)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53d7a8915971957c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b7170fb743092c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53fda7f50e03dc71:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bda96656a54b2b9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  544d151bad9209eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0d61638cd086b8e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(53a635a5a9cd2680)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  544f9690edfa8e90:
    kwargs:
      data: '{data(46b92d2ac7c70e2b)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5459de316f47ae10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dfc175c098437cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  546c31a8445e0000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(044ef181ea4f4420)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  55225aa7b6ce2812:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42d0aa2277f27649)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ccd9e9ae0590585d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  55fac0fd38f6ef35:
    kwargs:
      data: '{data(16057e930dced4a9)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5645e5e959c25012:
    kwargs:
      data: '{data(50d424c83354e4d9)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5710c5f5cee3c34c:
    kwargs:
      data: '{data(fe5347c342f50f53)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5714a113cc867c0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f4f800b039464b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57863_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ab86f8fc8b818bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b8f6e11f804665c6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f2d1be10ee99c7c2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.135
      maxLongitude: -163.787
      maxTime: '2006-05-27T16:39:00.000000000'
      minLatitude: 55.009
      minLongitude: -164.241
      minTime: '2006-05-15T04:42:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57866_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b761a9bcfbe892)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3f3818256b46a9c2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f928a65947929566)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.922
      maxLongitude: -159.095
      maxTime: '2007-03-26T08:32:00.000000000'
      minLatitude: 55.14
      minLongitude: -164.73
      minTime: '2006-05-15T01:25:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57867_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b7170fb743092c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bec7cc4a1af95d47)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b43f0f92b2f190fc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.15
      maxLongitude: -163.749
      maxTime: '2006-06-13T14:44:00.000000000'
      minLatitude: 54.731
      minLongitude: -165.05
      minTime: '2006-05-14T13:09:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57868_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1985b29309ed7ab7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2591711b6a313b89)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4eef2362081d9064)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.57
      maxLongitude: -167.435
      maxTime: '2007-03-25T04:26:00.000000000'
      minLatitude: 57.037
      minLongitude: -170.442
      minTime: '2006-05-08T20:47:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57869_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5645e5e959c25012)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a64da98984b07499)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(466239bf1f9da0b7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.843
      maxLongitude: -171.648
      maxTime: '2007-01-31T05:29:00.000000000'
      minLatitude: 57.768
      minLongitude: -180.457
      minTime: '2006-04-27T10:58:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57870_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cd3ede5e44f3ce4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0d4bf0cd2e764e48)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1db46d19d52e55d4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.327
      maxLongitude: -151.187
      maxTime: '2006-11-21T23:07:00.000000000'
      minLatitude: 45.139
      minLongitude: -196.676
      minTime: '2005-07-23T18:11:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57872_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c52f8b0037349fa0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a9a265a0a1103758)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b4936cbadae60be8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.935
      maxLongitude: -150.796
      maxTime: '2005-10-22T10:56:00.000000000'
      minLatitude: 54.695
      minLongitude: -158.341
      minTime: '2005-07-23T06:13:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57873_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(532f6c6a2e2a3669)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b90b896d2d31efbd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(975374bf8238e6e4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.689
      maxLongitude: -171.456
      maxTime: '2007-01-29T13:53:00.000000000'
      minLatitude: 57.759
      minLongitude: -180.384
      minTime: '2006-04-27T05:29:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57874_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8115f1d5f48c70ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(10a6fd75b9503deb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(766238eadc40fa89)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.2
      maxLongitude: -151.26
      maxTime: '2005-09-27T20:57:00.000000000'
      minLatitude: 57.23
      minLongitude: -156.299
      minTime: '2005-07-22T06:23:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57875_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f8a9c09820a9e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(29480dbc38934903)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e4b86ed67bcd493e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.075
      maxLongitude: -168.747
      maxTime: '2007-10-29T23:42:00.000000000'
      minLatitude: 56.37
      minLongitude: -184.094
      minTime: '2006-04-22T07:32:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57876_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6b224387f62b73f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8a38b8b8187a5381)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ca99111ed8292649)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.111
      maxLongitude: -152.118
      maxTime: '2006-02-27T20:19:00.000000000'
      minLatitude: 54.972
      minLongitude: -162.159
      minTime: '2005-09-10T16:21:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57878_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fbd3126a2f8800b7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b68efd5957b8dd49)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8d93b89510db7104)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.2
      maxLongitude: -151.899
      maxTime: '2007-05-17T23:21:00.000000000'
      minLatitude: 48.316
      minLongitude: -177.111
      minTime: '2005-09-09T23:13:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57879_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c3daf774a52f4fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(843e0ea4df10a56c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4b401118929b7ddb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.13
      maxLongitude: -150.578
      maxTime: '2005-11-22T00:10:00.000000000'
      minLatitude: 56.65
      minLongitude: -154.035
      minTime: '2005-07-22T16:55:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57880_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4ec146ddc95e13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e776537f786358a7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ceb2b60dfcd7a586)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.311
      maxLongitude: -152.354
      maxTime: '2005-09-11T22:45:00.000000000'
      minLatitude: 57.22
      minLongitude: -152.82
      minTime: '2005-09-10T02:24:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57881_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c177a660171c0a59)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(506a55f7b62d142b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8d27c783b85d48c6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.249
      maxLongitude: -152.432
      maxTime: '2005-09-21T02:07:00.000000000'
      minLatitude: 56.896
      minLongitude: -153.486
      minTime: '2005-09-11T21:06:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57885_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(820875f2aef9d666)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(690869c32598c17b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5fb459ab5c4176e8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.05
      maxLongitude: -144.77
      maxTime: '2005-10-22T01:47:00.000000000'
      minLatitude: 58.858
      minLongitude: -152.073
      minTime: '2005-08-10T00:42:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57887_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b910165954b42203)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bbe17062da772eaa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(75847bb4e56d46e1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.711
      maxLongitude: -149.547
      maxTime: '2006-03-02T18:43:00.000000000'
      minLatitude: 55.069
      minLongitude: -160.128
      minTime: '2005-07-21T06:38:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57889_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6b9eb97ecb9ec91)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ec94ec981ac254a2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d0f047842f10c8ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -150.495
      maxTime: '2005-11-22T05:08:00.000000000'
      minLatitude: 52.59
      minLongitude: -169.453
      minTime: '2005-07-21T16:34:00.000000000'
      plots:
        data:
          c: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - depth_m
          - latitude_N
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: null
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  579c62a235e7bee7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f95893552d10f14)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b623e650c857d9b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3444a0d5e2e004f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b6ba5501b464595)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5cf657a9f91ef2dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10db0440cc15ab3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8b1a789b81e08a7e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5db0812041c17cec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3bcb6db2629d69fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f680cebd16b3b84:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(638f0051c42e0628)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5fb459ab5c4176e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(820875f2aef9d666)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d804b37500b295f9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5fdb07a977198f27:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90a83b651dc2d432)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6047afece4a54618:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dfc175c098437cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f1b8b5ef1d430e41)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  60e3964ce61d16f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c2596338ec91bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e6b16fba9c527a9f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6167bfdf71da2b4b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c502122b4a07e314)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ed711eaa42245515)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62222c624dba187c:
    kwargs:
      data: '{data(7570137f1de8ae34)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6225b7c436dcc55e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(293ec2fa20e8d120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62720ea9795a2cc9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ace8f3fbf60d741)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(104c6a1257e567e7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62cf57306f3e7e28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f2a3360758c8812f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  638f0051c42e0628:
    kwargs:
      data: '{data(3d94b27c58ec9d77)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  64460963c7756235:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5710c5f5cee3c34c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  659f2d473ecd54b6:
    kwargs:
      data: '{data(872c4d76e891a8fe)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  659f7c83a9c75775:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1780adfeb6b9fef0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(51f66806db04ab39)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66d0c438d7ff4157:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05797fb7920662a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  689ac7b35c081470:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f2a3360758c8812f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(62cf57306f3e7e28)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  690869c32598c17b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(820875f2aef9d666)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a965bfa18a5db8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3444a0d5e2e004f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a9cbae2332a1d67:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(544f9690edfa8e90)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e8029ef8802ca26)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6b224387f62b73f5:
    kwargs:
      data: '{data(a2e69af5c8aa83c1)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6b88d51c9fdf8aa7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aef24bccfb9b6b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e55d6763a00148b6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6c0efa035643530e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1985b29309ed7ab7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6c2af6b908bb807f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c52f8b0037349fa0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6da32c7c7ba92768:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e1c22fcae8704f65)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ec37d6b689e57392)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6e0d956fc24672b3:
    kwargs:
      data: '{data(98b94fcf8454becb)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6e9fccdfbb704f04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e2eaa8d2dcd818fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6eb90985770552a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52bb2a934a81d822)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6faff3acf9d36d7d:
    kwargs:
      data: '{data(ed5badf7ee89cbf7)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7001d14d3cac3c1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41d9156aa701dc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  70683e7d9f3fed79:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8aa89db05fea2e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73d2682f6c88b6e6:
    kwargs:
      data: '{data(cf338890f386cf54)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  749f2dfbef2854f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cb267843160f171)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  753f73baf91bd083:
    kwargs:
      data: '{data(f8acba4f4c81c729)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  75847bb4e56d46e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b910165954b42203)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6e1121f3fc69485)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  766238eadc40fa89:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8115f1d5f48c70ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(baa3f1e6e50746cb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7727e6f9da01d433:
    kwargs:
      data: '{data(b1062cfa9c67f024)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7743d7b04aa5c9a6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2abf24163169d4db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  78ddb90b7699000c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41d9156aa701dc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ab520e0c01f55d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c4844aba7c6d8bf0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7bc086ad016c25f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(231c482e8d104209)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f5b189a7cfd49d9a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7e0be3a41e1aba54:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2abf24163169d4db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80987bbde8868cf1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cb267843160f171)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3e68a452cbed526f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8115f1d5f48c70ad:
    kwargs:
      data: '{data(ecc0945f280b9e3c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8185dfe72877db04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(102d7dc667807b4f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  818cfb93eac428a6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43d07aa8f3a6af52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  820875f2aef9d666:
    kwargs:
      data: '{data(9577c74ca3bba84c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  83239e9ad799ca9f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e7d64833f452a81)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  83fd1faad6880898:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e0d956fc24672b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  843e0ea4df10a56c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c3daf774a52f4fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  85f09e8f0837853d:
    kwargs:
      data: '{data(af51edc0a933dbcc)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  87b33c9c09df00f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11319ca781369374)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  87e27791a4be5653:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1780adfeb6b9fef0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  88b404b032a6a914:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ace8f3fbf60d741)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89087f3d85056900:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73d2682f6c88b6e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  894bfd2c2857ea4d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0126eb83a3c5e9ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a74eb30b38859968)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89a2a68abbba52c4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(659f2d473ecd54b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89ea251beb37645d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ce7ef0b93b7c6a8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(333420fcf4276f63)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8a38b8b8187a5381:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6b224387f62b73f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8a511ac9fe1e9f13:
    kwargs:
      data: '{data(0298ebbd319be488)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8aa89db05fea2e6d:
    kwargs:
      data: '{data(603576f54b88b55b)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8ab86f8fc8b818bb:
    kwargs:
      data: '{data(9beb604bf73b7677)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8b1a789b81e08a7e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10db0440cc15ab3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8b88bc7a801d6d6b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(049965ac55c428ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8c7426caea49ac63:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0d61638cd086b8e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8cb267843160f171:
    kwargs:
      data: '{data(bace0eb85f8b5735)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8ce7378b883acb18:
    kwargs:
      data: '{data(ddb358bc9fc4b0fb)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8d2794efcba09c7a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac1c6a062953be06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b2ae66620371dd04)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d27c783b85d48c6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c177a660171c0a59)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b59f6d497d87f2a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d93b89510db7104:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fbd3126a2f8800b7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ba46eea79a82d063)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8dfc175c098437cd:
    kwargs:
      data: '{data(fe900ae87233d68b)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8e4d50560ad5c606:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e2eaa8d2dcd818fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(281deef756792c73)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8e69cd633d0fe4af:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a511ac9fe1e9f13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(232a69fb3c18c782)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8e859dbf82eeb458:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(659f2d473ecd54b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(89a2a68abbba52c4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8ec0273b2afb0f23:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52bb2a934a81d822)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d983c0ff379f97b3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  90026446437844cf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a511ac9fe1e9f13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  90a83b651dc2d432:
    kwargs:
      data: '{data(25b260deecb88c2f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  90ac987d564b696c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90a83b651dc2d432)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91c58e6f965bf390:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f95893552d10f14)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  921b5b8d76df07ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f95893552d10f14)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(91c58e6f965bf390)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  93db0a35f4773e05:
    kwargs:
      data: '{data(4c0f534afb636ca2)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  95369c756cd9406f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(293ec2fa20e8d120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9573d67945701b15:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dd59d439e849321)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  95d0f15d8e8f8fde:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(753f73baf91bd083)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9f3e4e393f87a0fd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  96e5cfbdf8ade94f:
    kwargs:
      data: '{data(94a7d2971ad21b5f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  975374bf8238e6e4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(532f6c6a2e2a3669)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(30c25913067cfd8c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97599d27f25cf8a6:
    kwargs:
      data: '{data(fe423d06d697785b)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  979210e769e59ab2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10db0440cc15ab3d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97f88b2fd197871a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f2a3360758c8812f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  989568835cbe72e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e862ad7130808364)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0e8d3c30da75687d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  98b148b567fb24c4:
    kwargs:
      data: '{data(d82a0dbbebda8d17)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  99b77f3ff67ed640:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36ecaf20ad7d8b21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  99f1db654a32ebea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5331564b4467bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a0c24f5d35b8cc9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddba3d884d32f408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a1299842a05af9b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8aa89db05fea2e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9c2596338ec91bf5:
    kwargs:
      data: '{data(6d87c4883decc1dd)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9c94c16250dfa65b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8aa89db05fea2e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9a1299842a05af9b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e4e8a7321a0f14b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31695b8ac1b3970d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(da972b687f0d49d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9eb442e7426db348:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c2596338ec91bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9efe4c8e9277db36:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccc1cc52d0987158)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(53bf04e5d6ae8ef4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f3e4e393f87a0fd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(753f73baf91bd083)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f5fd0dca00fba29:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c4844aba7c6d8bf0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7ab520e0c01f55d7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f719ecd44e368aa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(049965ac55c428ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8b88bc7a801d6d6b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a0825dd8f2bb24fc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3bcb6db2629d69fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(07d0ae521c91ca13)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a0d61638cd086b8e:
    kwargs:
      data: '{data(8250c777a5fbaf8c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a1df392b47810954:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f0243004da4e0d69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0350e62db633b4ee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a25081de1aa2b362:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bda96656a54b2b9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a2dfd09669b829e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5645e5e959c25012)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a30c239a8df23eb1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cd3ede5e44f3ce4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3532c46e37c2ebe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6e0d956fc24672b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3a703cb9ff25ee9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6b9eb97ecb9ec91)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a6361c4e5e5a10aa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccf655ca8df08872)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3c21dbd081072118)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a64da98984b07499:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5645e5e959c25012)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a74eb30b38859968:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0126eb83a3c5e9ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a7d1f8173062bdd0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90a83b651dc2d432)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(90ac987d564b696c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9a265a0a1103758:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c52f8b0037349fa0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aa2a44becfef7de6:
    kwargs:
      data: '{data(c4eb286ec741be33)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ac1c6a062953be06:
    kwargs:
      data: '{data(b2c0f685bd78596a)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ac83ecf5826f8e67:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6faff3acf9d36d7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ad2c325aed98e610)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ad2c325aed98e610:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6faff3acf9d36d7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  adc1da7062bcff54:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62222c624dba187c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aef24bccfb9b6b76:
    kwargs:
      data: '{data(ea686806a919b2e0)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aef44234add7ca88:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc3df1100a28c6dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  af2aa80793fc6a18:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96e5cfbdf8ade94f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b24cd46a64f295da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73d2682f6c88b6e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(89087f3d85056900)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b2ae66620371dd04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac1c6a062953be06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b43f0f92b2f190fc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b7170fb743092c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(53d7a8915971957c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4936cbadae60be8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c52f8b0037349fa0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6c2af6b908bb807f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4d3f73b9758e7e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26ecd2b925c0ae21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b68efd5957b8dd49:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fbd3126a2f8800b7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b8ee5ef5ec7bb3bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f01b916273ac8ae3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b8f6e11f804665c6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ab86f8fc8b818bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b90b896d2d31efbd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(532f6c6a2e2a3669)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b910165954b42203:
    kwargs:
      data: '{data(250d6db3426eb40a)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ba46eea79a82d063:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fbd3126a2f8800b7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  baa3f1e6e50746cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8115f1d5f48c70ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bb46bf0b805da538:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(102d7dc667807b4f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1816ef9fccac7ecc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbe17062da772eaa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b910165954b42203)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc3df1100a28c6dd:
    kwargs:
      data: '{data(2166f39b284b0817)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bda96656a54b2b9e:
    kwargs:
      data: '{data(f9b424d0a2842417)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bec7cc4a1af95d47:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b7170fb743092c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf2ddec090642341:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f01b916273ac8ae3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1785e723eae2766a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf7a11f600f87f8c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e7d64833f452a81)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(83239e9ad799ca9f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c177a660171c0a59:
    kwargs:
      data: '{data(92717cbbb53efb41)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c297881c5b392acd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b761a9bcfbe892)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2a38b69e73a7144:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96e5cfbdf8ade94f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c423d12279262594:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6faff3acf9d36d7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c4844aba7c6d8bf0:
    kwargs:
      data: '{data(35869eb68296394b)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c4f5775ecc0caf0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62222c624dba187c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c502122b4a07e314:
    kwargs:
      data: '{data(b15cd7ed916f91ba)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c52f8b0037349fa0:
    kwargs:
      data: '{data(17781d838312df36)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c68f2939132b1000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37a0819b25e804ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c73d55badf5dccdf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37a0819b25e804ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c68f2939132b1000)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c97eeef6562a825e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11319ca781369374)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(87b33c9c09df00f6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c9f3e584e04df884:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccc1cc52d0987158)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca99111ed8292649:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6b224387f62b73f5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0175f4eb5cfd216b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cbd581309650174c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(485054acef0296ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ccc1cc52d0987158:
    kwargs:
      data: '{data(8e97bd7a68474b1c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ccd9e9ae0590585d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42d0aa2277f27649)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ccf655ca8df08872:
    kwargs:
      data: '{data(73e64c4b883a6ffa)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ceb2b60dfcd7a586:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4ec146ddc95e13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4574b0e874f3be9b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d05cea573584a415:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(93db0a35f4773e05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d0778b2c3780bc13:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73d2682f6c88b6e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d0f047842f10c8ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6b9eb97ecb9ec91)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a3a703cb9ff25ee9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d1c7f757d447d58f:
    kwargs:
      data: '{data(e58a3016ab1e5f6c)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d2e8f41a03a2fd54:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ce7378b883acb18)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1a3aa3a88b3abe69)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d804b37500b295f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(820875f2aef9d666)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d819917b5e6f8a1b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(55fac0fd38f6ef35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d93b266782a36449:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(544f9690edfa8e90)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d983c0ff379f97b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52bb2a934a81d822)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  da972b687f0d49d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31695b8ac1b3970d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db12a643442ec8a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ccf655ca8df08872)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db6be3497d291d69:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e68eb199e3b3e660)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db940a694d797ec8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1c7f757d447d58f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4e4c274781d997f9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ddba3d884d32f408:
    kwargs:
      data: '{data(878e492709c70f0f)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  de20d99a7643698f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddba3d884d32f408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e17b79c4079f3523:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(93db0a35f4773e05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d05cea573584a415)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e1c22fcae8704f65:
    kwargs:
      data: '{data(db6e329ab71af6f1)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e1c245ccecc249b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(044ef181ea4f4420)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2847b5ced9dc412:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7727e6f9da01d433)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2eaa8d2dcd818fb:
    kwargs:
      data: '{data(f2a17809cf7ed3c4)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e4b86ed67bcd493e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4f8a9c09820a9e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(13027e7a95181737)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e55d6763a00148b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aef24bccfb9b6b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e66d63e5171146a0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f0243004da4e0d69)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e68eb199e3b3e660:
    kwargs:
      data: '{data(56c2efba4072026a)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e6b16fba9c527a9f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c2596338ec91bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6b9eb97ecb9ec91:
    kwargs:
      data: '{data(69398aa2624b3c03)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e776537f786358a7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4ec146ddc95e13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e839e440051bcb3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ab86f8fc8b818bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e862ad7130808364:
    kwargs:
      data: '{data(57a3bec617c5d194)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ebb8f5adc2799847:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bda96656a54b2b9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(53fda7f50e03dc71)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec37d6b689e57392:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e1c22fcae8704f65)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec94ec981ac254a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6b9eb97ecb9ec91)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecc7c788010d9b11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ddba3d884d32f408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(de20d99a7643698f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed711eaa42245515:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c502122b4a07e314)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  edfadcc4b92ada89:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41d9156aa701dc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7001d14d3cac3c1a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ee09d59f8b928f32:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(37a0819b25e804ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ef16a3fb6f3ccca4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85f09e8f0837853d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f01b916273ac8ae3:
    kwargs:
      data: '{data(3039b8409f989a30)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f0243004da4e0d69:
    kwargs:
      data: '{data(79912cbdda2e4df4)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f173f0994b47d8b0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e1c22fcae8704f65)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1b8b5ef1d430e41:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dfc175c098437cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1fee0f0eb82fe43:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7727e6f9da01d433)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f2a3360758c8812f:
    kwargs:
      data: '{data(b1ba0fdd238acc30)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f2d1be10ee99c7c2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ab86f8fc8b818bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e839e440051bcb3f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3111edc3277a394:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0caab8a2f079787b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f386739c9d12217e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(11319ca781369374)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f5331564b4467bf5:
    kwargs:
      data: '{data(c1cda64678efbf86)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f5b189a7cfd49d9a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(231c482e8d104209)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f668082837b6dab0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98b148b567fb24c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6e1121f3fc69485:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b910165954b42203)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f77b47f319ecf746:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26ecd2b925c0ae21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f8ff39287c042a9f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(93db0a35f4773e05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f928a65947929566:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b761a9bcfbe892)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c297881c5b392acd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f98423359c252073:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c502122b4a07e314)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fbd3126a2f8800b7:
    kwargs:
      data: '{data(f00abda7b507fe16)}'
      delim_whitespace: true
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ffaa86bc729f58e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f5331564b4467bf5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(99f1db654a32ebea)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ffaabf181750a006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f4f800b039464b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
metadata:
  featuretype: trajectory
  header_names: null
  included: true
  key_variables: []
  map:
    coastline: false
    geo: true
    height: 700
    kind: paths
    legend: false
    line_width: 5
    tiles: true
    title: drifters_ecofoci
    width: 600
    x: longitude
    xlabel: Longitude [W]
    y: latitude
    ylabel: Latitude [N]
  map_description: Drifters
  maplabels:
    fontscale: 1.5
    geo: true
    hover: false
    kind: labels
    text: station
    text_alpha: 0.5
    text_baseline: bottom
    text_color: black
    text_font_size: 10pt
    x: longitude
    y: latitude
  maptype: box
  maxLatitude: 75.921
  maxLongitude: -130.247
  maxTime: '2016-07-26T20:55:00.000000000'
  minLatitude: 44.112
  minLongitude: -205.212
  minTime: '2003-05-21T14:07:00.000000000'
  notes: ''
  overall_desc: Drifters (EcoFOCI)
  project_name: 'Drifters: Ecosystems & Fisheries-Oceanography Coordinated Investigations
    (EcoFOCI)'
  summary: "EcoFOCI Project.\n        \nAs described on the [main project website\
    \ for EcoFOCI](https://www.ecofoci.noaa.gov/):\n\n> We study the ecosystems of\
    \ the North Pacific Ocean, Bering Sea and U.S. Arctic to improve understanding\
    \ of ecosystem dynamics and we apply that understanding to the management of living\
    \ marine resources. EcoFOCI scientists integrate field, laboratory and modeling\
    \ studies to determine how varying biological and physical factors influence large\
    \ marine ecosystems within Alaskan waters.\n\n> EcoFOCI is a joint research program\
    \ between the Alaska Fisheries Science Center (NOAA/ NMFS/ AFSC) and the Pacific\
    \ Marine Environmental Laboratory (NOAA/ OAR/ PMEL).\n\nDrifter data are being\
    \ pulled from this webpage: https://www.ecofoci.noaa.gov/drifters/efoci_drifterData.shtml\
    \ which also has a plot available for each drifter dataset.\n\nSeveral years of\
    \ EcoFOCI drifter data are also available in a private Research Workspace project:\
    \ https://researchworkspace.com/project/41531085/files.\n"
  time: From 1986 to 2017 total but 2003-2006, 2012-2014 here
user_parameters: {}
version: 2

aliases:
  050795_y2011_withT: 050795_y2011_withT
  050796_y2010_withTandIce: 050796_y2010_withTandIce
  050797_y2010_withTandIce: 050797_y2010_withTandIce
  050798_y2011_withT: 050798_y2011_withT
  050799_y2011_withT: 050799_y2011_withT
  051972_y2011_withT: 051972_y2011_withT
  051973_y2010_withTandIce: 051973_y2010_withTandIce
  051974_y2011_withT: 051974_y2011_withT
  051975_y2010_withTandIce: 051975_y2010_withTandIce
  051976_y2010_withTandIce: 051976_y2010_withTandIce
  098684_y2010_withTandIce: 098684_y2010_withTandIce
  098685_y2010_withTandIce: 098685_y2010_withTandIce
  098686_y2010_withTandIce: 098686_y2010_withTandIce
  098687_y2010_withTandIce: 098687_y2010_withTandIce
  098688_y2010_withTandIce: 098688_y2010_withTandIce
  098689_y2010_withTandIce: 098689_y2010_withTandIce
  098690_y2010_withTandIce: 098690_y2010_withTandIce
  098691_y2010_withTandIce: 098691_y2010_withTandIce
  098692_y2010_withTandIce: 098692_y2010_withTandIce
  098693_y2010_withTandIce: 098693_y2010_withTandIce
  106694_y2011_withTandIce: 106694_y2011_withTandIce
  106695_y2011_withT: 106695_y2011_withT
  106696_y2012_withTandIce: 106696_y2012_withTandIce
  106697_y2012_withTandIce: 106697_y2012_withTandIce
  106698_y2011_withTandIce: 106698_y2011_withTandIce
  106699_y2011_withTandIce: 106699_y2011_withTandIce
  111968_y2012_withTandIce: 111968_y2012_withTandIce
  111969_y2013_withT: 111969_y2013_withT
  111970_y2013_withT: 111970_y2013_withT
  111971_y2013_withT: 111971_y2013_withT
  111973_y2013_withT: 111973_y2013_withT
  111974_y2013_withT: 111974_y2013_withT
  111976_y2013_withT: 111976_y2013_withT
  113633_y2012_withT: 113633_y2012_withT
  113634_y2012_withT: 113634_y2012_withT
  113635_y2012_withTandIce: 113635_y2012_withTandIce
  113636_y2012_withTandIce: 113636_y2012_withTandIce
  113637_y2012_withTandIce: 113637_y2012_withTandIce
  113638_y2012_withTandIce: 113638_y2012_withTandIce
  113639_y2012_withTandIce: 113639_y2012_withTandIce
  113640_y2012_withTandIce: 113640_y2012_withTandIce
  113641_y2012_withTandIce: 113641_y2012_withTandIce
  113642_y2012_withTandIce: 113642_y2012_withTandIce
  119593_y2012_withTandIce: 119593_y2012_withTandIce
  119594_y2012_withTandIce: 119594_y2012_withTandIce
  119595_y2012_withTandIce: 119595_y2012_withTandIce
  119596_y2012_withTandIce: 119596_y2012_withTandIce
  119597_y2012_withTandIce: 119597_y2012_withTandIce
  119598_y2012_withTandIce: 119598_y2012_withTandIce
  119599_y2012_withTandIce: 119599_y2012_withTandIce
  119600_y2012_withTandIce: 119600_y2012_withTandIce
  122532_y2013_withT: 122532_y2013_withT
  122533_y2013_withT: 122533_y2013_withT
  122534_y2013_withTandIce: 122534_y2013_withTandIce
  122535_y2013_withTandIce: 122535_y2013_withTandIce
  122536_y2013_withTandIce: 122536_y2013_withTandIce
  122537_y2013_withTandIce: 122537_y2013_withTandIce
  122538_y2013_withTandIce: 122538_y2013_withTandIce
  122539_y2013_withTandIce: 122539_y2013_withTandIce
  122540_y2013_withTandIce: 122540_y2013_withTandIce
  122541_y2013_withTandIce: 122541_y2013_withTandIce
  122542_y2013_withT: 122542_y2013_withT
  122543_y2013: 122543_y2013
  122843_y2013_withTandIce: 122843_y2013_withTandIce
  122844_y2013_withTandIce: 122844_y2013_withTandIce
  122845_y2013_withT: 122845_y2013_withT
  122846_y2013_withTandIce: 122846_y2013_withTandIce
  122847_y2013_withTandIce: 122847_y2013_withTandIce
  128951_y2013_withTandIce: 128951_y2013_withTandIce
  128952_y2013_withT: 128952_y2013_withT
  128954_y2013_withTandIce: 128954_y2013_withTandIce
  128955_y2013_withTandIce: 128955_y2013_withTandIce
  13126_y2001: 13126_y2001
  13127_y2001: 13127_y2001
  13128_y2001: 13128_y2001
  13129_y2001: 13129_y2001
  13130_y2001: 13130_y2001
  13131_y2001: 13131_y2001
  13132_y2001: 13132_y2001
  13134_y2001: 13134_y2001
  13135_y2001: 13135_y2001
  13136_y2001: 13136_y2001
  13137_y2001: 13137_y2001
  13138_y2001: 13138_y2001
  13139_y2001: 13139_y2001
  13140_y2001: 13140_y2001
  13141_y2001: 13141_y2001
  13142_y2001: 13142_y2001
  13143_y2001: 13143_y2001
  13144_y2001: 13144_y2001
  13145_y2001: 13145_y2001
  13146_y2001: 13146_y2001
  13147_y2001: 13147_y2001
  13148_y2001: 13148_y2001
  13151_y2001: 13151_y2001
  13152_y2001: 13152_y2001
  13153_y2001: 13153_y2001
  13154_y2001: 13154_y2001
  13155_y2001: 13155_y2001
  13156_y2001: 13156_y2001
  13157_y2001: 13157_y2001
  13158_y2001: 13158_y2001
  13159_y2001: 13159_y2001
  13161_y2001: 13161_y2001
  13162_y2001: 13162_y2001
  13163_y2001: 13163_y2001
  13164_y2001: 13164_y2001
  13169_y2001: 13169_y2001
  13170_y2001: 13170_y2001
  136859_y2015_withTandIce: 136859_y2015_withTandIce
  136860_y2015_withTandIce: 136860_y2015_withTandIce
  136861_y2015_withTandIce: 136861_y2015_withTandIce
  136862_y2015_withTandIce: 136862_y2015_withTandIce
  136863_y2015_withTandIce: 136863_y2015_withTandIce
  136864_y2015_withTandIce: 136864_y2015_withTandIce
  136865_y2015_withTandIce: 136865_y2015_withTandIce
  136866_y2015_withTandIce: 136866_y2015_withTandIce
  136867_y2015_withTandIce: 136867_y2015_withTandIce
  136868_y2015_withTandIce: 136868_y2015_withTandIce
  136869_y2015_withTandIce: 136869_y2015_withTandIce
  136870_y2015_withTandIce: 136870_y2015_withTandIce
  136871_y2014_withTandIce: 136871_y2014_withTandIce
  136873_y2014_withT: 136873_y2014_withT
  136874_y2014_withT: 136874_y2014_withT
  148277_y2015_withTandIce: 148277_y2015_withTandIce
  148278_y2015_withT: 148278_y2015_withT
  148279_y2015_withT: 148279_y2015_withT
  15789_y1999: 15789_y1999
  15790_y1999: 15790_y1999
  15791_y1999: 15791_y1999
  15792_y1999: 15792_y1999
  19457_y2000: 19457_y2000
  19458_y2000: 19458_y2000
  19624_y2000: 19624_y2000
  19625_y2000: 19625_y2000
  19975_y2000: 19975_y2000
  19976_y2000: 19976_y2000
  19980_y2000: 19980_y2000
  19981_y2000: 19981_y2000
  20100_y2000: 20100_y2000
  20101_y2000: 20101_y2000
  20381_y1999: 20381_y1999
  20394_y1999: 20394_y1999
  20395_y1999: 20395_y1999
  20397_y1999: 20397_y1999
  20449_y1999: 20449_y1999
  20454_y1999: 20454_y1999
  20456_y1999: 20456_y1999
  20932_y1999: 20932_y1999
  20932_y2000: 20932_y2000
  21057_y2000: 21057_y2000
  21059_y2000: 21059_y2000
  21956_y2001: 21956_y2001
  21957_y2001: 21957_y2001
  21966_y2001: 21966_y2001
  22025_y2001: 22025_y2001
  22089_y2001: 22089_y2001
  22195_y2000: 22195_y2000
  22196_y2000: 22196_y2000
  22197_y2000: 22197_y2000
  22244_y2001: 22244_y2001
  22343_y2001: 22343_y2001
  22354_y2002: 22354_y2002
  22366_y2001: 22366_y2001
  22383_y2001: 22383_y2001
  22394_y2001: 22394_y2001
  22469_y2001: 22469_y2001
  22578_y2001: 22578_y2001
  22579_y2001: 22579_y2001
  22580_y2001: 22580_y2001
  22666_y2001: 22666_y2001
  22778_y2002: 22778_y2002
  23787_y2002: 23787_y2002
  23827_y2001: 23827_y2001
  23828_y2001: 23828_y2001
  23929_y2001: 23929_y2001
  24036_y2001: 24036_y2001
  24053_y2001: 24053_y2001
  24210_y2001: 24210_y2001
  24213_y2001: 24213_y2001
  29057_y2000: 29057_y2000
  29347_y2001: 29347_y2001
  29348_y2001: 29348_y2001
  29349_y2001: 29349_y2001
  34239_y2002: 34239_y2002
  34240_y2002: 34240_y2002
  34241_y2002: 34241_y2002
  34242_y2002: 34242_y2002
  34243_y2002: 34243_y2002
  34244_y2002: 34244_y2002
  34245_y2002: 34245_y2002
  34246_y2002: 34246_y2002
  34247_y2002: 34247_y2002
  34248_y2002: 34248_y2002
  34249_y2002: 34249_y2002
  34250_y2002: 34250_y2002
  34251_y2002: 34251_y2002
  34287_y2002: 34287_y2002
  34288_y2002: 34288_y2002
  34291_y2002: 34291_y2002
  34292_y2002: 34292_y2002
  34293_y2002: 34293_y2002
  36246_y2002: 36246_y2002
  36247_y2002: 36247_y2002
  36248_y2002: 36248_y2002
  36249_y2002: 36249_y2002
  36250_y2002: 36250_y2002
  36251_y2002: 36251_y2002
  36252_y2002: 36252_y2002
  36253_y2002: 36253_y2002
  36254_y2003: 36254_y2003
  36255_y2002: 36255_y2002
  36256_y2002: 36256_y2002
  36257_y2002: 36257_y2002
  36258_y2002: 36258_y2002
  36259_y2002: 36259_y2002
  36260_y2002: 36260_y2002
  36261_y2002: 36261_y2002
  36262_y2002: 36262_y2002
  36263_y2002: 36263_y2002
  36264_y2002: 36264_y2002
  36265_y2002: 36265_y2002
  36267_y2002: 36267_y2002
  36268_y2002: 36268_y2002
  36269_y2002: 36269_y2002
  36270_y2002: 36270_y2002
  37474_y2002: 37474_y2002
  37475_y2002: 37475_y2002
  37476_y2002: 37476_y2002
  37477_y2002: 37477_y2002
  37478_y2003: 37478_y2003
  37479_y2002: 37479_y2002
  37480_y2002: 37480_y2002
  37483_y2002: 37483_y2002
  37484_y2003: 37484_y2003
  37485_y2003: 37485_y2003
  37486_y2003: 37486_y2003
  37487_y2003: 37487_y2003
  37488_y2003: 37488_y2003
  37489_y2003: 37489_y2003
  37490_y2003: 37490_y2003
  37491_y2003: 37491_y2003
  37492_y2003: 37492_y2003
  37493_y2003: 37493_y2003
  37494_y2003: 37494_y2003
  37495_y2003: 37495_y2003
  37496_y2003: 37496_y2003
  37497_y2003: 37497_y2003
  37498_y2003: 37498_y2003
  37499_y2003: 37499_y2003
  37500_y2003: 37500_y2003
  37501_y2003: 37501_y2003
  37502_y2002: 37502_y2002
  37504_y2003: 37504_y2003
  37505_y2003: 37505_y2003
  37506_y2003: 37506_y2003
  37507_y2003: 37507_y2003
  37508_y2003: 37508_y2003
  37509_y2003: 37509_y2003
  37510_y2003: 37510_y2003
  37511_y2003: 37511_y2003
  37512_y2003: 37512_y2003
  37513_y2003: 37513_y2003
  37514_y2003: 37514_y2003
  37515_y2002: 37515_y2002
  37516_y2003: 37516_y2003
  37517_y2002: 37517_y2002
  37518_y2002: 37518_y2002
  37519_y2002: 37519_y2002
  37520_y2003: 37520_y2003
  37521_y2002: 37521_y2002
  37522_y2002: 37522_y2002
  37523_y2002: 37523_y2002
  43698_y2004: 43698_y2004
  43700_y2004: 43700_y2004
  43701_y2004: 43701_y2004
  43702_y2004: 43702_y2004
  43703_y2004: 43703_y2004
  43704_y2004: 43704_y2004
  43705_y2004: 43705_y2004
  43706_y2004: 43706_y2004
  43707_y2004: 43707_y2004
  43709_y2004: 43709_y2004
  43710_y2004: 43710_y2004
  43711_y2004: 43711_y2004
  43712_y2004: 43712_y2004
  43713_y2004: 43713_y2004
  43714_y2004: 43714_y2004
  43715_y2004: 43715_y2004
  43716_y2004: 43716_y2004
  43717_y2004: 43717_y2004
  43718_y2004: 43718_y2004
  43719_y2004: 43719_y2004
  43720_y2004: 43720_y2004
  43721_y2004: 43721_y2004
  43722_y2004: 43722_y2004
  43723_y2004: 43723_y2004
  43725_y2004: 43725_y2004
  43726_y2004: 43726_y2004
  43727_y2004: 43727_y2004
  43728_y2004: 43728_y2004
  43729_y2004: 43729_y2004
  43730_y2004: 43730_y2004
  43731_y2004: 43731_y2004
  43732_y2004: 43732_y2004
  43733_y2004: 43733_y2004
  43734_y2004: 43734_y2004
  43735_y2004: 43735_y2004
  43737_y2004: 43737_y2004
  43738_y2004: 43738_y2004
  43820_y2003: 43820_y2003
  43821_y2003: 43821_y2003
  53287_y2004: 53287_y2004
  53288_y2004: 53288_y2004
  53289_y2004: 53289_y2004
  53290_y2005: 53290_y2005
  53291_y2004: 53291_y2004
  53292_y2004: 53292_y2004
  53293_y2004: 53293_y2004
  53294_y2005: 53294_y2005
  53295_y2005: 53295_y2005
  53296_y2005: 53296_y2005
  53297_y2006: 53297_y2006
  53298_y2005: 53298_y2005
  53299_y2005: 53299_y2005
  53300_y2005: 53300_y2005
  53301_y2007: 53301_y2007
  53302_y2005: 53302_y2005
  53303_y2005: 53303_y2005
  53304_y2005: 53304_y2005
  53306_y2005: 53306_y2005
  53307_y2006: 53307_y2006
  53308_y2005: 53308_y2005
  53309_y2005: 53309_y2005
  53310_y2005: 53310_y2005
  53311_y2005: 53311_y2005
  53312_y2005: 53312_y2005
  53313_y2006: 53313_y2006
  53314_y2006: 53314_y2006
  53315_y2005: 53315_y2005
  53316_y2005: 53316_y2005
  53317_y2005: 53317_y2005
  53318_y2005: 53318_y2005
  53319_y2005: 53319_y2005
  53320_y2005: 53320_y2005
  53321_y2005: 53321_y2005
  57863_y2006: 57863_y2006
  57864_y2009: 57864_y2009
  57865_y2008: 57865_y2008
  57866_y2006: 57866_y2006
  57867_y2006: 57867_y2006
  57868_y2006: 57868_y2006
  57869_y2006: 57869_y2006
  57870_y2005: 57870_y2005
  57871_y2007: 57871_y2007
  57872_y2005: 57872_y2005
  57873_y2006: 57873_y2006
  57874_y2005: 57874_y2005
  57875_y2006: 57875_y2006
  57876_y2005: 57876_y2005
  57877_y2007: 57877_y2007
  57878_y2005: 57878_y2005
  57879_y2005: 57879_y2005
  57880_y2005: 57880_y2005
  57881_y2005: 57881_y2005
  57882_y2008: 57882_y2008
  57883_y2006: 57883_y2006
  57884_y2008: 57884_y2008
  57885_y2005: 57885_y2005
  57886_y2008: 57886_y2008
  57887_y2005: 57887_y2005
  57888_y2006: 57888_y2006
  57889_y2005: 57889_y2005
  72426_y2009: 72426_y2009
  72427_y2009: 72427_y2009
  72428_y2010: 72428_y2010
  72430_y2007: 72430_y2007
  72431_y2008: 72431_y2008
  72432_y2007: 72432_y2007
  72433_y2007: 72433_y2007
  72434_y2007: 72434_y2007
  72435_y2007: 72435_y2007
  80086_y2008: 80086_y2008
  80087_y2008: 80087_y2008
  80088_y2008: 80088_y2008
  80089_y2008: 80089_y2008
  80090_y2008: 80090_y2008
  80091_y2009: 80091_y2009
  80093_y2009: 80093_y2009
  80094_y2009: 80094_y2009
  80095_y2009: 80095_y2009
  91991_y2009: 91991_y2009
  91992_y2010: 91992_y2010
data:
  00b3fcd6bb9c1bf3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    metadata: {}
    user_parameters: {}
  00d256adab12eb1a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53291_y2004.asc
    metadata: {}
    user_parameters: {}
  016eaf37f4e88816:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/80093_y2009.asc
    metadata: {}
    user_parameters: {}
  01907bffbe768e44:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/22196_y2000.asc
    metadata: {}
    user_parameters: {}
  0215ace3ee85d03c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/20932_y2000.asc
    metadata: {}
    user_parameters: {}
  0262f1422710f292:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/22354_y2002.asc
    metadata: {}
    user_parameters: {}
  0298ebbd319be488:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    metadata: {}
    user_parameters: {}
  02e128cc5192c0a5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13136_y2001.asc
    metadata: {}
    user_parameters: {}
  03acd0bdcc3ad772:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37496_y2003.asc
    metadata: {}
    user_parameters: {}
  043927c94147d362:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    metadata: {}
    user_parameters: {}
  04a1a5ff88915e68:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37501_y2003.asc
    metadata: {}
    user_parameters: {}
  0613a7f495846322:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20394_y1999.asc
    metadata: {}
    user_parameters: {}
  06a45bcea4883333:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37483_y2002.asc
    metadata: {}
    user_parameters: {}
  06e90686b379b76d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43738_y2004.asc
    metadata: {}
    user_parameters: {}
  08e1048a24643911:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37498_y2003.asc
    metadata: {}
    user_parameters: {}
  0a842da40937be7f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13164_y2001.asc
    metadata: {}
    user_parameters: {}
  0af14b2d83b70f15:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    metadata: {}
    user_parameters: {}
  0b9fff968d85f78a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36268_y2002.asc
    metadata: {}
    user_parameters: {}
  0c8fb7f5c711a23b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37518_y2002.asc
    metadata: {}
    user_parameters: {}
  0c91740fc9c64e68:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/20101_y2000.asc
    metadata: {}
    user_parameters: {}
  0cb28df99919fb72:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36267_y2002.asc
    metadata: {}
    user_parameters: {}
  0cf3a2ac66422666:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34240_y2002.asc
    metadata: {}
    user_parameters: {}
  0d7cb5a4936d55c3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/20100_y2000.asc
    metadata: {}
    user_parameters: {}
  0ddfcdfb791ba9b5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43711_y2004.asc
    metadata: {}
    user_parameters: {}
  0df56d8df6a22716:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20456_y1999.asc
    metadata: {}
    user_parameters: {}
  0e6036763dfe08d1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13137_y2001.asc
    metadata: {}
    user_parameters: {}
  0f7cb5bc9c942dc9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53289_y2004.asc
    metadata: {}
    user_parameters: {}
  0ff6f660cd92ce6f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36263_y2002.asc
    metadata: {}
    user_parameters: {}
  1004d30aed2c7fdc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/72427_y2009.asc
    metadata: {}
    user_parameters: {}
  102156a564a096ad:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37514_y2003.asc
    metadata: {}
    user_parameters: {}
  122fb98fdfa7e111:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37505_y2003.asc
    metadata: {}
    user_parameters: {}
  15e399ff2bd7d333:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53287_y2004.asc
    metadata: {}
    user_parameters: {}
  16057e930dced4a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    metadata: {}
    user_parameters: {}
  176229a798bf1faa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    metadata: {}
    user_parameters: {}
  17781d838312df36:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    metadata: {}
    user_parameters: {}
  17dc7dc341ff08b5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57888_y2006.asc
    metadata: {}
    user_parameters: {}
  194969dd332958ac:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13144_y2001.asc
    metadata: {}
    user_parameters: {}
  197195f6fa55edaa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/57865_y2008.asc
    metadata: {}
    user_parameters: {}
  1ae19950b13f3a59:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    metadata: {}
    user_parameters: {}
  1b414b59f299e1fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/21956_y2001.asc
    metadata: {}
    user_parameters: {}
  1b5cc335595d323d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    metadata: {}
    user_parameters: {}
  1c247869d47ac2a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34288_y2002.asc
    metadata: {}
    user_parameters: {}
  1e7ce44b41acb69f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    metadata: {}
    user_parameters: {}
  207e9038aff42e97:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13156_y2001.asc
    metadata: {}
    user_parameters: {}
  2142fb3dc2edd046:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43722_y2004.asc
    metadata: {}
    user_parameters: {}
  2166f39b284b0817:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    metadata: {}
    user_parameters: {}
  22a7fcc17fac775a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37478_y2003.asc
    metadata: {}
    user_parameters: {}
  23811364f51c3638:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/051975_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  23b0fefe5bdfa9d2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37477_y2002.asc
    metadata: {}
    user_parameters: {}
  23b562343e50b833:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/15791_y1999.asc
    metadata: {}
    user_parameters: {}
  23fb64a1b85277cb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13154_y2001.asc
    metadata: {}
    user_parameters: {}
  250d6db3426eb40a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    metadata: {}
    user_parameters: {}
  2548e870f29d4bbf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13139_y2001.asc
    metadata: {}
    user_parameters: {}
  2550fb8f19fa558b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20381_y1999.asc
    metadata: {}
    user_parameters: {}
  25b260deecb88c2f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2637e77e54e5b6ef:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  263f16e80410de77:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34248_y2002.asc
    metadata: {}
    user_parameters: {}
  27202cc06ec90a5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2722875a5f254581:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13155_y2001.asc
    metadata: {}
    user_parameters: {}
  27a681065c898df5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43715_y2004.asc
    metadata: {}
    user_parameters: {}
  282b6056b126f4c2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34293_y2002.asc
    metadata: {}
    user_parameters: {}
  29800418bd51f48a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122847_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2a16b36a8f662e27:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36258_y2002.asc
    metadata: {}
    user_parameters: {}
  2bf37ec173d5cba8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36257_y2002.asc
    metadata: {}
    user_parameters: {}
  2c38d602b0189b26:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43735_y2004.asc
    metadata: {}
    user_parameters: {}
  2c4c53bf6760b771:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136869_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2cb1c3cac85aafb7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13163_y2001.asc
    metadata: {}
    user_parameters: {}
  2d39718f3f07b7e5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/72426_y2009.asc
    metadata: {}
    user_parameters: {}
  2e04a0f229757c3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/106699_y2011_withTandIce.asc
    metadata: {}
    user_parameters: {}
  2e8c3b26b8b86fb6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20454_y1999.asc
    metadata: {}
    user_parameters: {}
  3039b8409f989a30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  30eda14cbb1c9d14:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/80095_y2009.asc
    metadata: {}
    user_parameters: {}
  31b15a9e95035e04:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/29348_y2001.asc
    metadata: {}
    user_parameters: {}
  32859702db0ffa30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43733_y2004.asc
    metadata: {}
    user_parameters: {}
  337a30c5cd6e07c5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34247_y2002.asc
    metadata: {}
    user_parameters: {}
  345047756aa35cbd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34249_y2002.asc
    metadata: {}
    user_parameters: {}
  3555846dbbe8f181:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  35869eb68296394b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  36c70cf099476ecd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37508_y2003.asc
    metadata: {}
    user_parameters: {}
  3828669b16f55983:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34245_y2002.asc
    metadata: {}
    user_parameters: {}
  38a2eaf3e46f4b3b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13132_y2001.asc
    metadata: {}
    user_parameters: {}
  38fc4611fa0b0e8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37488_y2003.asc
    metadata: {}
    user_parameters: {}
  39c4740148c912a9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136862_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  3a09839512267caf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37485_y2003.asc
    metadata: {}
    user_parameters: {}
  3a1ea177219aad23:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13140_y2001.asc
    metadata: {}
    user_parameters: {}
  3a82aa5cb245c12e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    metadata: {}
    user_parameters: {}
  3d1b266774e66188:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37480_y2002.asc
    metadata: {}
    user_parameters: {}
  3d94b27c58ec9d77:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  3ee8e04f015a1424:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/43820_y2003.asc
    metadata: {}
    user_parameters: {}
  3ef417b280656173:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/148279_y2015_withT.asc
    metadata: {}
    user_parameters: {}
  3ef4fabacab692e0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/36254_y2003.asc
    metadata: {}
    user_parameters: {}
  3f36c3fb523c2d07:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22666_y2001.asc
    metadata: {}
    user_parameters: {}
  40c0519d1dbc7dc0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13158_y2001.asc
    metadata: {}
    user_parameters: {}
  41111e51752218d0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13128_y2001.asc
    metadata: {}
    user_parameters: {}
  41dfd32bf75be967:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34242_y2002.asc
    metadata: {}
    user_parameters: {}
  425a9783767b0084:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37523_y2002.asc
    metadata: {}
    user_parameters: {}
  4303974c3e92d6f7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/29057_y2000.asc
    metadata: {}
    user_parameters: {}
  439b46b91b8ba695:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36252_y2002.asc
    metadata: {}
    user_parameters: {}
  4422281109eceaea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37512_y2003.asc
    metadata: {}
    user_parameters: {}
  45221259f2e88836:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136865_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  45b7738f178392a7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36249_y2002.asc
    metadata: {}
    user_parameters: {}
  463642ed3268015f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37511_y2003.asc
    metadata: {}
    user_parameters: {}
  46b92d2ac7c70e2b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  478b7994e4aa5558:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/72428_y2010.asc
    metadata: {}
    user_parameters: {}
  4815935b433c35c5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36247_y2002.asc
    metadata: {}
    user_parameters: {}
  48165b0ea9a220cc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  4a061b8d41762384:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20395_y1999.asc
    metadata: {}
    user_parameters: {}
  4a0962f0a7947f5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43707_y2004.asc
    metadata: {}
    user_parameters: {}
  4ad5c3228fe981e4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/57864_y2009.asc
    metadata: {}
    user_parameters: {}
  4bdf9f12137f20e9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36253_y2002.asc
    metadata: {}
    user_parameters: {}
  4c0f534afb636ca2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  4ea2d3c7ff0fd4bf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122846_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  4eb8e54b95d94e5c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43729_y2004.asc
    metadata: {}
    user_parameters: {}
  5031b4a9172dcd40:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43702_y2004.asc
    metadata: {}
    user_parameters: {}
  504b6d23b90a6289:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53293_y2004.asc
    metadata: {}
    user_parameters: {}
  50d424c83354e4d9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    metadata: {}
    user_parameters: {}
  511074ae94a43ade:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/106698_y2011_withTandIce.asc
    metadata: {}
    user_parameters: {}
  5116039b01504983:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/24210_y2001.asc
    metadata: {}
    user_parameters: {}
  51194d97257ef21b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13138_y2001.asc
    metadata: {}
    user_parameters: {}
  512c16bd149ab159:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098691_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  530463e5d7efa683:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13146_y2001.asc
    metadata: {}
    user_parameters: {}
  55615a48133a079b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22394_y2001.asc
    metadata: {}
    user_parameters: {}
  55770fd2c32cb94a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37493_y2003.asc
    metadata: {}
    user_parameters: {}
  5615b417f79ce5ac:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13147_y2001.asc
    metadata: {}
    user_parameters: {}
  56c2efba4072026a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  56de464cfa24a095:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/050796_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  57a3bec617c5d194:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  57d246f6e9c5e295:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19458_y2000.asc
    metadata: {}
    user_parameters: {}
  581e36be9b7491ce:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/051973_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  59443cd81aedc882:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/148278_y2015_withT.asc
    metadata: {}
    user_parameters: {}
  59a9be915087d77f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    metadata: {}
    user_parameters: {}
  59f151772543ccc9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13127_y2001.asc
    metadata: {}
    user_parameters: {}
  5c7095cf7afd4703:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19457_y2000.asc
    metadata: {}
    user_parameters: {}
  5cb47bf795f950fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43703_y2004.asc
    metadata: {}
    user_parameters: {}
  5ce3cb73c0ac2832:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37519_y2002.asc
    metadata: {}
    user_parameters: {}
  5d96d7b0829047f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136861_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  5e9999a7e699e68b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/24036_y2001.asc
    metadata: {}
    user_parameters: {}
  5f2c0b947aadf5f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136860_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  603576f54b88b55b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    metadata: {}
    user_parameters: {}
  6159e2fe0f19bac0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    metadata: {}
    user_parameters: {}
  6280061551197bd3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53297_y2006.asc
    metadata: {}
    user_parameters: {}
  63827a55f353bd93:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  63a90eb821a5866c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/72432_y2007.asc
    metadata: {}
    user_parameters: {}
  63c16e565969ceae:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/29349_y2001.asc
    metadata: {}
    user_parameters: {}
  64599c0b19df3e9f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22366_y2001.asc
    metadata: {}
    user_parameters: {}
  64601582196d009a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/72430_y2007.asc
    metadata: {}
    user_parameters: {}
  650463c477451c6a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36256_y2002.asc
    metadata: {}
    user_parameters: {}
  651da3bc70e2aaea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37497_y2003.asc
    metadata: {}
    user_parameters: {}
  65680b22f1e65dca:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43718_y2004.asc
    metadata: {}
    user_parameters: {}
  66efa851aecc3e35:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37517_y2002.asc
    metadata: {}
    user_parameters: {}
  670fda776db0c1ec:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37521_y2002.asc
    metadata: {}
    user_parameters: {}
  6828b0804f38800e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    metadata: {}
    user_parameters: {}
  685ba6638536e07f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37504_y2003.asc
    metadata: {}
    user_parameters: {}
  68e4a0c2603fdcdc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37495_y2003.asc
    metadata: {}
    user_parameters: {}
  68fe3c3b8cb6c199:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136866_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  69398aa2624b3c03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    metadata: {}
    user_parameters: {}
  69fe39b0cb8b5151:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6bde4ecf27c86248:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36255_y2002.asc
    metadata: {}
    user_parameters: {}
  6bfd3f3df3fcf6fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6c1335ffa385033f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13134_y2001.asc
    metadata: {}
    user_parameters: {}
  6c4f4e33c5a9b410:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22244_y2001.asc
    metadata: {}
    user_parameters: {}
  6cf31fc934fb55af:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43710_y2004.asc
    metadata: {}
    user_parameters: {}
  6d1e12a3d86ed42d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43737_y2004.asc
    metadata: {}
    user_parameters: {}
  6d87c4883decc1dd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  6d9a968634f8b947:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43731_y2004.asc
    metadata: {}
    user_parameters: {}
  6f6634411e23cfbd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13159_y2001.asc
    metadata: {}
    user_parameters: {}
  700ae0ea314d6d25:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13126_y2001.asc
    metadata: {}
    user_parameters: {}
  724d9d292b9d2526:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37492_y2003.asc
    metadata: {}
    user_parameters: {}
  738cca8ff606ed03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22578_y2001.asc
    metadata: {}
    user_parameters: {}
  73e64c4b883a6ffa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  7570137f1de8ae34:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  7577fc5875924f9e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22579_y2001.asc
    metadata: {}
    user_parameters: {}
  7963ee1eb22a5525:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37491_y2003.asc
    metadata: {}
    user_parameters: {}
  79912cbdda2e4df4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  79aedd5c0757fa85:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  79f467a44fcf0db6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37522_y2002.asc
    metadata: {}
    user_parameters: {}
  7a02bf732f126a74:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34287_y2002.asc
    metadata: {}
    user_parameters: {}
  7b3fa9c7c1634062:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13148_y2001.asc
    metadata: {}
    user_parameters: {}
  7bde7305d997be03:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22025_y2001.asc
    metadata: {}
    user_parameters: {}
  7d5ba0f492ab5fb8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13157_y2001.asc
    metadata: {}
    user_parameters: {}
  7e3ee610e6b30f63:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37509_y2003.asc
    metadata: {}
    user_parameters: {}
  80287b2e5b6839a2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37486_y2003.asc
    metadata: {}
    user_parameters: {}
  80d889d84b7f4060:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43712_y2004.asc
    metadata: {}
    user_parameters: {}
  81c9338428368d64:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37484_y2003.asc
    metadata: {}
    user_parameters: {}
  822858ba87d6a256:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13162_y2001.asc
    metadata: {}
    user_parameters: {}
  8250c777a5fbaf8c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    metadata: {}
    user_parameters: {}
  83c913457dcfe897:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/80088_y2008.asc
    metadata: {}
    user_parameters: {}
  83fa802703858b8f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37506_y2003.asc
    metadata: {}
    user_parameters: {}
  8408c04793368598:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34291_y2002.asc
    metadata: {}
    user_parameters: {}
  841285305c604f84:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37479_y2002.asc
    metadata: {}
    user_parameters: {}
  855811dd28225e7d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122539_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  85c38157ac787874:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13151_y2001.asc
    metadata: {}
    user_parameters: {}
  872c4d76e891a8fe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  878e492709c70f0f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  88ada60fa0712c29:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/148277_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  88c1517870f71221:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098693_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  8998572efa3f0047:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/22778_y2002.asc
    metadata: {}
    user_parameters: {}
  8b6a91a7a1286ac5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098686_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  8e117a800072c7e8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    metadata: {}
    user_parameters: {}
  8e97bd7a68474b1c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    metadata: {}
    user_parameters: {}
  8f6bcfc1a4aa6dae:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/91991_y2009.asc
    metadata: {}
    user_parameters: {}
  916842dca5e4799f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34292_y2002.asc
    metadata: {}
    user_parameters: {}
  9254e59a873aa557:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34251_y2002.asc
    metadata: {}
    user_parameters: {}
  92717cbbb53efb41:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    metadata: {}
    user_parameters: {}
  92760c08ef9745a8:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098690_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  9279796cd5d49dfd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/23828_y2001.asc
    metadata: {}
    user_parameters: {}
  9377990511ea7c81:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43713_y2004.asc
    metadata: {}
    user_parameters: {}
  9384424883e11e55:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13152_y2001.asc
    metadata: {}
    user_parameters: {}
  942ae527a06f2722:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43719_y2004.asc
    metadata: {}
    user_parameters: {}
  94a7d2971ad21b5f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    metadata: {}
    user_parameters: {}
  95108a45d1a0bbc5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136863_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  95572cd2add32005:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  9557516ec2e6c976:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36259_y2002.asc
    metadata: {}
    user_parameters: {}
  9577c74ca3bba84c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    metadata: {}
    user_parameters: {}
  97637ffeb27109aa:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/21057_y2000.asc
    metadata: {}
    user_parameters: {}
  97738571d128a554:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/051972_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  979d1f922acf19bf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36250_y2002.asc
    metadata: {}
    user_parameters: {}
  983fa67f27eb1325:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  98b94fcf8454becb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  9b066d0dee23f134:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34239_y2002.asc
    metadata: {}
    user_parameters: {}
  9b3e98d6506524c9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/57886_y2008.asc
    metadata: {}
    user_parameters: {}
  9be3b763172b3c69:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36265_y2002.asc
    metadata: {}
    user_parameters: {}
  9beb604bf73b7677:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    metadata: {}
    user_parameters: {}
  9c7329c72e788771:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43706_y2004.asc
    metadata: {}
    user_parameters: {}
  9c99e80c267b62d6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43723_y2004.asc
    metadata: {}
    user_parameters: {}
  9d7995d89c7f445e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19981_y2000.asc
    metadata: {}
    user_parameters: {}
  9e69bdb24d016c57:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/80089_y2008.asc
    metadata: {}
    user_parameters: {}
  9ed104b5428e7046:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34243_y2002.asc
    metadata: {}
    user_parameters: {}
  9ee157f01170d493:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/050795_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  9f6b6671bbeb0148:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136870_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  a14d08bb2fbd7830:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136867_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  a2a292bf2fb8a72f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43730_y2004.asc
    metadata: {}
    user_parameters: {}
  a2e69af5c8aa83c1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    metadata: {}
    user_parameters: {}
  a311322ad5d29168:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43720_y2004.asc
    metadata: {}
    user_parameters: {}
  a67189d1e4841b94:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098689_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  a7239301ad8495b5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/80094_y2009.asc
    metadata: {}
    user_parameters: {}
  a7b3cb935d0ca354:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/57884_y2008.asc
    metadata: {}
    user_parameters: {}
  aa235429a5480cd2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/57871_y2007.asc
    metadata: {}
    user_parameters: {}
  aa8c237924ba0202:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13170_y2001.asc
    metadata: {}
    user_parameters: {}
  ab0b2d964090f98c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/24213_y2001.asc
    metadata: {}
    user_parameters: {}
  ab51e475dfe6ee79:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/72435_y2007.asc
    metadata: {}
    user_parameters: {}
  ab543029cb764389:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43704_y2004.asc
    metadata: {}
    user_parameters: {}
  ab892c123f2a4fa2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/91992_y2010.asc
    metadata: {}
    user_parameters: {}
  abe5c89ce4af7369:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    metadata: {}
    user_parameters: {}
  ac36418ab78e519c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/57877_y2007.asc
    metadata: {}
    user_parameters: {}
  ae8da310999d4e5c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    metadata: {}
    user_parameters: {}
  af51edc0a933dbcc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b08c3f262831b320:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    metadata: {}
    user_parameters: {}
  b0e4500f81ae7f7d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/051974_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  b1062cfa9c67f024:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b12d35501ece40c4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37502_y2002.asc
    metadata: {}
    user_parameters: {}
  b156e0f61491ba1a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43726_y2004.asc
    metadata: {}
    user_parameters: {}
  b15cd7ed916f91ba:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    metadata: {}
    user_parameters: {}
  b1ba0fdd238acc30:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b2c0f685bd78596a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b34717aeddf40f33:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/80090_y2008.asc
    metadata: {}
    user_parameters: {}
  b438a8f55ed5ff8a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36260_y2002.asc
    metadata: {}
    user_parameters: {}
  b43c7f3573a4acd3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/57882_y2008.asc
    metadata: {}
    user_parameters: {}
  b4d533c3bb150ee5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  b5a52f9635333ccb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20932_y1999.asc
    metadata: {}
    user_parameters: {}
  b700c6dfb7a5d511:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  b71876475c1d6fbe:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37487_y2003.asc
    metadata: {}
    user_parameters: {}
  b7ea0e1ffc30f50b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/23787_y2002.asc
    metadata: {}
    user_parameters: {}
  b89316d4854c45b0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43725_y2004.asc
    metadata: {}
    user_parameters: {}
  b89388b57d490b07:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36270_y2002.asc
    metadata: {}
    user_parameters: {}
  b958c0ae6ef09ce1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/24053_y2001.asc
    metadata: {}
    user_parameters: {}
  b9e4589447567d33:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/050799_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  bace0eb85f8b5735:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  bcf07b41ca2a0f40:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/22195_y2000.asc
    metadata: {}
    user_parameters: {}
  be060169ba5bf370:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/53301_y2007.asc
    metadata: {}
    user_parameters: {}
  be3eaf99596d37d4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19625_y2000.asc
    metadata: {}
    user_parameters: {}
  bebd28df740f1fd4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19624_y2000.asc
    metadata: {}
    user_parameters: {}
  bf36c09e30a4352a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37516_y2003.asc
    metadata: {}
    user_parameters: {}
  bfbc2103c8e710ce:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37515_y2002.asc
    metadata: {}
    user_parameters: {}
  c0f803c5cb9863da:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    metadata: {}
    user_parameters: {}
  c185cb2486d4a5dc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13135_y2001.asc
    metadata: {}
    user_parameters: {}
  c1cda64678efbf86:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c21c1c5556dbe29d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43714_y2004.asc
    metadata: {}
    user_parameters: {}
  c22ad5b70a3883c7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/72433_y2007.asc
    metadata: {}
    user_parameters: {}
  c286835c06037430:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37494_y2003.asc
    metadata: {}
    user_parameters: {}
  c2d8d810bf0da203:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13129_y2001.asc
    metadata: {}
    user_parameters: {}
  c2ff58a2738c1840:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36251_y2002.asc
    metadata: {}
    user_parameters: {}
  c340943f539ffcfd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136859_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c4082f8be9cf6a51:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/21059_y2000.asc
    metadata: {}
    user_parameters: {}
  c4723c82b8e9f9b9:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36246_y2002.asc
    metadata: {}
    user_parameters: {}
  c4abb4adcea7ec3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36248_y2002.asc
    metadata: {}
    user_parameters: {}
  c4eb286ec741be33:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c52784e076b6cfe0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/15790_y1999.asc
    metadata: {}
    user_parameters: {}
  c55799aa7aff03ac:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13145_y2001.asc
    metadata: {}
    user_parameters: {}
  c66d8cf2ff60fd46:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098688_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  c695e2fa59c922bc:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/050798_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  c7c96753def8fd60:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    metadata: {}
    user_parameters: {}
  c85609269d933956:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37513_y2003.asc
    metadata: {}
    user_parameters: {}
  cac92ec9f5c8e385:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/80086_y2008.asc
    metadata: {}
    user_parameters: {}
  cbc84645a77e045c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43705_y2004.asc
    metadata: {}
    user_parameters: {}
  cc2b3eeffac2a9c7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37499_y2003.asc
    metadata: {}
    user_parameters: {}
  cd19e6a74286a5cb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13153_y2001.asc
    metadata: {}
    user_parameters: {}
  cdbd22bbbcec5c02:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43734_y2004.asc
    metadata: {}
    user_parameters: {}
  cdf91c1eca3cc14c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43728_y2004.asc
    metadata: {}
    user_parameters: {}
  ce4dec04dbb14a4e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13143_y2001.asc
    metadata: {}
    user_parameters: {}
  ce828fd606e8f45c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37520_y2003.asc
    metadata: {}
    user_parameters: {}
  cf338890f386cf54:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    metadata: {}
    user_parameters: {}
  cf64dd186a900a38:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/15789_y1999.asc
    metadata: {}
    user_parameters: {}
  d004f919cea92782:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34241_y2002.asc
    metadata: {}
    user_parameters: {}
  d06c656af9c3021d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43698_y2004.asc
    metadata: {}
    user_parameters: {}
  d33d509135d4bf61:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22580_y2001.asc
    metadata: {}
    user_parameters: {}
  d42e9b4ad5cf09ac:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22383_y2001.asc
    metadata: {}
    user_parameters: {}
  d44b6d3ca83b8cd1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57883_y2006.asc
    metadata: {}
    user_parameters: {}
  d4f7f3367c757b6f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/106694_y2011_withTandIce.asc
    metadata: {}
    user_parameters: {}
  d51c40b928882a37:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098685_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  d5790cd5c8e0ed35:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136864_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  d797205072b2ab78:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43716_y2004.asc
    metadata: {}
    user_parameters: {}
  d7b6169e2e1506bb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    metadata: {}
    user_parameters: {}
  d82a0dbbebda8d17:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  d9dd67e782bc96eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37510_y2003.asc
    metadata: {}
    user_parameters: {}
  da4bcf50aeffbecf:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098687_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  da5ec63dbbb8a066:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43717_y2004.asc
    metadata: {}
    user_parameters: {}
  daaf380f5bc79121:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/23929_y2001.asc
    metadata: {}
    user_parameters: {}
  dac7f0966a0908a1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36264_y2002.asc
    metadata: {}
    user_parameters: {}
  db6e329ab71af6f1:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    metadata: {}
    user_parameters: {}
  dbe2fe49c0d6327a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/051976_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  dc386959183e60ee:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    metadata: {}
    user_parameters: {}
  dc78b37e3cce0672:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22469_y2001.asc
    metadata: {}
    user_parameters: {}
  dc8b49bf15bb682b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34244_y2002.asc
    metadata: {}
    user_parameters: {}
  dd6439f5c1e02076:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/43821_y2003.asc
    metadata: {}
    user_parameters: {}
  ddb358bc9fc4b0fb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  dddabc704b7ad31e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098684_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  de5c35842929103e:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  deb91e3d93f8b04f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43701_y2004.asc
    metadata: {}
    user_parameters: {}
  e0ebcde1693aa070:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e26c50f94baa9862:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43727_y2004.asc
    metadata: {}
    user_parameters: {}
  e333c83e88c1bf76:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2007/72434_y2007.asc
    metadata: {}
    user_parameters: {}
  e38f5769e5b845de:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13130_y2001.asc
    metadata: {}
    user_parameters: {}
  e4e0fb2a2b1cfee6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e4e22ff2d785a1b7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/098692_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e507e5cdd0d8a57f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19980_y2000.asc
    metadata: {}
    user_parameters: {}
  e58a3016ab1e5f6c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    metadata: {}
    user_parameters: {}
  e5dcbc26f5eb4b8d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2010/050797_y2010_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e620eaa8ff69040c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37490_y2003.asc
    metadata: {}
    user_parameters: {}
  e66d68da0ddfb95b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43709_y2004.asc
    metadata: {}
    user_parameters: {}
  e6908208b752235f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2015/136868_y2015_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e6aa09994fce14ea:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/15792_y1999.asc
    metadata: {}
    user_parameters: {}
  e6bf31e0776bd85c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/29347_y2001.asc
    metadata: {}
    user_parameters: {}
  e774a98cae3bceca:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37500_y2003.asc
    metadata: {}
    user_parameters: {}
  e7b2643cc2227804:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19976_y2000.asc
    metadata: {}
    user_parameters: {}
  e801d6d2c18252f7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36269_y2002.asc
    metadata: {}
    user_parameters: {}
  e80cb983c9e68917:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/21966_y2001.asc
    metadata: {}
    user_parameters: {}
  e81c5db3a57f1729:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37476_y2002.asc
    metadata: {}
    user_parameters: {}
  e8f66bcf71758d01:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43732_y2004.asc
    metadata: {}
    user_parameters: {}
  e99b265255b7c297:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  e9a64ac6dddb2edd:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20397_y1999.asc
    metadata: {}
    user_parameters: {}
  ea686806a919b2e0:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    metadata: {}
    user_parameters: {}
  ea9c0cff799bd742:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13169_y2001.asc
    metadata: {}
    user_parameters: {}
  ea9d5c822f430532:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37507_y2003.asc
    metadata: {}
    user_parameters: {}
  eac720dd0f31c073:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    metadata: {}
    user_parameters: {}
  ebf9a62ed26ced44:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13141_y2001.asc
    metadata: {}
    user_parameters: {}
  ec17bf96789a702d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/80087_y2008.asc
    metadata: {}
    user_parameters: {}
  ecc0945f280b9e3c:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    metadata: {}
    user_parameters: {}
  ecdab4292321af05:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13142_y2001.asc
    metadata: {}
    user_parameters: {}
  ed5badf7ee89cbf7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    metadata: {}
    user_parameters: {}
  ee30325b76a6c545:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    metadata: {}
    user_parameters: {}
  ee66c60f7ca68ef4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53288_y2004.asc
    metadata: {}
    user_parameters: {}
  f00abda7b507fe16:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    metadata: {}
    user_parameters: {}
  f0eae59729121340:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/21957_y2001.asc
    metadata: {}
    user_parameters: {}
  f2829ba6621d1fa7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/53307_y2006.asc
    metadata: {}
    user_parameters: {}
  f2a17809cf7ed3c4:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  f2f3ed29a2903506:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/43721_y2004.asc
    metadata: {}
    user_parameters: {}
  f322e7ec754b22df:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13161_y2001.asc
    metadata: {}
    user_parameters: {}
  f49fbf8b94d68536:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37474_y2002.asc
    metadata: {}
    user_parameters: {}
  f4d643651dc14c5a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2008/72431_y2008.asc
    metadata: {}
    user_parameters: {}
  f5012cd57de43505:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/23827_y2001.asc
    metadata: {}
    user_parameters: {}
  f6be6e9780c841e6:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34250_y2002.asc
    metadata: {}
    user_parameters: {}
  f6cac895f32e3538:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/34246_y2002.asc
    metadata: {}
    user_parameters: {}
  f6f3ca6a83ab0ee5:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36261_y2002.asc
    metadata: {}
    user_parameters: {}
  f7675176ae9b5a3d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2004/53292_y2004.asc
    metadata: {}
    user_parameters: {}
  f76c1bb2d2125f5b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2009/80091_y2009.asc
    metadata: {}
    user_parameters: {}
  f799e817baf18ac7:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22343_y2001.asc
    metadata: {}
    user_parameters: {}
  f7c8edd5a905cf37:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    metadata: {}
    user_parameters: {}
  f7f2fa1cceb2908a:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data1999/20449_y1999.asc
    metadata: {}
    user_parameters: {}
  f8acba4f4c81c729:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  f91e92c0070401e2:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2011/106695_y2011_withT.asc
    metadata: {}
    user_parameters: {}
  f9728a6f4c23eb6f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/22089_y2001.asc
    metadata: {}
    user_parameters: {}
  f9b424d0a2842417:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    metadata: {}
    user_parameters: {}
  f9dd6bb76cae117d:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/22197_y2000.asc
    metadata: {}
    user_parameters: {}
  f9fff804a12e8843:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2001/13131_y2001.asc
    metadata: {}
    user_parameters: {}
  fa7d9823bf63e3eb:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    metadata: {}
    user_parameters: {}
  faa32262b9f545e3:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/37475_y2002.asc
    metadata: {}
    user_parameters: {}
  fce93ea3d3801f28:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2000/19975_y2000.asc
    metadata: {}
    user_parameters: {}
  fde257ef6740e93f:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    metadata: {}
    user_parameters: {}
  fe423d06d697785b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    metadata: {}
    user_parameters: {}
  fe5347c342f50f53:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    metadata: {}
    user_parameters: {}
  fe900ae87233d68b:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    metadata: {}
    user_parameters: {}
  ff3f24f5b366f729:
    datatype: intake.readers.datatypes:CSV
    kwargs:
      storage_options: null
      url: https://www.ecofoci.noaa.gov/drifters/data2002/36262_y2002.asc
    metadata: {}
    user_parameters: {}
entries:
  000e8b5c4fe8a0e4:
    kwargs:
      data: '{data(57d246f6e9c5e295)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  005c6a76045b1b01:
    kwargs:
      data: '{data(603576f54b88b55b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0066ae5d96a70cc1:
    kwargs:
      data: '{data(1ae19950b13f3a59)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  006c0d07d1594133:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  00b7a4be66bedb13:
    kwargs:
      data: '{data(e81c5db3a57f1729)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  00f37ad8f2e0e039:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6a3233266abdb0b8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01068f364e1024f8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2f0bfc219c822a09)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  01151ebe22b994a9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a4c7eb48b102b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0161cdea0006e8d7:
    kwargs:
      data: '{data(66efa851aecc3e35)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  01f971f30a4997e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4e0474aaeb965f4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  02589ee6093bbfe9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(efa803af793c98be)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  02751310063d486c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d9dc8ec53b5c4968)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  02822dbe41b09cbc:
    kwargs:
      data: '{data(cf338890f386cf54)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  02a8da84631ec393:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e21b336cbdb75dd3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  034299d0877df9c1:
    kwargs:
      data: '{data(27202cc06ec90a5a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  03a409de27f9323c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39d863e26a959ef2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  03d10499d1fd405b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57c8ae47470e59bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f5f9883d6c4c3861)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  04016ea165d02111:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9ac7a9b9c6190b55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(221417eb5278ebc3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0406ec427ea22842:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94af8b3640df7e86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  04555fcdb80370c6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0457744e92abf57d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c35bd57988723f6e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  045da5c6f6472cec:
    kwargs:
      data: '{data(45221259f2e88836)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0467c3e3115b6091:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  046a6ab775335e30:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb33a61662366e9b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  04dd6616c1245183:
    kwargs:
      data: '{data(e58a3016ab1e5f6c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  04fcbfded648969c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(81c97925704d7ab4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  04ff4d4cd33dc50c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a8c978a5f4f5a1b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050795_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9b79f42cbec2820)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(91aeda9cb6392a50)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a9a020ea4680431d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.663
      maxLongitude: -136.63
      maxTime: '2012-06-12T03:52:00.000000000'
      minLatitude: 51.32
      minLongitude: -162.219
      minTime: '2011-05-10T02:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/050795_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050796_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(697ce4b9f35b1cc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(143833cca75c1522)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d9ab1e1ae097fc91)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.662
      maxLongitude: -162.294
      maxTime: '2010-11-29T22:32:00.000000000'
      minLatitude: 55.313
      minLongitude: -164.217
      minTime: '2010-05-10T12:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/050796_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050797_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(974f37ce73bcf080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2e15d8c48f5b113c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(81a7cf46c6b8ff81)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.033
      maxLongitude: -159.177
      maxTime: '2011-03-18T06:47:00.000000000'
      minLatitude: 55.497
      minLongitude: -164.73
      minTime: '2009-11-24T23:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/050797_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050798_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cdbafce450193af8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a8fe8e6a67d10eec)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(20835b971b39e992)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.269
      maxLongitude: -134.324
      maxTime: '2011-09-29T20:30:00.000000000'
      minLatitude: 56.078
      minLongitude: -147.131
      minTime: '2011-05-04T00:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/050798_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050799_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4620510f1acfb02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4d7846870ae81692)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a94e8761e46743ba)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.22
      maxLongitude: -136.319
      maxTime: '2011-05-10T07:38:00.000000000'
      minLatitude: 57.02
      minLongitude: -136.449
      minTime: '2011-05-07T01:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/050799_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  050a7a15076744d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  051972_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b5b390bb67fad601)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(26127c69762d3dfc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bb49d2a7b9f2af24)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.64
      maxLongitude: -134.436
      maxTime: '2011-09-29T11:42:00.000000000'
      minLatitude: 56.091
      minLongitude: -135.954
      minTime: '2011-05-04T04:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/051972_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  051973_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c0d6d3b5fc825e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c38a0a9e066b7937)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(380e0e756e5a353b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.247
      maxLongitude: -171.66
      maxTime: '2011-04-17T10:38:00.000000000'
      minLatitude: 59.83
      minLongitude: -182.348
      minTime: '2010-06-03T11:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/051973_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  051974_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79cb787f2e3cc6ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b0129444bec736a2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b9f6f2f9778536d9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.243
      maxLongitude: -137.402
      maxTime: '2012-01-30T19:23:00.000000000'
      minLatitude: 55.422
      minLongitude: -147.109
      minTime: '2011-05-15T12:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/051974_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  051975_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(474267b1a94a51f7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(665c80df0091b544)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(752d048be35df6f6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.901
      maxLongitude: -166.864
      maxTime: '2011-01-23T18:04:00.000000000'
      minLatitude: 57.668
      minLongitude: -169.23
      minTime: '2010-06-02T01:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/051975_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  051976_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a8dcf523b2a4cea)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(259d97d266112b5e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4537fc480d8b26f5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.985
      maxLongitude: -172.055
      maxTime: '2010-11-29T22:33:00.000000000'
      minLatitude: 59.749
      minLongitude: -173.367
      minTime: '2010-07-10T13:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/051976_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  055841ce7797c18b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(af6c937c28e319dd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  05bf73801a176ea5:
    kwargs:
      data: '{data(9c7329c72e788771)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  05c2ce3ef28eeccb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4e588221bd4da4f4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  05d193a8920ff584:
    kwargs:
      data: '{data(79aedd5c0757fa85)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  05f5fcb1c1761a9a:
    kwargs:
      data: '{data(dc8b49bf15bb682b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  061fb548589affc3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560b3822db531cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0641fd6557ad9d0b:
    kwargs:
      data: '{data(0ff6f660cd92ce6f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  064f730a4031ff75:
    kwargs:
      data: '{data(b43c7f3573a4acd3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0679615a13dc44d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea59289de3ef34ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  06801c04270cb9ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c28bb8d73826103f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  06f34a8bf9b658b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc6057da25ddb109)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0703c406133ff3e9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9ecf766b3ce3408b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  071a9a6e916e5f3c:
    kwargs:
      data: '{data(88c1517870f71221)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  073e82c1a643718b:
    kwargs:
      data: '{data(6c4f4e33c5a9b410)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0757528b9e8c748f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72a326e192b48e09)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  079b3b61d01038a3:
    kwargs:
      data: '{data(f00abda7b507fe16)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  07baa5e15a1ac21e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c80db9126533fda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2bd9aef728d96140)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  07cb4244815fc6eb:
    kwargs:
      data: '{data(3555846dbbe8f181)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  07dd01fc8cbbca48:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f914fc719da2100e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fd04f5505372454d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  07e00d4cced9b0ae:
    kwargs:
      data: '{data(0262f1422710f292)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  084a0be3943acbe3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7556e816ea74ed2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0854a5e6a2595d37:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  086b932db80c382b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea59289de3ef34ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0679615a13dc44d4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  088252a2cbf32f5a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  08f7507254f0778f:
    kwargs:
      data: '{data(2a16b36a8f662e27)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  08fc5bde0cb0be37:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0902533b6cd7197d:
    kwargs:
      data: '{data(dc386959183e60ee)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0909349b79fafc59:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(80ef936e85ebd5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0911090798d5f6ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  09729673902a5bb1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(70f5a0b945bbb088)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098684_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b4bdcc668a73c72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d81075472f95703e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(84a8ad9c4ff81b3d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.69
      maxLongitude: -163.322
      maxTime: '2012-01-25T06:36:00.000000000'
      minLatitude: 53.692
      minLongitude: -192.499
      minTime: '2010-04-26T13:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098684_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098685_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc6057da25ddb109)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(06f34a8bf9b658b5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ece47b551cf4ee98)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.153
      maxLongitude: -158.865
      maxTime: '2011-12-18T07:46:00.000000000'
      minLatitude: 55.49
      minLongitude: -165.385
      minTime: '2010-04-26T22:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098685_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098686_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(409e220413baac56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4c45dc17d1a30d60)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bce0f0d70684720c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.29
      maxLongitude: -159.944
      maxTime: '2011-01-29T21:18:00.000000000'
      minLatitude: 55.707
      minLongitude: -165.2
      minTime: '2010-04-26T12:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098686_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098687_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c76b2afe867c1c9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c227b355341b4e69)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2c0d8b1cf9bafb7d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.867
      maxLongitude: -162.679
      maxTime: '2012-05-14T08:24:00.000000000'
      minLatitude: 43.713
      minLongitude: -206.627
      minTime: '2010-04-26T15:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098687_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098688_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(80ef936e85ebd5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5471642cf4d63935)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6898300f30ccccb2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.627
      maxLongitude: -159.907
      maxTime: '2010-11-29T22:18:00.000000000'
      minLatitude: 55.616
      minLongitude: -164.99
      minTime: '2010-04-26T11:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098688_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098689_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a34b94a6c9f1869)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e6e4773ebe220ed0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d319251eb07a58ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.836
      maxLongitude: -164.38
      maxTime: '2010-11-29T22:18:00.000000000'
      minLatitude: 54.966
      minLongitude: -168.776
      minTime: '2010-04-26T16:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098689_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098690_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6516061bdf1500e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(69cc241ad1229369)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cefd1db5af26afc6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.076
      maxLongitude: -160.399
      maxTime: '2011-01-29T22:33:00.000000000'
      minLatitude: 55.673
      minLongitude: -165.362
      minTime: '2010-04-26T13:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098690_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098691_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3aecce85a44d6913)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ed3f7e63f4db3a0d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(81279d38e30575b6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.312
      maxLongitude: -164.623
      maxTime: '2010-11-29T18:50:00.000000000'
      minLatitude: 54.996
      minLongitude: -170.559
      minTime: '2010-04-26T11:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098691_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098692_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a4c7eb48b102b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9e2a80d9e58b4a46)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1b30ffe21387bdd2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.337
      maxLongitude: -158.208
      maxTime: '2010-11-29T20:38:00.000000000'
      minLatitude: 54.971
      minLongitude: -165.232
      minTime: '2010-04-26T08:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098692_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  098693_y2010_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(071a9a6e916e5f3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d169b9c330cf54bc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2f9954c72211fb05)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.702
      maxLongitude: -159.54
      maxTime: '2010-11-29T18:53:00.000000000'
      minLatitude: 55.457
      minLongitude: -165.26
      minTime: '2010-04-26T12:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/098693_y2010_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  09977ae433e9b6c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73dd4db3d47897dc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9375a82f9671b58a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  09ecfae7c54635be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0bf1f0ded454dd68)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0a197043769fef5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(821dacb6d78e8447)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0a421c5f4347d8e3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aabed94c4cd9ddc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0a8cf68df5640435:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72a326e192b48e09)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0a8e2a187b364fa0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b708e55ed82fa5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0aaf9ca5258cc15b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f54840d9147ec6f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0abf7654e1d1aefe:
    kwargs:
      data: '{data(abe5c89ce4af7369)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0ad9cbf6d4f6a04e:
    kwargs:
      data: '{data(700ae0ea314d6d25)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0afb4470ded4cb4d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b5de737b7000e5f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0b634f570fa1bae1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0bc952d9d10ea2fb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0bf1f0ded454dd68:
    kwargs:
      data: '{data(45b7738f178392a7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c4f0b7ab0ca3af7:
    kwargs:
      data: '{data(36c70cf099476ecd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c7eea200a721554:
    kwargs:
      data: '{data(0af14b2d83b70f15)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c80db9126533fda:
    kwargs:
      data: '{data(511074ae94a43ade)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0c81ce6f7e5fae66:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0d053c0d9cd013b4:
    kwargs:
      data: '{data(f8acba4f4c81c729)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0d154237a9f15c8a:
    kwargs:
      data: '{data(e8f66bcf71758d01)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0db64f81c7a08ab7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f3092b5558784c27)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0dcb09bc3c6f4662:
    kwargs:
      data: '{data(6d87c4883decc1dd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0de032fc615303df:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a143f47e1c9f2a1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ed1a1b7a62bd5214)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0de2aab42814e52b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b708e55ed82fa5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0a8e2a187b364fa0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0dfa76a0edc41b04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90ce0a12d430fd70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0dfe5ae54bbdf6da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(21790b4375704208)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ce301e1531c7b15d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0e0508459c161894:
    kwargs:
      data: '{data(31b15a9e95035e04)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e2408e0005c72ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(543cc6e2c67f3841)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0e2f77188ba247bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07e00d4cced9b0ae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bfd17dc810ab5fcd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0e41363592d4b807:
    kwargs:
      data: '{data(0e6036763dfe08d1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e4e1fad2dbeff92:
    kwargs:
      data: '{data(85c38157ac787874)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0e544bef5cbbd70f:
    kwargs:
      data: '{data(c4abb4adcea7ec3c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  0ed40d349a9c9aea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c8812acb8be2b8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0f1c4ddc19df3124:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  0fa915b21a3c1acc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9770bf69ab6748f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8f8b9f794cfa8873)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  101b5b902a2e2fae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94c4aab56cf39408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106694_y2011_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b6e34d0deeb1ea8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f37d1fbc8084be4e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '23'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb78f2f484ec9d84)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.878
      maxLongitude: -166.859
      maxTime: '2012-05-23T21:54:00.000000000'
      minLatitude: 66.021
      minLongitude: -178.433
      minTime: '2011-08-19T07:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/106694_y2011_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106695_y2011_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(35ccffba98403f1f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(58e1f754164bfb14)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(66158162b521bc85)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.347
      maxLongitude: -136.148
      maxTime: '2011-06-17T19:55:00.000000000'
      minLatitude: 58.04
      minLongitude: -136.743
      minTime: '2011-05-17T13:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/106695_y2011_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106696_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5296f8ff3e6d956c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5f859ed2a52f1252)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.091
      maxLongitude: -166.136
      maxTime: '2012-11-17T07:25:00.000000000'
      minLatitude: 66.008
      minLongitude: -174.238
      minTime: '2012-08-17T23:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106696_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106697_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b3d952a14a5330eb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d834cfd29b51ac8f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.625
      maxLongitude: -138.067
      maxTime: '2013-04-24T06:07:00.000000000'
      minLatitude: 69.511
      minLongitude: -164.205
      minTime: '2012-05-30T23:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/106697_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106698_y2011_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c80db9126533fda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(146b42f8e4c326e0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '23'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(07baa5e15a1ac21e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.277
      maxLongitude: -157.383
      maxTime: '2012-04-03T10:48:00.000000000'
      minLatitude: 69.397
      minLongitude: -175.128
      minTime: '2011-08-27T12:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/106698_y2011_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  106699_y2011_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c4cc5a9e3a9a1db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(261db4505d5a1a19)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '23'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9cf2e431bab1adea)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.567
      maxLongitude: -167.568
      maxTime: '2012-01-08T22:25:00.000000000'
      minLatitude: 67.76
      minLongitude: -176.908
      minTime: '2011-08-19T21:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2011/106699_y2011_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  10725ad2551e49e2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0bf1f0ded454dd68)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b0d976d117287115)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  107c5e6592bed848:
    kwargs:
      data: '{data(c22ad5b70a3883c7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  109dc57c540b1f4c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(61433728bf950915)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  10ccf8b18f8c8a0a:
    kwargs:
      data: '{data(5f2c0b947aadf5f1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  10f6c244a8293ee7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(000e8b5c4fe8a0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111968_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7fda96b699d938ea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5f07db62a8a0fcfc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.835
      maxLongitude: -168.091
      maxTime: '2013-10-21T06:00:00.000000000'
      minLatitude: 67.903
      minLongitude: -205.212
      minTime: '2012-08-19T02:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/111968_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111969_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bc497e791403328f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(aad0254273c00518)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.262
      maxLongitude: -134.314
      maxTime: '2013-12-15T13:32:00.000000000'
      minLatitude: 55.959
      minLongitude: -147.558
      minTime: '2013-04-17T22:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111969_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111970_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a2066e73e7d7f437)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2369cd6ce5ee1a4f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.019
      maxLongitude: -140.053
      maxTime: '2013-07-23T04:21:00.000000000'
      minLatitude: 58.407
      minLongitude: -151.602
      minTime: '2013-04-20T03:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111970_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111971_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7d8ccde1aa47b08a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f65b615ac300f18e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.969
      maxLongitude: -134.306
      maxTime: '2014-12-19T13:03:00.000000000'
      minLatitude: 52.698
      minLongitude: -179.999
      minTime: '2013-04-17T18:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111971_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111973_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a25bfd9212321f73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2ec20de02f02f488)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.904
      maxLongitude: -135.793
      maxTime: '2013-10-19T02:14:00.000000000'
      minLatitude: 55.849
      minLongitude: -155.342
      minTime: '2013-04-16T13:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111973_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111974_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9e2a338178d336c1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61a131ceab7b62db)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.39
      maxLongitude: -136.872
      maxTime: '2013-07-08T02:28:00.000000000'
      minLatitude: 57.515
      minLongitude: -140.537
      minTime: '2013-04-17T17:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111974_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111976_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9307a232f307fa10)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f157639b1e9a59a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.356
      maxLongitude: -135.711
      maxTime: '2013-12-03T16:09:00.000000000'
      minLatitude: 52.728
      minLongitude: -168.459
      minTime: '2013-04-16T07:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/111976_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  111f375a935b5fc4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(46bcc59e02ce6bd1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113633_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a52441e85302021d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(19061e5d6314b707)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.122
      maxLongitude: -161.076
      maxTime: '2012-11-26T00:00:00.000000000'
      minLatitude: 55.594
      minLongitude: -165.003
      minTime: '2012-05-19T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113633_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113634_y2012_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1418b2b10c75fb1f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb2e2d6ea650109f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.894
      maxLongitude: -164.762
      maxTime: '2013-04-20T23:42:00.000000000'
      minLatitude: 54.123
      minLongitude: -199.86
      minTime: '2011-06-18T23:53:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113634_y2012_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113635_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(33b0950c152f6306)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c2bfa83f6bed2749)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.619
      maxLongitude: -162.819
      maxTime: '2013-01-14T05:55:00.000000000'
      minLatitude: 55.25
      minLongitude: -165.42
      minTime: '2012-05-19T12:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113635_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113636_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ac3a9d42d6864b80)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2b4011bbb2972ca6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.676
      maxLongitude: -157.685
      maxTime: '2014-08-29T04:26:00.000000000'
      minLatitude: 55.959
      minLongitude: -170.886
      minTime: '2012-05-19T10:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113636_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113637_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dd04ce475c9bb7e0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eaedc8d243549e0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.94
      maxLongitude: -159.584
      maxTime: '2013-07-29T23:28:00.000000000'
      minLatitude: 55.921
      minLongitude: -165.337
      minTime: '2012-05-19T10:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113637_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113638_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e5f5ef5222aba4bd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2f4e40a9471615ad)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.255
      maxLongitude: -164.962
      maxTime: '2014-02-03T05:59:00.000000000'
      minLatitude: 53.111
      minLongitude: -198.802
      minTime: '2012-05-19T12:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113638_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113639_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(81866db1b9eba3d8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a4e339525fabe46c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.069
      maxLongitude: -164.979
      maxTime: '2013-02-17T10:33:00.000000000'
      minLatitude: 53.791
      minLongitude: -178.366
      minTime: '2012-05-19T13:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113639_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113640_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c987b6f7532e644e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5e68b4d49c4dcae2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.977
      maxLongitude: -164.141
      maxTime: '2013-06-22T00:29:00.000000000'
      minLatitude: 55.032
      minLongitude: -186.81
      minTime: '2012-05-19T14:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113640_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113641_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fc5e126cf7de6e55)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7c4f80f7879cc073)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.358
      maxLongitude: -159.496
      maxTime: '2013-01-10T19:35:00.000000000'
      minLatitude: 55.732
      minLongitude: -165.215
      minTime: '2012-05-19T12:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113641_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113642_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(537f169d79da6937)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ad6513048c8fcf24)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.709
      maxLongitude: -164.866
      maxTime: '2013-12-18T08:48:00.000000000'
      minLatitude: 48.752
      minLongitude: -200.787
      minTime: '2012-01-30T00:12:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/113642_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  113bb6b7b6650708:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  117fc571aa6f1742:
    kwargs:
      data: '{data(3ee8e04f015a1424)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  119593_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d5e4e3833a0994f9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(00f37ad8f2e0e039)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.682
      maxLongitude: -154.445
      maxTime: '2014-07-17T21:40:00.000000000'
      minLatitude: 71.051
      minLongitude: -196.963
      minTime: '2012-08-24T16:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119593_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119594_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bf714fde5236c7d3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7d3043a9998cf4a4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.921
      maxLongitude: -154.013
      maxTime: '2013-04-10T18:14:00.000000000'
      minLatitude: 70.731
      minLongitude: -197.649
      minTime: '2012-08-25T11:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119594_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119595_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4e722f0ff40b2b60)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ebd7667ce9935f7f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.885
      maxLongitude: -167.438
      maxTime: '2013-08-21T23:00:00.000000000'
      minLatitude: 68.671
      minLongitude: -200.183
      minTime: '2012-08-30T21:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119595_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119596_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7663ac1940f27d50)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(34f17f5c14e599e7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.08
      maxLongitude: -154.045
      maxTime: '2013-01-14T01:48:00.000000000'
      minLatitude: 70.767
      minLongitude: -172.133
      minTime: '2012-08-13T10:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119596_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119597_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1853edd80b83c946)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a9234a1a94749feb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.16
      maxLongitude: -151.76
      maxTime: '2012-11-21T02:16:00.000000000'
      minLatitude: 71.175
      minLongitude: -164.952
      minTime: '2012-08-13T20:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119597_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119598_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(77636f43acf8e66b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ebaae50c9beade8b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.957
      maxLongitude: -164.316
      maxTime: '2012-11-25T10:39:00.000000000'
      minLatitude: 64.071
      minLongitude: -169.562
      minTime: '2012-08-14T09:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119598_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119599_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3fe30b2cc1dbf2ef)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f09e8977f6aef546)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.221
      maxLongitude: -151.248
      maxTime: '2012-11-07T14:05:00.000000000'
      minLatitude: 70.988
      minLongitude: -161.75
      minTime: '2012-08-24T16:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119599_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  119600_y2012_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d6caf72a29ea1a08)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(055841ce7797c18b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.544
      maxLongitude: -152.259
      maxTime: '2013-03-24T16:46:00.000000000'
      minLatitude: 69.289
      minLongitude: -167.611
      minTime: '2012-08-20T01:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2012/119600_y2012_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  11bb7059a073e738:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12076bc271532979:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  121b5bc4a144cb54:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(464505f3aaa7c8b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122532_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(421a67232bcaee22)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9f852e0c022cad62)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.402
      maxLongitude: -134.467
      maxTime: '2014-09-11T19:58:00.000000000'
      minLatitude: 56.102
      minLongitude: -154.089
      minTime: '2013-07-03T11:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122532_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122533_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8f3d77ab7cb69b3f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(02751310063d486c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.131
      maxLongitude: -135.205
      maxTime: '2015-03-03T14:57:00.000000000'
      minLatitude: 49.069
      minLongitude: -166.789
      minTime: '2013-07-03T18:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122533_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122534_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a21133d671780d8d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a01c9b6892410238)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.313
      maxLongitude: -168.026
      maxTime: '2014-12-31T18:49:00.000000000'
      minLatitude: 67.768
      minLongitude: -190.397
      minTime: '2013-08-23T01:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122534_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122535_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9b9453f77e12a0c8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(22867033690dcb03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.284
      maxLongitude: -153.972
      maxTime: '2013-11-09T04:09:00.000000000'
      minLatitude: 70.882
      minLongitude: -165.629
      minTime: '2013-08-27T04:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122535_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122536_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(81d6e67ac6f3cd22)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ac32b7b592cb7d29)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.844
      maxLongitude: -152.14
      maxTime: '2014-02-18T23:42:00.000000000'
      minLatitude: 71.12
      minLongitude: -179.385
      minTime: '2013-09-03T20:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122536_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122537_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9d84b44e98e08bf0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(986a900207eb2b03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.038
      maxLongitude: -160.874
      maxTime: '2015-03-31T23:15:00.000000000'
      minLatitude: 55.819
      minLongitude: -177.156
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122537_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122538_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c3c2966e68ae7afc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(876b92d534471d7d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.816
      maxLongitude: -155.239
      maxTime: '2013-11-02T15:06:00.000000000'
      minLatitude: 71.045
      minLongitude: -173.801
      minTime: '2013-08-28T07:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122538_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122539_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bd7605a9b219b00c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6a82e52deb10b31e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.574
      maxLongitude: -153.867
      maxTime: '2013-11-03T14:27:00.000000000'
      minLatitude: 70.807
      minLongitude: -164.327
      minTime: '2013-08-27T09:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122539_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122540_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3af3b2ae4d17da51)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(89cd22e5ff35e6e6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 74.688
      maxLongitude: -157.741
      maxTime: '2014-09-15T04:51:00.000000000'
      minLatitude: 69.292
      minLongitude: -184.136
      minTime: '2013-08-25T20:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122540_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122541_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(08fc5bde0cb0be37)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3262e716c2a1e6bf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.842
      maxLongitude: -147.595
      maxTime: '2014-07-31T23:14:00.000000000'
      minLatitude: 70.58
      minLongitude: -162.99
      minTime: '2013-08-27T22:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122541_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122542_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(29eed688142b5c67)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eb97d70709a9f247)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.046
      maxLongitude: -140.632
      maxTime: '2014-01-07T10:03:00.000000000'
      minLatitude: 52.159
      minLongitude: -171.494
      minTime: '2013-04-20T19:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122542_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122543_y2013:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c1156a8064dd7025)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a89119a894087d0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -136.606
      maxTime: '2013-04-07T13:44:00.000000000'
      minLatitude: 58.164
      minLongitude: -136.77
      minTime: '2013-04-07T08:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122543_y2013.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122843_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4344242c41c6a389)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(879e92f9c29dc59b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.533
      maxLongitude: -160.253
      maxTime: '2015-05-03T22:39:00.000000000'
      minLatitude: 55.68
      minLongitude: -165.392
      minTime: '2013-05-05T00:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122843_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122844_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(63ba731657a6186b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6e6441ff8b6c05e8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.773
      maxLongitude: -158.451
      maxTime: '2014-08-30T07:39:00.000000000'
      minLatitude: 55.375
      minLongitude: -166.074
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122844_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122845_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(eedf9b227f477007)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1c4ed78c58060b4c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.598
      maxLongitude: -164.044
      maxTime: '2015-05-03T21:00:00.000000000'
      minLatitude: 52.264
      minLongitude: -199.207
      minTime: '2013-05-05T01:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122845_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122846_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(89c2d8a43622f231)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(688043574fa5e922)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.108
      maxLongitude: -161.096
      maxTime: '2015-03-31T22:26:00.000000000'
      minLatitude: 55.757
      minLongitude: -170.261
      minTime: '2013-05-05T02:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122846_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  122847_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cd35ce3c86f99980)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1d130e172742368c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.975
      maxLongitude: -165.015
      maxTime: '2015-01-22T18:23:00.000000000'
      minLatitude: 55.734
      minLongitude: -179.357
      minTime: '2013-05-05T02:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/122847_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128951_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(abe301d787f6338f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d02a30a44e5784a8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.86
      maxLongitude: -156.565
      maxTime: '2014-08-15T17:10:00.000000000'
      minLatitude: 70.161
      minLongitude: -169.217
      minTime: '2013-09-04T07:12:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128951_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128952_y2013_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fa7f720a49ecd5b8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(665a38abe68b27a2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 67.195
      maxLongitude: -165.456
      maxTime: '2013-09-19T01:02:00.000000000'
      minLatitude: 66.572
      minLongitude: -168.487
      minTime: '2013-08-09T19:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128952_y2013_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128954_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(46d3e4c6997db019)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1e29daaa59917908)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.512
      maxLongitude: -167.605
      maxTime: '2014-01-02T15:47:00.000000000'
      minLatitude: 67.582
      minLongitude: -175.926
      minTime: '2013-08-12T20:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128954_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  128955_y2013_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(783b3a9585085ab2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(400cccdb5d8b3f62)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.263
      maxLongitude: -150.977
      maxTime: '2014-07-21T06:39:00.000000000'
      minLatitude: 69.817
      minLongitude: -194.731
      minTime: '2013-08-23T00:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2013/128955_y2013_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12af5f5d10a65eb2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c35bd57988723f6e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e05c9c2d4bb099ae)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12ba053feacd681a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12c2c07c89d35ff8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57c8ae47470e59bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  12d4628a3a1542a2:
    kwargs:
      data: '{data(01907bffbe768e44)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  12feae34fb3dca0f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ce042da142e0cd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6906922d2cecefa)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  130abebf3380d6d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13126_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ad9cbf6d4f6a04e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(244975b7b634eff7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(25dc739cf029dac0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.291
      maxLongitude: -156.188
      maxTime: '2001-06-28T22:23:00.000000000'
      minLatitude: 55.499
      minLongitude: -160.012
      minTime: '2001-05-03T19:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13126_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13127_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c1c99e5c55447fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2851f7aa9a20bb4e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(64d2b6ff1a7b0b12)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.737
      maxLongitude: -148.614
      maxTime: '2001-11-10T06:17:00.000000000'
      minLatitude: 56.822
      minLongitude: -153.715
      minTime: '2001-05-18T06:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13127_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13128_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90ce0a12d430fd70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d21d8b4672ec8bcb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f4c7b44b4d8688bb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.017
      maxLongitude: -152.134
      maxTime: '2002-10-19T15:24:00.000000000'
      minLatitude: 50.529
      minLongitude: -183.264
      minTime: '2001-01-03T03:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13128_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13129_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72a326e192b48e09)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0757528b9e8c748f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6160bd79d0d6a66b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.126
      maxLongitude: -148.569
      maxTime: '2003-03-06T16:35:00.000000000'
      minLatitude: 49.634
      minLongitude: -205.611
      minTime: '2001-05-22T22:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13129_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13130_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ca76eaaab43b6651)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b8f7b779085a795f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61bae9faf5544b73)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.712
      maxLongitude: -147.747
      maxTime: '2002-01-03T19:23:00.000000000'
      minLatitude: 52.144
      minLongitude: -170.665
      minTime: '2001-05-19T14:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13130_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13131_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da362e6d2a36caaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2019dd6d7ae680de)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ec5e4a2d9db74fb5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.667
      maxLongitude: -149.368
      maxTime: '2002-03-07T16:48:00.000000000'
      minLatitude: 53.319
      minLongitude: -166.41
      minTime: '2001-05-18T16:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13131_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13132_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea59289de3ef34ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5448792a9477e181)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(086b932db80c382b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.556
      maxLongitude: -146.906
      maxTime: '2002-05-21T22:52:00.000000000'
      minLatitude: 52.523
      minLongitude: -170.751
      minTime: '2001-05-20T12:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13132_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13134_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(729240dffbba06bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c5b5015a7bfa4703)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(542a0ab543ff1f1f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.75
      maxLongitude: -160.125
      maxTime: '2001-09-02T22:38:00.000000000'
      minLatitude: 54.472
      minLongitude: -165.406
      minTime: '2001-05-07T04:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13134_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13135_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d9b88ed09e193a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ee70543f011f2dec)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e73e0ecf0bb7bee6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.501
      maxLongitude: -169.292
      maxTime: '2002-01-02T19:46:00.000000000'
      minLatitude: 55.285
      minLongitude: -178.384
      minTime: '2001-05-31T03:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13135_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13136_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c02d488c8c567b35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f980694ccc0fadf5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3ae6c5d8333bcccf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.179
      maxLongitude: -149.527
      maxTime: '2003-05-19T00:30:00.000000000'
      minLatitude: 42.923
      minLongitude: -191.248
      minTime: '2001-05-23T10:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13136_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13137_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e41363592d4b807)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3caee5808c240379)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f6704a6b477328c5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.133
      maxLongitude: -150.961
      maxTime: '2001-08-31T13:05:00.000000000'
      minLatitude: 55.737
      minLongitude: -158.889
      minTime: '2001-05-14T11:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13137_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13138_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8af333b6a7f54f05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a1d00bcbafdf0cb1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(39953caf4ab13eea)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.877
      maxLongitude: -150.836
      maxTime: '2001-06-09T15:45:00.000000000'
      minLatitude: 57.934
      minLongitude: -152.652
      minTime: '2001-05-14T15:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13138_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13139_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(348f2de370f97ccc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(347aaefc419ae03f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(59ecca24a02f6e09)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.466
      maxLongitude: -148.949
      maxTime: '2003-01-02T19:58:00.000000000'
      minLatitude: 46.716
      minLongitude: -184.999
      minTime: '2001-05-18T09:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13139_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13140_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f914fc719da2100e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b95ee1b542ce5339)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(07dd01fc8cbbca48)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.557
      maxLongitude: -149.169
      maxTime: '2001-09-30T15:40:00.000000000'
      minLatitude: 57.395
      minLongitude: -153.178
      minTime: '2001-05-18T11:11:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13140_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13141_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94af8b3640df7e86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(20b5be909b46ba4e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(695388023751c935)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.545
      maxLongitude: -148.208
      maxTime: '2001-11-15T22:59:00.000000000'
      minLatitude: 53.804
      minLongitude: -165.783
      minTime: '2001-05-17T14:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13141_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13142_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa3f85c92f149b7f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4cc27a81e725a795)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a4d0435f2b7274ef)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.251
      maxLongitude: -147.901
      maxTime: '2001-12-31T18:51:00.000000000'
      minLatitude: 51.479
      minLongitude: -157.579
      minTime: '2001-05-17T11:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13142_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13143_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73dd4db3d47897dc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e0e8670d8cd9af4c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(09977ae433e9b6c1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 52.814
      maxLongitude: -170.007
      maxTime: '2002-01-02T18:09:00.000000000'
      minLatitude: 48.647
      minLongitude: -183.758
      minTime: '2001-10-14T23:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13143_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13144_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(840a5a22a5d75eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3ee6063170da62a6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(77ba7d1885e98c04)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.805
      maxLongitude: -165.741
      maxTime: '2001-07-30T23:34:00.000000000'
      minLatitude: 52.036
      minLongitude: -171.899
      minTime: '2001-06-11T15:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13144_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13145_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b995ce0af0093c1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4449dac04712d368)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2504f455a32fb9ff)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.123
      maxLongitude: -151.283
      maxTime: '2001-09-21T03:42:00.000000000'
      minLatitude: 57.384
      minLongitude: -152.273
      minTime: '2001-08-26T03:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13145_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13146_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ad3ffd88e60b7eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8dadb4c174870322)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1755bc3da3cd6d56)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.211
      maxLongitude: -152.208
      maxTime: '2001-10-30T22:27:00.000000000'
      minLatitude: 54.55
      minLongitude: -159.24
      minTime: '2001-08-17T03:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13146_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13147_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f457b927cb0eec10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5caf3140748e333b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(698e06016cf44cba)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.396
      maxLongitude: -151.159
      maxTime: '2001-10-19T06:17:00.000000000'
      minLatitude: 54.885
      minLongitude: -159.908
      minTime: '2001-08-16T14:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13147_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13148_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(efa803af793c98be)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(02589ee6093bbfe9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2535b3c8ccc75d61)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.957
      maxLongitude: -156.496
      maxTime: '2001-07-24T04:30:00.000000000'
      minLatitude: 54.662
      minLongitude: -159.909
      minTime: '2001-05-07T21:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13148_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13151_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4e1fad2dbeff92)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(243fc67a903321b6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(aedf3186ec0e8b42)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.55
      maxLongitude: -165.86
      maxTime: '2001-07-05T06:39:00.000000000'
      minLatitude: 52.039
      minLongitude: -171.867
      minTime: '2001-06-11T12:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13151_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13152_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b59113bc4ecd9cfd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d16ea6ee889169d0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c194341e8bec5107)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.466
      maxLongitude: -166.074
      maxTime: '2001-06-28T17:29:00.000000000'
      minLatitude: 52.463
      minLongitude: -169.915
      minTime: '2001-06-11T12:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13152_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13153_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc77ab8ed218da5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(20f1d4b3fb476b11)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(771cb29bab19235d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.085
      maxLongitude: -148.817
      maxTime: '2001-11-15T23:02:00.000000000'
      minLatitude: 56.511
      minLongitude: -156.898
      minTime: '2001-09-25T19:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13153_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13154_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6228a46f1542d7fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(723f58d3524714fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(242ec546d8cf74f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.712
      maxLongitude: -149.16
      maxTime: '2001-10-10T01:28:00.000000000'
      minLatitude: 57.378
      minLongitude: -155.987
      minTime: '2001-09-25T19:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13154_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13155_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c55ab1bc64e43b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8bb33032e15053c4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cad6ee4184a84316)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.084
      maxLongitude: -155.848
      maxTime: '2002-01-02T19:45:00.000000000'
      minLatitude: 53.694
      minLongitude: -166.897
      minTime: '2001-05-07T17:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13155_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13156_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c9aab4739be933b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1cba013f9be4fef8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6f3138832a3cd294)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.052
      maxLongitude: -148.473
      maxTime: '2001-12-05T12:51:00.000000000'
      minLatitude: 54.006
      minLongitude: -164.75
      minTime: '2001-05-18T00:44:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13156_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13157_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ce042da142e0cd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(db903cceb1033baa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(12feae34fb3dca0f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.187
      maxLongitude: -148.676
      maxTime: '2001-10-25T16:07:00.000000000'
      minLatitude: 57.59
      minLongitude: -155.6
      minTime: '2001-09-26T10:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13157_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13158_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ad1a5af7546cca8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b8ed67cf90b939d9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(592b57dfc56a875e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.61
      maxLongitude: -148.311
      maxTime: '2002-05-21T22:49:00.000000000'
      minLatitude: 50.919
      minLongitude: -183.846
      minTime: '2001-09-25T15:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13158_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13159_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c62604e5a46a3923)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(18186e32cc5c3888)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1c2443c501469046)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 52.464
      maxLongitude: -171.826
      maxTime: '2001-08-06T21:40:00.000000000'
      minLatitude: 51.582
      minLongitude: -177.013
      minTime: '2001-06-25T05:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13159_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13161_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b87d5dbd31fb37)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(94e730aa087d088a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6b0328f86b22f511)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.418
      maxLongitude: -151.154
      maxTime: '2001-12-02T23:18:00.000000000'
      minLatitude: 53.984
      minLongitude: -168.43
      minTime: '2001-08-11T14:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13161_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13162_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f92b794921b9c58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(428aa6589dc57fdd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fec3e4aff4ea8a7f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.368
      maxLongitude: -152.316
      maxTime: '2003-05-27T23:30:00.000000000'
      minLatitude: 51.048
      minLongitude: -199.762
      minTime: '2001-08-12T00:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13162_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13163_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d5bfa067e1b3c955)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cb646ce683bdda3c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b0f07e4217591eb2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.917
      maxLongitude: -167.025
      maxTime: '2002-12-09T22:42:00.000000000'
      minLatitude: 52.185
      minLongitude: -198.789
      minTime: '2001-10-14T20:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13163_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13164_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c765913753fdc60c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(964e11cc6df4d501)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e90921ced1b03603)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.293
      maxLongitude: -148.602
      maxTime: '2002-10-02T22:27:00.000000000'
      minLatitude: 53.337
      minLongitude: -169.632
      minTime: '2001-09-26T13:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13164_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13169_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f860c04cedb40f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9837bc1fb4df7d0f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b09c1a32696bcda3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.435
      maxLongitude: -148.789
      maxTime: '2002-03-31T13:53:00.000000000'
      minLatitude: 48.393
      minLongitude: -184.628
      minTime: '2001-09-25T13:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13169_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13170_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85ea237f4b62ba9f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9447251a45f4f8c8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(556040b4c10dce91)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.538
      maxLongitude: -171.673
      maxTime: '2001-11-08T02:08:00.000000000'
      minLatitude: 49.361
      minLongitude: -188.309
      minTime: '2001-06-23T06:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/13170_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1341aec5b3ed3ea8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  134d4e59c7b368d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  135c9a90ab95c4b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da015121df9e807a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136859_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3acdf3d9cb324a44)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bf0838d8c5bde96b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2d06ec2b6f66165c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.921
      maxLongitude: -152.654
      maxTime: '2015-08-31T00:48:00.000000000'
      minLatitude: 70.441
      minLongitude: -164.156
      minTime: '2015-07-10T23:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136859_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136860_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10ccf8b18f8c8a0a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(13ea0ea1e855b911)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c4ad75d37106739e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 73.367
      maxLongitude: -154.93
      maxTime: '2015-09-08T07:05:00.000000000'
      minLatitude: 70.899
      minLongitude: -164.95
      minTime: '2015-07-11T02:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136860_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136861_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(46bcc59e02ce6bd1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(111f375a935b5fc4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5145873946624a95)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 81.763
      maxLongitude: -154.126
      maxTime: '2016-08-24T19:12:00.000000000'
      minLatitude: 70.844
      minLongitude: -205.996
      minTime: '2015-07-18T23:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136861_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136862_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36d2c15488d05074)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dad7849dcdcff82d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7252accf33fd26fe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 81.76
      maxLongitude: -154.126
      maxTime: '2016-08-24T19:12:00.000000000'
      minLatitude: 70.844
      minLongitude: -205.996
      minTime: '2015-07-18T23:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136862_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136863_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a5fc5989abdf4773)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(31e8cd73a4182349)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(55c4b21ccabb232c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 70.563
      maxLongitude: -161.839
      maxTime: '2015-11-29T20:58:00.000000000'
      minLatitude: 69.491
      minLongitude: -165.356
      minTime: '2015-08-12T16:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136863_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136864_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6c6558e024a2bbd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7955c67672968839)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(42e21afe614a29a8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.796
      maxLongitude: -164.565
      maxTime: '2016-08-27T22:44:00.000000000'
      minLatitude: 68.198
      minLongitude: -183.107
      minTime: '2015-08-11T15:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136864_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136865_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(045da5c6f6472cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b3959fcb76ff68c1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(97d93724aaacded3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.034
      maxLongitude: -165.74
      maxTime: '2016-08-15T07:30:00.000000000'
      minLatitude: 66.793
      minLongitude: -184.078
      minTime: '2015-08-11T08:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136865_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136866_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5299de5f5da8127f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(95880ada4504f65a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a8ad5bb6cd8d9040)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 70.16
      maxLongitude: -164.49
      maxTime: '2015-12-11T21:47:00.000000000'
      minLatitude: 68.12
      minLongitude: -173.231
      minTime: '2015-08-12T19:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136866_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136867_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7ad9eebe4270ea9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5e483216d363e36f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e0540022fc37909c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 71.085
      maxLongitude: -168.163
      maxTime: '2015-12-31T04:30:00.000000000'
      minLatitude: 67.156
      minLongitude: -178.865
      minTime: '2015-07-09T16:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136867_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136868_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7605a3f7dde7f46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9f9bfb8ab86d464f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bf5c2cf9194fece7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 72.599
      maxLongitude: -160.481
      maxTime: '2015-12-08T22:44:00.000000000'
      minLatitude: 66.032
      minLongitude: -174.344
      minTime: '2015-07-09T11:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136868_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136869_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a0038c4da421ac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1cadb7331a871113)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3b0ec0080f0810aa)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 76.331
      maxLongitude: -153.184
      maxTime: '2015-10-16T04:19:00.000000000'
      minLatitude: 70.757
      minLongitude: -164.346
      minTime: '2015-07-18T23:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136869_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136870_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fb1551a6f8f09650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9a134d49a15f14ca)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '30'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(75fb8db5b0aadd04)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 75.129
      maxLongitude: -154.991
      maxTime: '2015-09-22T06:38:00.000000000'
      minLatitude: 70.852
      minLongitude: -170.711
      minTime: '2015-07-18T23:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/136870_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136871_y2014_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(263fbb0838fbace0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3c3dacfddb8300f1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 63.902
      maxLongitude: -165.142
      maxTime: '2015-07-05T09:40:00.000000000'
      minLatitude: 54.071
      minLongitude: -182.416
      minTime: '2014-05-15T07:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136871_y2014_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136873_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5d851017eb66207c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f3afdcdc19e94a88)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.432
      maxLongitude: -168.008
      maxTime: '2016-07-26T20:55:00.000000000'
      minLatitude: 44.112
      minLongitude: -202.389
      minTime: '2014-05-14T21:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136873_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  136874_y2014_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(472f02dac9a17605)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8cd2bbb5a9ccec03)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.532
      maxLongitude: -164.688
      maxTime: '2016-01-18T21:24:00.000000000'
      minLatitude: 52.11
      minLongitude: -186.52
      minTime: '2013-10-01T23:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2014/136874_y2014_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  137337460e8b47b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7e46349b20d832)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13af4d626a50b50b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ed678069c8806e58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13afba552bd39a49:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1ef9d313c590b2cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c9ce67c298dd74e5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13d8a7f6a0d7c15a:
    kwargs:
      data: '{data(c85609269d933956)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  13e6ab1d496387b4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc93f5b9580870d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13ea0ea1e855b911:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10ccf8b18f8c8a0a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  13ecd593cc0b32c7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7c424fd0618174a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  140e9fef275854ff:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16787c161d9d4762)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1418b2b10c75fb1f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  141f094d1114ba72:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  143833cca75c1522:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(697ce4b9f35b1cc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  144843b35a42109d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6c32f3b93ebbfb3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  146b42f8e4c326e0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c80db9126533fda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  148277_y2015_withTandIce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(396f5cdb11fe537f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2b4534967f718fd7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(77432ac4e7bd094a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 66.424
      maxLongitude: -154.767
      maxTime: '2017-02-09T03:45:00.000000000'
      minLatitude: 54.283
      minLongitude: -175.705
      minTime: '2015-05-25T13:53:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/148277_y2015_withTandIce.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  148278_y2015_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(21790b4375704208)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e1be8de2c3df528a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0dfe5ae54bbdf6da)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.524
      maxLongitude: -145.545
      maxTime: '2015-09-06T22:27:00.000000000'
      minLatitude: 53.503
      minLongitude: -158.953
      minTime: '2015-06-01T09:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/148278_y2015_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  148279_y2015_withT:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(53d7428345dee062)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fb812c60e1025a4a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(797519676fdd34be)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.46
      maxLongitude: -151.382
      maxTime: '2016-04-24T06:25:00.000000000'
      minLatitude: 50.962
      minLongitude: -179.535
      minTime: '2015-06-03T04:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2015/148279_y2015_withT.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  14ada17ddce94fd1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8133f7dea72a14fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b4d0b5e10189b5c5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  14af8ff9fc8336cf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a065f721a7a0da3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  14b02732af2f72ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0467b7fc964c489)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  14f3e4be86e8e096:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05f5fcb1c1761a9a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3cd959b88b8f72cb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1535a21874cd29d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76df6f7a0f5b0c8d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  153e8b07890df63d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  156b7f173d2291f3:
    kwargs:
      data: '{data(b700c6dfb7a5d511)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  15789_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(658e5acbbb30f909)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ade882a0277327f0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6b02d11df791fb92)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.2
      maxLongitude: -165.913
      maxTime: '2000-01-25T15:52:00.000000000'
      minLatitude: 53.946
      minLongitude: -178.977
      minTime: '1999-09-28T13:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/15789_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  15790_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab73c49b62712bb7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2c213ccedcc90938)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(420d994f8bccdadd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.276
      maxLongitude: -156.619
      maxTime: '1999-06-07T16:03:00.000000000'
      minLatitude: 56.097
      minLongitude: -156.969
      minTime: '1999-05-27T22:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/15790_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  15791_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(253a6309e6941152)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bbc3e5a07cb3a0db)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(53e0db487d75bed8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.884
      maxLongitude: -167.182
      maxTime: '1999-12-18T19:21:00.000000000'
      minLatitude: 52.132
      minLongitude: -174.257
      minTime: '1999-09-26T13:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/15791_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  15792_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33813f97313d16b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d51cbaced81f5261)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(efbcf8870aac3b19)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.474
      maxLongitude: -158.776
      maxTime: '1999-11-24T21:32:00.000000000'
      minLatitude: 54.52
      minLongitude: -165.26
      minTime: '1999-06-11T15:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/15792_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  15cdf50f8c438828:
    kwargs:
      data: '{data(f49fbf8b94d68536)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  15db1bcdac1fd375:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a489d7eef8dd0ede)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16787c161d9d4762:
    kwargs:
      data: '{data(a7b3cb935d0ca354)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1688312322cf2a86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16b3d90c4787777c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4ae9910e1eaa546)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  16b92dcb1cfbf46d:
    kwargs:
      data: '{data(250d6db3426eb40a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1726ec4beefb876d:
    kwargs:
      data: '{data(d004f919cea92782)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1755bc3da3cd6d56:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ad3ffd88e60b7eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8eaabdc5d4558cd7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  175dc84874c9a9b2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc93f5b9580870d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(13e6ab1d496387b4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1799ff0a118caef4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  17b260b71e98fb76:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(44fc0d9361a9ed1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4bca997b6b7c8cb6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1812975572f1d5bc:
    kwargs:
      data: '{data(7577fc5875924f9e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  18186e32cc5c3888:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c62604e5a46a3923)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1853edd80b83c946:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  18774723ae2ea634:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da015121df9e807a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(135c9a90ab95c4b6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  187a19e2a36d1366:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ab6c862d33bb5e18)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  18d8181cd9babacb:
    kwargs:
      data: '{data(80d889d84b7f4060)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  18e8748076e09f98:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(08f7507254f0778f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  18ed6585c6a03893:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19061e5d6314b707:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7ebf0309c5e06f7d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19075a910d4f86c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  192570bb8fc324bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0161cdea0006e8d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b8191fae135dbe92)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  193c972da3d2684b:
    kwargs:
      data: '{data(55615a48133a079b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  19457_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8d9af992c31a990)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e9183c26eccd0652)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ad667e49b262d9a9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.355
      maxLongitude: -165.506
      maxTime: '2000-12-11T15:38:00.000000000'
      minLatitude: 54.269
      minLongitude: -174.85
      minTime: '2000-05-26T03:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19457_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19458_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(000e8b5c4fe8a0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(10f6c244a8293ee7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(209172f2f5ba16c8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.903
      maxLongitude: -167.961
      maxTime: '2001-03-28T05:56:00.000000000'
      minLatitude: 55.473
      minLongitude: -187.485
      minTime: '2000-09-06T15:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19458_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  195687f7f49e5abf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cd3f2445bc6af9e9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19624_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ba79761b1ee2f32)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d6e58d34a8fad178)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2776e29fa68ea5fc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.382
      maxLongitude: -165.563
      maxTime: '2000-11-25T01:32:00.000000000'
      minLatitude: 54.065
      minLongitude: -179.416
      minTime: '2000-05-26T02:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19624_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19625_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91df58c1f89d7f12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(aaf9f44275fd1a63)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '25'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a261c16e6c45b12d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.063
      maxLongitude: -168.874
      maxTime: '2001-03-14T15:48:00.000000000'
      minLatitude: 55.438
      minLongitude: -184.477
      minTime: '2000-09-01T16:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19625_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  196e7d4ee9c854b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e93473c9d6864ca3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d95bbc1ddcb1c71a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  197fcdf0674365c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(40fae301554e2e5f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19975_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b49e523d1783c149)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(773d0b56b01767fe)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c7a8d2ea0b92c798)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.91
      maxLongitude: -153.92
      maxTime: '2000-11-15T18:13:00.000000000'
      minLatitude: 55.011
      minLongitude: -158.878
      minTime: '2000-05-31T05:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19975_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19976_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b7ecf297cabbbab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(28209e334a931e46)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(abc455e233e540bb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.558
      maxLongitude: -165.681
      maxTime: '2000-11-29T22:55:00.000000000'
      minLatitude: 53.502
      minLongitude: -173.001
      minTime: '2000-08-29T01:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19976_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19980_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a550f733380e9553)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1bb8e4d6d75ee0f4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2b8b06e9032171f3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.228
      maxLongitude: -166.131
      maxTime: '2000-10-14T08:10:00.000000000'
      minLatitude: 53.662
      minLongitude: -174.752
      minTime: '2000-04-29T14:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19980_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19981_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9770bf69ab6748f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d13ea0b5798194b1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0fa915b21a3c1acc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.656
      maxLongitude: -168.957
      maxTime: '2001-03-06T04:15:00.000000000'
      minLatitude: 51.772
      minLongitude: -184.503
      minTime: '2000-09-14T00:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/19981_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19a4023f440f844a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19c8ac47c30a822c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19ed4d956833786b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a143f47e1c9f2a1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  19f40742cbe2ed12:
    kwargs:
      data: '{data(ab892c123f2a4fa2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1a63403d64f9c02f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5d79863955d35658)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1abd6c19b1659472:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1aea3ee0dc3bcefa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fe2fda28678681b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1b14f84bbc770fa9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6c32f3b93ebbfb3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(144843b35a42109d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1b30ffe21387bdd2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a4c7eb48b102b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(01151ebe22b994a9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1b502b2fd566c436:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c8ad97fd35c67a6a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ba6a8c6ef74611b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5a298a4795cf2ca4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1bb8e4d6d75ee0f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a550f733380e9553)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1bc490c519bd3e90:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(81c97925704d7ab4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(04fcbfded648969c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1bece231ebf0c184:
    kwargs:
      data: '{data(b438a8f55ed5ff8a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1c1c447cff6a04d6:
    kwargs:
      data: '{data(d06c656af9c3021d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1c2443c501469046:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c62604e5a46a3923)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fd4baa92fbf4cb2f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c2df0d0f6f51d5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c36bbfade44debf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b708e55ed82fa5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c4ed78c58060b4c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bbc58871e1432ba8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1c7bbec4f5537514:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(697ce4b9f35b1cc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1cadb7331a871113:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a0038c4da421ac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1cba013f9be4fef8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c9aab4739be933b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1cba476c59afdc80:
    kwargs:
      data: '{data(b1ba0fdd238acc30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1d130e172742368c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(134d4e59c7b368d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1d3c80ff4bc8833b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1d4723efd7d2abdc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1e29daaa59917908:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2178a28326d480d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1e92700b8d918d16:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8af333b6a7f54f05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1e956ca80c4e70fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42f3913a3535171d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bd7279981376d3b8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ebe00673625717b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ec1ec09b8c0e2b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2d96cba3d1d5ea8d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1ef9d313c590b2cd:
    kwargs:
      data: '{data(9254e59a873aa557)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1f79c7cf6b593a70:
    kwargs:
      data: '{data(e26c50f94baa9862)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1f860c04cedb40f9:
    kwargs:
      data: '{data(ea9c0cff799bd742)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  1f86403beabb3ce0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(70f5a0b945bbb088)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(09729673902a5bb1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  1fc5a6a568ccbfde:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaad6ffce65f4afb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20100_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24d038e5e10d8eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(75e61da1416f6855)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b89ce01573c7b36e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.075
      maxLongitude: -165.6
      maxTime: '2000-11-29T22:56:00.000000000'
      minLatitude: 54.495
      minLongitude: -173.881
      minTime: '2000-04-29T22:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/20100_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20101_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(44fc0d9361a9ed1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5496e0692256eeeb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(17b260b71e98fb76)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.304
      maxLongitude: -155.309
      maxTime: '2000-10-15T23:19:00.000000000'
      minLatitude: 54.181
      minLongitude: -165.665
      minTime: '2000-06-01T00:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/20101_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2012aa93dcb9bd2c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4081fbe01a5e6cc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2019dd6d7ae680de:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da362e6d2a36caaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2026dbcb99e2e570:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20381_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7e46349b20d832)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(137337460e8b47b3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(510c6a6e881d4419)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.347
      maxLongitude: -165.297
      maxTime: '2000-06-12T08:00:00.000000000'
      minLatitude: 52.052
      minLongitude: -184.965
      minTime: '1999-09-20T13:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20381_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20394_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e93473c9d6864ca3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a761bff8607ef271)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(196e7d4ee9c854b5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.856
      maxLongitude: -166.395
      maxTime: '1999-11-27T18:38:00.000000000'
      minLatitude: 54.267
      minLongitude: -174.113
      minTime: '1999-05-18T18:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20394_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20395_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8559bde098fd5fc0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(903f66b69277bea4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a132ee86a414ca89)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.677
      maxLongitude: -165.259
      maxTime: '1999-10-18T19:29:00.000000000'
      minLatitude: 54.563
      minLongitude: -171.445
      minTime: '1999-04-14T02:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20395_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20397_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6ce2465a0371721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f353b4352acb2030)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e4b697fc60adfc85)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.54
      maxLongitude: -163.052
      maxTime: '1999-08-29T23:47:00.000000000'
      minLatitude: 55.131
      minLongitude: -163.85
      minTime: '1999-04-17T07:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20397_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20449_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41c4f9fc533e25bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(65c4c99629627fc3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e18c88debcd25425)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.29
      maxLongitude: -166.81
      maxTime: '1999-10-20T22:50:00.000000000'
      minLatitude: 54.176
      minLongitude: -178.0
      minTime: '1999-05-13T01:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20449_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20454_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c35bd57988723f6e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0457744e92abf57d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(12af5f5d10a65eb2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.158
      maxLongitude: -166.411
      maxTime: '1999-11-27T23:34:00.000000000'
      minLatitude: 53.69
      minLongitude: -173.099
      minTime: '1999-05-18T18:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20454_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20456_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ed678069c8806e58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(13af4d626a50b50b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cb44b6d7adb11d21)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.803
      maxLongitude: -165.25
      maxTime: '2000-02-14T22:49:00.000000000'
      minLatitude: 53.397
      minLongitude: -192.848
      minTime: '1999-05-01T06:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20456_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  204796633387e7ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2079adb1cbeb982b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7c424fd0618174a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20835b971b39e992:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cdbafce450193af8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7ac967a2a06481ee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  209172f2f5ba16c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(000e8b5c4fe8a0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(56c3f362f42d91ea)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20932_y1999:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(482fa0bf78f5abb8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(40644c563d353d3e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4f7d9fd2cc23c289)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.547
      maxLongitude: -165.241
      maxTime: '1999-06-03T18:28:00.000000000'
      minLatitude: 54.06
      minLongitude: -167.763
      minTime: '1999-05-17T08:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data1999/20932_y1999.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20932_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f4315342ac2fab72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c1ad593102b51071)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bd429e1dc9088808)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.338
      maxLongitude: -165.585
      maxTime: '2001-02-13T08:50:00.000000000'
      minLatitude: 49.897
      minLongitude: -186.291
      minTime: '2000-03-06T00:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/20932_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20b5be909b46ba4e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94af8b3640df7e86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20f1d4b3fb476b11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc77ab8ed218da5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  20fd0dda9a6b4d88:
    kwargs:
      data: '{data(650463c477451c6a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  21057_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ede12653a2d9a984)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(41180334c7e97cd9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a0cf183baa6da983)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.806
      maxLongitude: -169.112
      maxTime: '2001-03-26T20:27:00.000000000'
      minLatitude: 51.943
      minLongitude: -181.315
      minTime: '2000-09-13T14:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/21057_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21059_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c301ef274ce9b72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(615b2b4de15a7f75)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9a2759361b393818)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.799
      maxLongitude: -155.387
      maxTime: '2000-07-23T16:25:00.000000000'
      minLatitude: 55.017
      minLongitude: -159.548
      minTime: '2000-05-31T07:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/21059_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2178a28326d480d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21790b4375704208:
    kwargs:
      data: '{data(59443cd81aedc882)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  217fce4157e0ee48:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21956_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a8c978a5f4f5a1b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c5348fd7b46f6e86)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2a53b294705d97d6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.994
      maxLongitude: -148.478
      maxTime: '2001-12-10T23:31:00.000000000'
      minLatitude: 50.531
      minLongitude: -171.057
      minTime: '2001-07-26T15:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/21956_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21957_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(78d21cd77cf60096)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a25b81da76230984)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(51a0769b60611941)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.073
      maxLongitude: -142.422
      maxTime: '2001-10-24T02:46:00.000000000'
      minLatitude: 56.925
      minLongitude: -155.389
      minTime: '2001-07-20T21:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/21957_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21966_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(705b2f6727223b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(66d97a6f127a0326)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eb2980b8892c2aab)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.007
      maxLongitude: -122.223
      maxTime: '2002-10-25T19:06:00.000000000'
      minLatitude: 42.51
      minLongitude: -170.776
      minTime: '2001-11-13T01:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/21966_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  21f225f25de81108:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f1e944c8d81069b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fd648d93a699c841)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22025_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(38e2603589ec4cc9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(db2f557b255127c0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f2b392602a7fccb3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.102
      maxLongitude: -166.772
      maxTime: '2001-10-26T20:49:00.000000000'
      minLatitude: 52.184
      minLongitude: -170.392
      minTime: '2001-10-15T15:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22025_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22089_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8b7ac0b7326e8f6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(58ea6c5cea8b123a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(31820af44817fb57)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.526
      maxLongitude: -144.646
      maxTime: '2001-11-24T23:06:00.000000000'
      minLatitude: 50.602
      minLongitude: -185.068
      minTime: '2001-07-23T23:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22089_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  221417eb5278ebc3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9ac7a9b9c6190b55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  221842e6b2de8092:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22195_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(726a7ddf9595637e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ef5126d2b36c1021)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8f8736fed1683056)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.206
      maxLongitude: -168.412
      maxTime: '2001-02-15T17:04:00.000000000'
      minLatitude: 55.809
      minLongitude: -172.221
      minTime: '2000-09-06T03:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/22195_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22196_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(12d4628a3a1542a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(87fb5a35e8fcbdcf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(359b0a8ee84b8b2c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.309
      maxLongitude: -168.16
      maxTime: '2000-10-11T17:34:00.000000000'
      minLatitude: 53.436
      minLongitude: -178.74
      minTime: '2000-04-29T14:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/22196_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22197_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc93f5b9580870d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6065f3f12124a199)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(175dc84874c9a9b2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.504
      maxLongitude: -164.341
      maxTime: '2000-12-14T16:41:00.000000000'
      minLatitude: 54.06
      minLongitude: -167.292
      minTime: '2000-08-28T00:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/22197_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22244_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(073e82c1a643718b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3f44ece9d917d1b4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7e0d088807310b4d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.925
      maxLongitude: -168.711
      maxTime: '2002-02-09T16:11:00.000000000'
      minLatitude: 49.822
      minLongitude: -185.901
      minTime: '2001-10-14T08:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22244_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22343_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a489d7eef8dd0ede)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(15db1bcdac1fd375)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(936e7c95359ac2a7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.387
      maxLongitude: -148.833
      maxTime: '2001-09-06T19:51:00.000000000'
      minLatitude: 58.511
      minLongitude: -152.751
      minTime: '2001-07-26T22:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22343_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22354_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07e00d4cced9b0ae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c5d00e31aea10e46)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0e2f77188ba247bc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.557
      maxLongitude: -151.428
      maxTime: '2002-12-03T06:13:00.000000000'
      minLatitude: 53.369
      minLongitude: -166.546
      minTime: '2002-08-29T11:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/22354_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22366_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f608eda618bf25a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(75461c654e3f6704)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5c8f3f430a593f06)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.918
      maxLongitude: -150.906
      maxTime: '2001-10-16T11:38:00.000000000'
      minLatitude: 57.29
      minLongitude: -155.909
      minTime: '2001-09-29T00:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22366_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22383_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d49fc2488257051)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d2dab81709714223)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4af55dc3111f33ec)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.112
      maxLongitude: -169.448
      maxTime: '2001-10-28T07:54:00.000000000'
      minLatitude: 52.295
      minLongitude: -172.166
      minTime: '2001-10-14T04:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22383_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22394_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(193c972da3d2684b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5f99235ac14f986c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3cdf92edbd5e4cd1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.572
      maxLongitude: -147.527
      maxTime: '2001-10-26T16:37:00.000000000'
      minLatitude: 55.73
      minLongitude: -159.178
      minTime: '2001-07-24T19:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22394_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22469_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76df6f7a0f5b0c8d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f422ef5a488c4e34)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7ef6b1522c7d8f3e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.383
      maxLongitude: -147.488
      maxTime: '2001-12-30T20:02:00.000000000'
      minLatitude: 58.127
      minLongitude: -152.175
      minTime: '2001-09-27T18:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22469_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22578_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(81c97925704d7ab4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(db256d90150c1ef3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1bc490c519bd3e90)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.055
      maxLongitude: -166.787
      maxTime: '2002-01-02T18:05:00.000000000'
      minLatitude: 49.912
      minLongitude: -179.595
      minTime: '2001-10-15T15:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22578_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22579_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1812975572f1d5bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d9d73874ade807ce)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(67762927a48509a9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.722
      maxLongitude: -148.016
      maxTime: '2002-01-02T19:45:00.000000000'
      minLatitude: 53.684
      minLongitude: -165.774
      minTime: '2001-07-26T02:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22579_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22580_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31b8544aaafd7805)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4e9e054bc58cba10)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9090be15d2026fb4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.2
      maxLongitude: -142.483
      maxTime: '2001-09-10T16:15:00.000000000'
      minLatitude: 59.56
      minLongitude: -148.039
      minTime: '2001-07-20T23:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22580_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22666_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b6d7c50de1c9c70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(41769d3f6dc07b74)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8bdb9b2ae6409675)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.568
      maxLongitude: -149.086
      maxTime: '2002-01-10T16:40:00.000000000'
      minLatitude: 56.96
      minLongitude: -153.105
      minTime: '2001-09-28T06:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/22666_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22778_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96fcc5b034cbfbed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e2e81a84fc7e7f86)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d05ea4404ecd90b4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.185
      maxLongitude: -148.395
      maxTime: '2002-08-15T17:46:00.000000000'
      minLatitude: 57.068
      minLongitude: -156.29
      minTime: '2002-06-03T22:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/22778_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22867033690dcb03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8d8d41a70081490b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22a06b5f10bf4438:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7431efd40a2967a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(eaf1094edee66913)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  22c4f9aab289660f:
    kwargs:
      data: '{data(64601582196d009a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2369cd6ce5ee1a4f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d2ca55e3d8410014)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23787_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea35f1de255308a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f1bb4cf89d1122c2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5876c244caf778f5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.033
      maxLongitude: -148.564
      maxTime: '2003-02-04T15:28:00.000000000'
      minLatitude: 52.744
      minLongitude: -172.564
      minTime: '2002-06-04T01:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/23787_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23827_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aabed94c4cd9ddc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(95c72fbe8fb42da4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fdbf5dfbcffdb12f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.087
      maxLongitude: -166.787
      maxTime: '2001-12-22T23:07:00.000000000'
      minLatitude: 50.176
      minLongitude: -179.999
      minTime: '2001-10-15T15:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/23827_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23828_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8a51b04e5cc470e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fce31597ee2c1105)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d8564ef673f49ce2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.021
      maxLongitude: -150.956
      maxTime: '2002-04-03T21:24:00.000000000'
      minLatitude: 52.267
      minLongitude: -176.604
      minTime: '2001-09-28T19:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/23828_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  23929_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d082fa3842a8d864)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7ca4226dc7370ba1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(caecdcf4a4368235)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.778
      maxLongitude: -149.371
      maxTime: '2002-02-04T23:36:00.000000000'
      minLatitude: 53.904
      minLongitude: -166.012
      minTime: '2001-07-29T22:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/23929_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24036_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8b708e55ed82fa5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1c36bbfade44debf)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0de2aab42814e52b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.581
      maxLongitude: -146.898
      maxTime: '2002-05-21T22:47:00.000000000'
      minLatitude: 47.643
      minLongitude: -187.935
      minTime: '2001-07-28T01:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/24036_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24053_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc054a9521566f9d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2ce82556019451a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(55982948568648da)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.319
      maxLongitude: -147.158
      maxTime: '2002-01-25T23:46:00.000000000'
      minLatitude: 49.013
      minLongitude: -183.06
      minTime: '2001-07-25T02:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/24053_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24210_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(350eca6332ff2ab9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(44a3185b2babf16b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(31ececf20c79a729)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.711
      maxLongitude: -149.34
      maxTime: '2001-10-27T05:01:00.000000000'
      minLatitude: 56.405
      minLongitude: -153.543
      minTime: '2001-07-28T02:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/24210_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24213_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a2ffad98aebaed38)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d44458e870664e6a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(48d505bac2baf336)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 53.194
      maxLongitude: -166.746
      maxTime: '2002-10-14T22:54:00.000000000'
      minLatitude: 49.265
      minLongitude: -184.852
      minTime: '2001-10-15T13:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/24213_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  242ec546d8cf74f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6228a46f1542d7fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(baf3303915ec70bf)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  243fc67a903321b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4e1fad2dbeff92)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  244975b7b634eff7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ad9cbf6d4f6a04e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  248c060c4d37eda8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c765913753fdc60c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24b87d5dbd31fb37:
    kwargs:
      data: '{data(f322e7ec754b22df)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  24c8c7a55b49c129:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc77ab8ed218da5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24d038e5e10d8eb5:
    kwargs:
      data: '{data(0d7cb5a4936d55c3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  24e18da3d55eb6b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(321395f9af64b596)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  24f35e9ae485cece:
    kwargs:
      data: '{data(aa235429a5480cd2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2504f455a32fb9ff:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b995ce0af0093c1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(39f77c4dab885ca8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2535b3c8ccc75d61:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(efa803af793c98be)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(632e9d8c088da4d7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  253a6309e6941152:
    kwargs:
      data: '{data(23b562343e50b833)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2573f0d3835ca5c3:
    kwargs:
      data: '{data(00b3fcd6bb9c1bf3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  259d97d266112b5e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a8dcf523b2a4cea)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  25c8848759391245:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1812975572f1d5bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  25dc739cf029dac0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ad9cbf6d4f6a04e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(87d6d19b4280be9f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  25f0fe0cd02f9e0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c79d04a524b5c5be)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  26127c69762d3dfc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b5b390bb67fad601)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  261db4505d5a1a19:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c4cc5a9e3a9a1db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  263fbb0838fbace0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  26403cfba12360d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b6d7c50de1c9c70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2667ebd9fffc2ea7:
    kwargs:
      data: '{data(4eb8e54b95d94e5c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2695fddda54c399e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  26d60fbda9af5139:
    kwargs:
      data: '{data(bf36c09e30a4352a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2776e29fa68ea5fc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ba79761b1ee2f32)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2eeac3bd535ab9a9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  279b7e152f11b08e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a535e1e3bcb82e23)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  279d34b46f70dcc3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3eb8fcf610bf0302)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  27ea2956b3f22aac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28209e334a931e46:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b7ecf297cabbbab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2833e99d2c8e4ef4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(729240dffbba06bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2841cd07e060185f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ede12653a2d9a984)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28516b7a21631488:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2851f7aa9a20bb4e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c1c99e5c55447fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2886bea5055a1ce6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  28f16e461659b5a9:
    kwargs:
      data: '{data(65680b22f1e65dca)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  29057_y2000:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5202fa9e9716d75e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ab32514241cc971a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(97ea809ac211ab1c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.294
      maxLongitude: -165.698
      maxTime: '2000-05-11T18:45:00.000000000'
      minLatitude: 54.482
      minLongitude: -170.373
      minTime: '2000-03-06T00:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2000/29057_y2000.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29347_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd42489261ae92c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b61e59eb8583d9b1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(703579af77b07be2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.668
      maxLongitude: -169.924
      maxTime: '2002-01-09T08:21:00.000000000'
      minLatitude: 55.906
      minLongitude: -188.606
      minTime: '2001-05-31T20:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/29347_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29348_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e0508459c161894)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c0a165595b9df657)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4f68605b88369579)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.809
      maxLongitude: -168.96
      maxTime: '2001-09-20T04:05:00.000000000'
      minLatitude: 55.703
      minLongitude: -176.578
      minTime: '2001-06-05T06:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/29348_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29349_y2001:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a143f47e1c9f2a1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(19ed4d956833786b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0de032fc615303df)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.684
      maxLongitude: -169.283
      maxTime: '2002-01-03T19:26:00.000000000'
      minLatitude: 55.465
      minLongitude: -190.255
      minTime: '2001-05-31T08:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2001/29349_y2001.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  293fd947137e2708:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b1e358e31f7b3093)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  295c253f559eb863:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e5a9a59f3f076553)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  296753692a4c39d5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34be537f7bb52f56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29c46a429a759b74:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39d863e26a959ef2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(03a409de27f9323c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29eed688142b5c67:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29efadf4ccc184b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  29f77920074cbd7d:
    kwargs:
      data: '{data(48165b0ea9a220cc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2a3d7ddc614a1c11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6363a37aacd6c8ee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2a53b294705d97d6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a8c978a5f4f5a1b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(04ff4d4cd33dc50c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2a7d0928ea717952:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ad8bcaeada467c8:
    kwargs:
      data: '{data(337a30c5cd6e07c5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2b4011bbb2972ca6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(767dd086738de4ca)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2b4534967f718fd7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(396f5cdb11fe537f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2b4c6467689b6d68:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16787c161d9d4762)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(140e9fef275854ff)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2b8b06e9032171f3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a550f733380e9553)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(475f63d3321619e1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ba5190ebd9fee3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ba9f2c3ef3d9424:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2bd9aef728d96140:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c80db9126533fda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c0d8b1cf9bafb7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c76b2afe867c1c9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2ebdac3934d565e8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c1c99e5c55447fa:
    kwargs:
      data: '{data(59f151772543ccc9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2c213ccedcc90938:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab73c49b62712bb7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c320b45b4cafb24:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a5fc5989abdf4773)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c3a8ac60ef28b68:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c5bb7042b9b16f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d9ac4c1147914815)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2c9cb812473226e3:
    kwargs:
      data: '{data(4a0962f0a7947f5a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2ce82556019451a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc054a9521566f9d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2d06ec2b6f66165c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3acdf3d9cb324a44)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f5a31629a95e476a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2d74a9f7ae7402ad:
    kwargs:
      data: '{data(2142fb3dc2edd046)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2d96cba3d1d5ea8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2dc6cf99135feb38:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43cbff890c4c1dde)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e01e21a98eb55ba:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24f35e9ae485cece)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e15d8c48f5b113c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(974f37ce73bcf080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e1d481b19f7c29b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e313087e6b19cee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e340643328a2234:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2e69ee0462fd3223:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2eb450c0e5157d9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ebdac3934d565e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c76b2afe867c1c9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ec132b587e4ef3a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6fd9537abfec595f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4ef018886f253039)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ec20de02f02f488:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ba9bc16612ebae58)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ed26458e42c05b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c8812acb8be2b8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b856e86243cc561b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2eeac3bd535ab9a9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ba79761b1ee2f32)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2eeeb27127c19fbc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a59494d28584151)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2eeeef481e142bb3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e21b336cbdb75dd3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2ef3310a90aef9c2:
    kwargs:
      data: '{data(d9dd67e782bc96eb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2f0bfc219c822a09:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f1e944c8d81069b:
    kwargs:
      data: '{data(0cb28df99919fb72)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2f316ef078c673d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34be537f7bb52f56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3580d1c6b189302f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f4b0b9200d6e88a:
    kwargs:
      data: '{data(f4d643651dc14c5a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  2f4e40a9471615ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c010d4f3d384491e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f7e73fe5a4d0920:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee5c27f9a78319b0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(930efc02291dbdae)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2f9954c72211fb05:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(071a9a6e916e5f3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(756de0dca7fdae48)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  2fc56c4f4d32d5b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(350eca6332ff2ab9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3004644ee834bbae:
    kwargs:
      data: '{data(95572cd2add32005)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3060da18e2ab664e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  30b2d9d3a356a7f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31109fe3a613fd59:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(22c4f9aab289660f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31355422187bd160:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31820af44817fb57:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8b7ac0b7326e8f6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(40ccc8fc23431dbd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31b8544aaafd7805:
    kwargs:
      data: '{data(d33d509135d4bf61)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  31bf3ba3c290a9cf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(aad1e4f03eab3e9a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31e8cd73a4182349:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a5fc5989abdf4773)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  31ececf20c79a729:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(350eca6332ff2ab9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2fc56c4f4d32d5b6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  321395f9af64b596:
    kwargs:
      data: '{data(ff3f24f5b366f729)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3262e716c2a1e6bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4f2582fe762df1bb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3271d25698b61ee2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3276e6180de311d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(708014282ef8d6ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3292749153fc569a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c5ac557304185d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  32a3fb8e1ee8074b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  32df5a3ba3fda88d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c9aab4739be933b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  32ecd4924d2ec98f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  330550442934727d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5799ce936b7b8fc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33314afc63d93b1e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33813f97313d16b6:
    kwargs:
      data: '{data(e6aa09994fce14ea)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  33b0950c152f6306:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33dc19b93127c57b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dfcf973a30c5a20)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  33f247f329ec2f3b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  341826e26d9bb71e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fb1551a6f8f09650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34239_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6d251e5b7efa3a74)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(48ff6de65a8a4131)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(df3ebfaf0fafc832)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.859
      maxLongitude: -144.539
      maxTime: '2002-04-12T18:15:00.000000000'
      minLatitude: 58.776
      minLongitude: -148.883
      minTime: '2002-03-19T20:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34239_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34240_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7431efd40a2967a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(75ecc58b6546e76d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(22a06b5f10bf4438)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.839
      maxLongitude: -144.537
      maxTime: '2002-05-06T04:51:00.000000000'
      minLatitude: 57.14
      minLongitude: -148.544
      minTime: '2002-03-19T20:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34240_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34241_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1726ec4beefb876d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(49c7016e8ea5e504)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6ac4a537f494cb97)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.857
      maxLongitude: -144.501
      maxTime: '2002-07-11T05:55:00.000000000'
      minLatitude: 55.826
      minLongitude: -155.283
      minTime: '2002-03-19T18:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34241_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34242_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5799ce936b7b8fc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(330550442934727d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eeda4a7cbf5bafe7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.776
      maxLongitude: -166.284
      maxTime: '2002-10-22T04:16:00.000000000'
      minLatitude: 54.127
      minLongitude: -180.804
      minTime: '2002-04-04T00:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34242_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34243_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4e588221bd4da4f4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7bdc19c61648b45e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(677459b02d3e58c0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.324
      maxLongitude: -164.364
      maxTime: '2002-10-17T19:59:00.000000000'
      minLatitude: 54.1
      minLongitude: -174.844
      minTime: '2002-04-05T00:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34243_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34244_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05f5fcb1c1761a9a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(391bdbf93c389cf5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(14f3e4be86e8e096)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.934
      maxLongitude: -164.271
      maxTime: '2002-11-08T21:36:00.000000000'
      minLatitude: 54.336
      minLongitude: -174.736
      minTime: '2002-04-06T00:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34244_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34245_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6fd9537abfec595f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(38a483afd1f25ef2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2ec132b587e4ef3a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.857
      maxLongitude: -148.215
      maxTime: '2002-06-06T23:15:00.000000000'
      minLatitude: 56.654
      minLongitude: -156.858
      minTime: '2002-02-21T20:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34245_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34246_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8133f7dea72a14fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5dff736852a62ccd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(14ada17ddce94fd1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.01
      maxLongitude: -144.509
      maxTime: '2002-06-18T20:15:00.000000000'
      minLatitude: 58.929
      minLongitude: -152.916
      minTime: '2002-03-06T18:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34246_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34247_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ad8bcaeada467c8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d3d18e98b60ec6e7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(918ee7d3325cab26)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.921
      maxLongitude: -144.513
      maxTime: '2002-09-25T04:44:00.000000000'
      minLatitude: 54.032
      minLongitude: -159.851
      minTime: '2002-03-06T18:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34247_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34248_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(708014282ef8d6ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3276e6180de311d4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f10461e1f7f62abb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.553
      maxLongitude: -149.153
      maxTime: '2002-06-29T22:38:00.000000000'
      minLatitude: 58.738
      minLongitude: -152.112
      minTime: '2002-06-04T10:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34248_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34249_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(70f5a0b945bbb088)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(460da74432ff2f02)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1f86403beabb3ce0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.435
      maxLongitude: -148.84
      maxTime: '2002-12-21T16:19:00.000000000'
      minLatitude: 54.174
      minLongitude: -163.041
      minTime: '2002-06-04T10:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34249_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34250_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57c8ae47470e59bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(12c2c07c89d35ff8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(03d10499d1fd405b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.137
      maxLongitude: -148.738
      maxTime: '2002-10-05T14:35:00.000000000'
      minLatitude: 56.055
      minLongitude: -155.869
      minTime: '2002-06-04T05:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34250_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34251_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1ef9d313c590b2cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8ca266193b6200dd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(13afba552bd39a49)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.207
      maxLongitude: -146.508
      maxTime: '2002-05-28T14:57:00.000000000'
      minLatitude: 57.998
      minLongitude: -147.796
      minTime: '2002-05-19T13:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34251_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34287_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fe2fda28678681b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(82eb2f9ca3e6b972)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ced6bfbb382ad9b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.416
      maxLongitude: -147.092
      maxTime: '2002-11-06T01:47:00.000000000'
      minLatitude: 57.935
      minLongitude: -152.357
      minTime: '2002-06-29T17:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34287_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34288_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7251589b2f8bcae5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d03e1820cbdd6d08)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(df44d03b28849766)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.58
      maxLongitude: -148.572
      maxTime: '2003-01-08T07:11:00.000000000'
      minLatitude: 53.085
      minLongitude: -167.875
      minTime: '2002-06-06T23:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34288_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34291_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43cbff890c4c1dde)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(885f2b5d399ab11c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(959078813e52974d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.333
      maxLongitude: -148.915
      maxTime: '2002-04-22T05:14:00.000000000'
      minLatitude: 56.391
      minLongitude: -157.323
      minTime: '2002-02-22T06:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34291_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34292_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaad6ffce65f4afb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(56d0037c6fd0ed33)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb5700e85eca539e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.746
      maxLongitude: -161.826
      maxTime: '2002-10-15T22:38:00.000000000'
      minLatitude: 55.471
      minLongitude: -163.731
      minTime: '2002-04-18T00:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34292_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34293_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb33a61662366e9b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bff2c37e2677667e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(679d38fd2750c04c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.656
      maxLongitude: -165.266
      maxTime: '2002-04-27T12:15:00.000000000'
      minLatitude: 54.265
      minLongitude: -169.56
      minTime: '2002-02-19T17:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/34293_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  347aaefc419ae03f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(348f2de370f97ccc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  '3484164830153054':
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  348f2de370f97ccc:
    kwargs:
      data: '{data(2548e870f29d4bbf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  34b4bf14f1662143:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0c81ce6f7e5fae66)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  34be537f7bb52f56:
    kwargs:
      data: '{data(670fda776db0c1ec)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  34f17f5c14e599e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c363aecdcda24831)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  350eca6332ff2ab9:
    kwargs:
      data: '{data(5116039b01504983)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3521cef9d9a3b83d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(107c5e6592bed848)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  35743bb3b8ae22fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(faf4c6521c9c135e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bc8a14d2cb1168b1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3580d1c6b189302f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34be537f7bb52f56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3582f3e1b100e355:
    kwargs:
      data: '{data(57a3bec617c5d194)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  359315982a768081:
    kwargs:
      data: '{data(83c913457dcfe897)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  359b0a8ee84b8b2c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(12d4628a3a1542a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6f5b86fdb0709617)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  35ccffba98403f1f:
    kwargs:
      data: '{data(f91e92c0070401e2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  360500e4401b094f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6f0f3984262ce5c2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36246_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(861e0314015e36bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c0a30ebe6e785f8c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(97aa6f5d7e7471c8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 52.368
      maxLongitude: -169.829
      maxTime: '2002-11-29T02:15:00.000000000'
      minLatitude: 47.985
      minLongitude: -188.158
      minTime: '2002-05-15T01:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36246_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36247_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4d0818999effb26e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c08f73fe22636b0f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6e97b158a282357b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 51.838
      maxLongitude: -172.376
      maxTime: '2002-11-26T15:08:00.000000000'
      minLatitude: 45.033
      minLongitude: -189.136
      minTime: '2002-05-15T01:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36247_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36248_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e544bef5cbbd70f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(eaf1dfb8edab9e44)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ee7f74bea7088e51)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.73
      maxLongitude: -164.702
      maxTime: '2002-11-24T18:31:00.000000000'
      minLatitude: 53.817
      minLongitude: -175.467
      minTime: '2002-05-14T22:26:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36248_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36249_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0bf1f0ded454dd68)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(09ecfae7c54635be)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(10725ad2551e49e2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 52.562
      maxLongitude: -173.083
      maxTime: '2002-09-04T07:55:00.000000000'
      minLatitude: 50.054
      minLongitude: -177.028
      minTime: '2002-05-15T01:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36249_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36250_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94c4aab56cf39408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(101b5b902a2e2fae)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b23a02beddcfabe3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.685
      maxLongitude: -164.918
      maxTime: '2002-06-22T17:06:00.000000000'
      minLatitude: 52.449
      minLongitude: -171.519
      minTime: '2002-05-15T01:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36250_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36251_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(61433728bf950915)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(109dc57c540b1f4c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f256c4dd9a2fbfbd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.735
      maxLongitude: -172.391
      maxTime: '2002-11-29T21:07:00.000000000'
      minLatitude: 51.814
      minLongitude: -181.501
      minTime: '2002-05-15T01:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36251_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36252_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6c32f3b93ebbfb3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6f3ca51edc9389b9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1b14f84bbc770fa9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.481
      maxLongitude: -151.426
      maxTime: '2002-12-31T20:45:00.000000000'
      minLatitude: 53.779
      minLongitude: -166.623
      minTime: '2002-08-29T05:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36252_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36253_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0467b7fc964c489)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(14b02732af2f72ef)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(60503df8bd6b2b6f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.87
      maxLongitude: -152.263
      maxTime: '2002-12-17T21:13:00.000000000'
      minLatitude: 53.911
      minLongitude: -166.157
      minTime: '2002-08-30T11:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36253_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36254_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4438d335c280ccb9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4fc6093b9d4ac9cb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.341
      maxLongitude: -148.941
      maxTime: '2003-09-22T12:35:00.000000000'
      minLatitude: 59.246
      minLongitude: -149.572
      minTime: '2003-09-16T17:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/36254_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36255_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c8812acb8be2b8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0ed40d349a9c9aea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2ed26458e42c05b3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.606
      maxLongitude: -148.891
      maxTime: '2002-09-12T04:48:00.000000000'
      minLatitude: 58.571
      minLongitude: -151.748
      minTime: '2002-07-26T01:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36255_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36256_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(20fd0dda9a6b4d88)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cc98aed50add4eee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(918b6b0396954a6f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.27
      maxLongitude: -142.507
      maxTime: '2002-09-14T02:23:00.000000000'
      minLatitude: 59.712
      minLongitude: -147.874
      minTime: '2002-07-20T20:12:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36256_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36257_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c5ac557304185d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bb974dd3124ebe5d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(508e44e244e6e20b)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.244
      maxLongitude: -142.57
      maxTime: '2003-02-15T19:26:00.000000000'
      minLatitude: 57.462
      minLongitude: -155.129
      minTime: '2002-07-20T21:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36257_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36258_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(08f7507254f0778f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4b8deb5480f4a115)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ef22fbf8fbb76f78)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.872
      maxLongitude: -151.966
      maxTime: '2002-11-08T05:57:00.000000000'
      minLatitude: 53.521
      minLongitude: -166.118
      minTime: '2002-08-17T01:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36258_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36259_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(67791a31703de2a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(868b90db26d71604)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(89a9ec022887debe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.134
      maxLongitude: -150.99
      maxTime: '2002-10-25T06:27:00.000000000'
      minLatitude: 57.417
      minLongitude: -152.187
      minTime: '2002-08-21T01:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36259_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36260_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1bece231ebf0c184)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(37e28c53eaa2db93)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c0ca7278ee644331)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.491
      maxLongitude: -151.409
      maxTime: '2002-12-31T16:59:00.000000000'
      minLatitude: 47.91
      minLongitude: -178.852
      minTime: '2002-08-21T00:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36260_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36261_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5a298a4795cf2ca4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1ba6a8c6ef74611b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f9592e2e42437228)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.843
      maxLongitude: -147.945
      maxTime: '2002-09-08T18:31:00.000000000'
      minLatitude: 52.658
      minLongitude: -169.251
      minTime: '2002-06-01T18:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36261_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36262_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(321395f9af64b596)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6f9ff08119c0aafd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c62cd9159417f83e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.36
      maxLongitude: -145.994
      maxTime: '2002-12-27T19:01:00.000000000'
      minLatitude: 49.709
      minLongitude: -171.0
      minTime: '2002-06-03T05:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36262_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36263_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0641fd6557ad9d0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a59227cfda19f107)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7bf3ce7f24133ac2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.747
      maxLongitude: -147.597
      maxTime: '2002-12-22T07:09:00.000000000'
      minLatitude: 54.832
      minLongitude: -161.82
      minTime: '2002-06-02T04:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36263_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36264_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee5c27f9a78319b0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4ec9ba3d22ff123a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2f7e73fe5a4d0920)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.885
      maxLongitude: -166.27
      maxTime: '2002-12-16T02:51:00.000000000'
      minLatitude: 52.106
      minLongitude: -172.552
      minTime: '2002-06-05T20:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36264_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36265_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e21b336cbdb75dd3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2eeeef481e142bb3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fbb11962de937db6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.335
      maxLongitude: -166.016
      maxTime: '2002-10-05T21:19:00.000000000'
      minLatitude: 51.257
      minLongitude: -172.818
      minTime: '2002-06-08T16:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36265_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36267_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f1e944c8d81069b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c1575348dfe4cace)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(21f225f25de81108)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.457
      maxLongitude: -148.501
      maxTime: '2002-11-13T17:50:00.000000000'
      minLatitude: 54.456
      minLongitude: -162.104
      minTime: '2002-07-25T22:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36267_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36268_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(514b08322803c977)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6447b0c5773d1085)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(af4cf2e3fba4b4ec)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.608
      maxLongitude: -148.934
      maxTime: '2002-11-05T22:10:00.000000000'
      minLatitude: 56.401
      minLongitude: -154.613
      minTime: '2002-07-25T19:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36268_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36269_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560b3822db531cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(061fb548589affc3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cba38ccb38ed1417)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.983
      maxLongitude: -139.967
      maxTime: '2002-10-10T23:36:00.000000000'
      minLatitude: 57.912
      minLongitude: -153.927
      minTime: '2002-07-17T20:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36269_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36270_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42f3913a3535171d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(59df5bba481a52ff)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1e956ca80c4e70fa)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.805
      maxLongitude: -139.938
      maxTime: '2002-09-18T21:11:00.000000000'
      minLatitude: 59.461
      minLongitude: -147.998
      minTime: '2002-07-17T17:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/36270_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3688548c404e9a1f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7bbc38361b15302)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  368edb33ed44e4a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3697aad041628e60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a329f87ce5cc05f1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36c093a75c403e79:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(974f37ce73bcf080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  36d2c15488d05074:
    kwargs:
      data: '{data(39c4740148c912a9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  36e32e652f7ba1e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37474_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(15cdf50f8c438828)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d9b09030e1d69a46)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3dc8c36245f74bf0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.636
      maxLongitude: -149.424
      maxTime: '2004-05-26T10:56:00.000000000'
      minLatitude: 53.736
      minLongitude: -188.627
      minTime: '2002-10-02T11:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37474_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37475_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(810a25f505c93245)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(474e4ac349a0e1a8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4fef3942bfa16b83)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.573
      maxLongitude: -149.208
      maxTime: '2003-12-31T12:11:00.000000000'
      minLatitude: 53.92
      minLongitude: -165.531
      minTime: '2002-10-01T21:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37475_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37476_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00b7a4be66bedb13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(490fd0f47e866cf8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b461de7b372d143)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.275
      maxLongitude: -147.676
      maxTime: '2002-10-30T04:29:00.000000000'
      minLatitude: 56.83
      minLongitude: -153.526
      minTime: '2002-09-30T12:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37476_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37477_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(faf4c6521c9c135e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f61b77a48faa00bd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(35743bb3b8ae22fe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.286
      maxLongitude: -148.693
      maxTime: '2003-04-25T17:18:00.000000000'
      minLatitude: 50.941
      minLongitude: -190.549
      minTime: '2002-09-28T05:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37477_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37478_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5434ea08699f30b8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(545ac8e9cdc232fe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.062
      maxLongitude: -164.791
      maxTime: '2003-12-21T05:22:00.000000000'
      minLatitude: 54.326
      minLongitude: -171.427
      minTime: '2003-03-02T15:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37478_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37479_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dfcf973a30c5a20)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(664a59c605b9773c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(efd24f2aeae915ae)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.501
      maxLongitude: -149.883
      maxTime: '2002-12-06T05:03:00.000000000'
      minLatitude: 57.273
      minLongitude: -152.559
      minTime: '2002-10-06T12:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37479_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37480_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52c8fd8e2e3a139d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(728cb9d87909cd69)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e82a54fe3b899e63)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.678
      maxLongitude: -149.34
      maxTime: '2003-01-22T03:24:00.000000000'
      minLatitude: 54.029
      minLongitude: -164.193
      minTime: '2002-10-04T20:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37480_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37483_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e257cc20ef178176)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ac4049141ce0ac3c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f8bc80d0a88a97ee)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.0
      maxLongitude: -148.897
      maxTime: '2003-03-30T17:41:00.000000000'
      minLatitude: 55.684
      minLongitude: -158.812
      minTime: '2002-10-07T10:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37483_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37484_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0911090798d5f6ed)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b4bc96ad835b5b75)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.244
      maxLongitude: -148.693
      maxTime: '2003-05-03T05:37:00.000000000'
      minLatitude: 58.969
      minLongitude: -151.612
      minTime: '2003-04-21T05:19:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37484_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37485_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(43c59afe0b957792)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fa10379fd08c7bf2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.945
      maxLongitude: -149.172
      maxTime: '2003-12-04T10:03:00.000000000'
      minLatitude: 54.042
      minLongitude: -165.856
      minTime: '2003-04-22T00:33:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37485_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37486_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(aad962bed8775b7e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(412e06b90698b81a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.99
      maxLongitude: -149.399
      maxTime: '2003-10-01T22:30:00.000000000'
      minLatitude: 58.281
      minLongitude: -154.134
      minTime: '2003-07-29T18:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37486_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37487_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(771172bf8619cca9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f1ac305022835369)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.528
      maxLongitude: -149.182
      maxTime: '2004-04-02T09:41:00.000000000'
      minLatitude: 54.196
      minLongitude: -172.891
      minTime: '2003-04-24T05:46:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37487_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37488_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0b634f570fa1bae1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(31bf3ba3c290a9cf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.129
      maxLongitude: -148.699
      maxTime: '2003-09-18T13:20:00.000000000'
      minLatitude: 59.051
      minLongitude: -148.773
      minTime: '2003-09-16T17:02:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37488_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37489_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b901c5b56795a406)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(580bf62b45a2cce0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.782
      maxLongitude: -159.125
      maxTime: '2003-07-16T18:42:00.000000000'
      minLatitude: 56.498
      minLongitude: -160.193
      minTime: '2003-05-21T14:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37489_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37490_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a959400d06b1c037)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(44e82e61806f53ad)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.687
      maxLongitude: -148.639
      maxTime: '2003-05-20T00:22:00.000000000'
      minLatitude: 58.936
      minLongitude: -151.645
      minTime: '2003-04-24T10:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37490_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37491_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(12ba053feacd681a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d091f8eed924d03a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.284
      maxLongitude: -148.855
      maxTime: '2003-12-31T20:20:00.000000000'
      minLatitude: 51.505
      minLongitude: -164.028
      minTime: '2003-02-26T04:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37491_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37492_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(68ad5243704e8445)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7b463f6d12f50410)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.182
      maxLongitude: -139.597
      maxTime: '2004-12-30T14:56:00.000000000'
      minLatitude: 47.783
      minLongitude: -194.968
      minTime: '2003-05-12T23:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37492_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37493_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5a3694489e208c73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(58a8bb0ca00e89f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.374
      maxLongitude: -144.587
      maxTime: '2003-12-31T20:21:00.000000000'
      minLatitude: 50.929
      minLongitude: -164.241
      minTime: '2003-05-03T10:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37493_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37494_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7fbed37203dc7093)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7470723088102b64)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.007
      maxLongitude: -148.779
      maxTime: '2004-04-07T11:09:00.000000000'
      minLatitude: 51.742
      minLongitude: -179.516
      minTime: '2003-07-29T03:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37494_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37495_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ae26a27a165d8c5a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(969364ecce1ca069)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.267
      maxLongitude: -148.375
      maxTime: '2003-11-14T02:08:00.000000000'
      minLatitude: 50.588
      minLongitude: -168.417
      minTime: '2003-02-25T23:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37495_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37496_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dda2b94dc47eeebd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6dd427b0fdef56da)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.512
      maxLongitude: -148.988
      maxTime: '2004-06-02T08:15:00.000000000'
      minLatitude: 53.719
      minLongitude: -164.558
      minTime: '2003-07-29T11:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37496_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37497_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e2d6c1f2a4d3137b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2c5bb7042b9b16f2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.966
      maxLongitude: -147.58
      maxTime: '2004-09-30T02:54:00.000000000'
      minLatitude: 53.846
      minLongitude: -183.547
      minTime: '2003-05-16T05:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37497_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37498_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ed39615a5140eb73)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(61d67af49a69df91)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.287
      maxLongitude: -148.876
      maxTime: '2003-12-31T20:27:00.000000000'
      minLatitude: 55.662
      minLongitude: -156.949
      minTime: '2003-09-20T16:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37498_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37499_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6dd27e173d782e11)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e6c8ced76db35bb2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.596
      maxLongitude: -146.843
      maxTime: '2004-11-06T00:33:00.000000000'
      minLatitude: 53.934
      minLongitude: -169.15
      minTime: '2003-09-27T05:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37499_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37500_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6249b4abe6f36f61)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4e3ded9df2f00a6a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.886
      maxLongitude: -138.626
      maxTime: '2003-11-07T03:35:00.000000000'
      minLatitude: 56.493
      minLongitude: -154.406
      minTime: '2003-05-13T05:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37500_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37501_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7012f309131ff542)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c5dc7774d005f8f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.646
      maxLongitude: -149.216
      maxTime: '2004-09-02T15:44:00.000000000'
      minLatitude: 53.922
      minLongitude: -170.843
      minTime: '2003-09-20T04:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37501_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37502_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6446be9c7acecb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7cfb93620b57d9f3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(799eae5517c6b2dc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.218
      maxLongitude: -144.508
      maxTime: '2003-01-17T15:26:00.000000000'
      minLatitude: 57.052
      minLongitude: -156.13
      minTime: '2002-11-09T20:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37502_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37504_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(48d29f6d44e5504c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4d90516b0d23d8f7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.033
      maxLongitude: -145.37
      maxTime: '2005-01-12T09:57:00.000000000'
      minLatitude: 52.061
      minLongitude: -196.783
      minTime: '2003-05-15T11:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37504_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37505_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5b8418d4f59d23d7)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b687b1a757f2cb6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.651
      maxLongitude: -149.46
      maxTime: '2005-02-07T03:17:00.000000000'
      minLatitude: 53.864
      minLongitude: -171.908
      minTime: '2003-05-11T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37505_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37506_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3abb4b90235b126c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(efc75197fa677c94)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.145
      maxLongitude: -148.659
      maxTime: '2003-10-16T00:57:00.000000000'
      minLatitude: 57.368
      minLongitude: -156.112
      minTime: '2003-09-16T15:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37506_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37507_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3484164830153054)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(752fd5b572ea6c2d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.792
      maxLongitude: -144.635
      maxTime: '2003-11-07T10:36:00.000000000'
      minLatitude: 59.198
      minLongitude: -150.85
      minTime: '2003-08-04T00:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37507_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37508_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2695fddda54c399e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(713be3148cbec1ec)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.604
      maxLongitude: -154.564
      maxTime: '2003-12-08T16:30:00.000000000'
      minLatitude: 55.719
      minLongitude: -156.607
      minTime: '2003-07-01T08:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37508_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37509_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9f0b74da7ae23f97)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c73eeb774c7d76a5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.688
      maxLongitude: -149.31
      maxTime: '2003-05-05T16:53:00.000000000'
      minLatitude: 59.038
      minLongitude: -151.299
      minTime: '2003-04-23T19:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37509_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37510_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(92e3a3e4ad9ec85f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5178ea118ec51069)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.975
      maxLongitude: -147.445
      maxTime: '2004-07-19T00:41:00.000000000'
      minLatitude: 52.172
      minLongitude: -190.305
      minTime: '2003-02-26T00:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37510_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37511_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fb7ed8a25a707281)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0703c406133ff3e9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.312
      maxLongitude: -144.525
      maxTime: '2005-01-22T01:18:00.000000000'
      minLatitude: 53.806
      minLongitude: -178.727
      minTime: '2003-05-02T04:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37511_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37512_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b1911eb62a7d1e98)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(279d34b46f70dcc3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.702
      maxLongitude: -148.652
      maxTime: '2004-12-19T23:34:00.000000000'
      minLatitude: 52.365
      minLongitude: -178.568
      minTime: '2003-04-21T19:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37512_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37513_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(221842e6b2de8092)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f819ac9be7e26dbe)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.622
      maxLongitude: -154.994
      maxTime: '2003-07-20T05:05:00.000000000'
      minLatitude: 56.608
      minLongitude: -157.179
      minTime: '2003-07-01T08:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37513_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37514_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e91da9a59154c53a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(caa174644edc776a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.322
      maxLongitude: -147.651
      maxTime: '2003-10-19T07:40:00.000000000'
      minLatitude: 53.198
      minLongitude: -167.928
      minTime: '2003-02-25T17:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37514_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37515_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63a3b7d96dc3543e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e539ac9543c5b805)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5e5786336be6f313)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.313
      maxLongitude: -148.804
      maxTime: '2002-11-05T23:47:00.000000000'
      minLatitude: 56.892
      minLongitude: -156.614
      minTime: '2002-09-28T10:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37515_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37516_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4cd11f8f1a4946d8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ce3011d994957ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.75
      maxLongitude: -146.781
      maxTime: '2005-02-03T22:59:00.000000000'
      minLatitude: 48.601
      minLongitude: -201.051
      minTime: '2003-09-26T19:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37516_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37517_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0161cdea0006e8d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5d79ef1d03ac8b51)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(192570bb8fc324bc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.305
      maxLongitude: -151.058
      maxTime: '2002-10-29T03:10:00.000000000'
      minLatitude: 56.426
      minLongitude: -157.299
      minTime: '2002-09-26T21:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37517_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37518_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(384e1dce169d2dcb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b08473a1ca92032f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f6f677e9a58b2562)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.91
      maxLongitude: -149.315
      maxTime: '2003-01-28T15:04:00.000000000'
      minLatitude: 54.018
      minLongitude: -165.506
      minTime: '2002-10-04T21:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37518_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37519_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(464505f3aaa7c8b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(121b5bc4a144cb54)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e098c446be2a3f64)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.971
      maxLongitude: -150.144
      maxTime: '2002-11-29T06:10:00.000000000'
      minLatitude: 55.415
      minLongitude: -159.89
      minTime: '2002-09-27T02:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37519_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37520_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(3fe4fc36a9e4088e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c42a71144fc56eda)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.286
      maxLongitude: -159.08
      maxTime: '2003-12-31T09:52:00.000000000'
      minLatitude: 56.982
      minLongitude: -163.266
      minTime: '2003-05-21T10:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/37520_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37521_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(34be537f7bb52f56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(296753692a4c39d5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2f316ef078c673d1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.144
      maxLongitude: -144.544
      maxTime: '2002-11-22T22:21:00.000000000'
      minLatitude: 59.66
      minLongitude: -146.01
      minTime: '2002-11-09T21:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37521_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37522_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9ac7a9b9c6190b55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ec98d74c47f47944)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(04016ea165d02111)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.289
      maxLongitude: -147.708
      maxTime: '2002-11-07T04:41:00.000000000'
      minLatitude: 56.445
      minLongitude: -153.86
      minTime: '2002-09-30T12:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37522_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37523_y2002:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fe2092b780591500)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(bc496e864a333582)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a506c337ce073c39)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.302
      maxLongitude: -148.96
      maxTime: '2003-09-09T23:04:00.000000000'
      minLatitude: 50.655
      minLongitude: -184.751
      minTime: '2002-10-03T05:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2002/37523_y2002.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  379e62bd94ea4140:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecb2068a00f90a50)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37a890878694635c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b5b390bb67fad601)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37e28c53eaa2db93:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1bece231ebf0c184)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  37f1e80a857868a6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  380e0e756e5a353b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c0d6d3b5fc825e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(711b2420c1f880c7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  38254232d734c3d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5a298a4795cf2ca4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3841888c25c2b905:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0467b7fc964c489)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  384e1dce169d2dcb:
    kwargs:
      data: '{data(0c8fb7f5c711a23b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  38a43b8f0406564d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a59494d28584151)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  38a483afd1f25ef2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6fd9537abfec595f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  38e2603589ec4cc9:
    kwargs:
      data: '{data(7bde7305d997be03)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  38ee1ac4f03189d5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f6f593402e75edb6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ada1219644dea4f5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  391bdbf93c389cf5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05f5fcb1c1761a9a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  392fdb2b07df4b67:
    kwargs:
      data: '{data(ab51e475dfe6ee79)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  396d06317dfd1f44:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(78d21cd77cf60096)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  396f5cdb11fe537f:
    kwargs:
      data: '{data(88ada60fa0712c29)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  39953caf4ab13eea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8af333b6a7f54f05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1e92700b8d918d16)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  39b601d496ca66a9:
    kwargs:
      data: '{data(6280061551197bd3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  39d863e26a959ef2:
    kwargs:
      data: '{data(63a90eb821a5866c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  39f5720bc8eeddb9:
    kwargs:
      data: '{data(8e117a800072c7e8)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  39f77c4dab885ca8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b995ce0af0093c1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3a013fac0287cd36:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(15cdf50f8c438828)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3a143f47e1c9f2a1:
    kwargs:
      data: '{data(63c16e565969ceae)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3a8f59233452374b:
    kwargs:
      data: '{data(81c9338428368d64)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3abb4b90235b126c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3acdf3d9cb324a44:
    kwargs:
      data: '{data(c340943f539ffcfd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3ae6c5d8333bcccf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c02d488c8c567b35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8d2c47fca47c01e6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3aecce85a44d6913:
    kwargs:
      data: '{data(512c16bd149ab159)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3af3b2ae4d17da51:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3b0ec0080f0810aa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a0038c4da421ac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4b48d0553c14c41)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3b1d041df62ae0ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3b4bdcc668a73c72:
    kwargs:
      data: '{data(dddabc704b7ad31e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3b6e34d0deeb1ea8:
    kwargs:
      data: '{data(d4f7f3367c757b6f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3bc4fee0107d8b82:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c2efd05ed55c9cd:
    kwargs:
      data: '{data(50d424c83354e4d9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3c3dacfddb8300f1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c7c919efb1d4cf03)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c661f592b41c012:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b87d5dbd31fb37)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3c82aba49f30f931:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3caee5808c240379:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e41363592d4b807)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3cc18ae82e3d4c16:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(617d54b5089cbc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3cd959b88b8f72cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05f5fcb1c1761a9a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3cdf92edbd5e4cd1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(193c972da3d2684b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(70e45c28d59e9980)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3d6e811458c634ae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(396f5cdb11fe537f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3d9ac131d4457e40:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3da4efd7554f48eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3b1d041df62ae0ca)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3dc8c36245f74bf0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(15cdf50f8c438828)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3a013fac0287cd36)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3dfcf973a30c5a20:
    kwargs:
      data: '{data(841285305c604f84)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3e4ad392c90ec964:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(78bbc95fa0560bed)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3e6f937eb342d566:
    kwargs:
      data: '{data(59a9be915087d77f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  3eb8fcf610bf0302:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3ebba5fce2106be4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(474267b1a94a51f7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3ee6063170da62a6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(840a5a22a5d75eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3f44ece9d917d1b4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(073e82c1a643718b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3fe30b2cc1dbf2ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  3fe4fc36a9e4088e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  400cccdb5d8b3f62:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6fbc67df22b9d52c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4044524a471afc3d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16787c161d9d4762)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  40644c563d353d3e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(482fa0bf78f5abb8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4081fbe01a5e6cc5:
    kwargs:
      data: '{data(ac36418ab78e519c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  409beefd8d411c10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dad27762e2324164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  409e220413baac56:
    kwargs:
      data: '{data(8b6a91a7a1286ac5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  40ccc8fc23431dbd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8b7ac0b7326e8f6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  40dd7a4685b85739:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  40fae301554e2e5f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  41180334c7e97cd9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ede12653a2d9a984)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  412e06b90698b81a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b7bf85b315fa5ddd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  41769d3f6dc07b74:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b6d7c50de1c9c70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  41c4f9fc533e25bc:
    kwargs:
      data: '{data(f7f2fa1cceb2908a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  420d994f8bccdadd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab73c49b62712bb7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a5351a2a817eb770)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  421a67232bcaee22:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  421c023e00dc2e83:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  428aa6589dc57fdd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f92b794921b9c58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42b95a37273ba198:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(67cca495bfc75d8f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42cb662ed02a3da0:
    kwargs:
      data: '{data(83fa802703858b8f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  42e21afe614a29a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6c6558e024a2bbd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6ba0858b4f7bd3b5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42ee777ee88bc9fb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6ce2465a0371721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  42f3913a3535171d:
    kwargs:
      data: '{data(b89388b57d490b07)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  430c524da1708138:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  433976e402292b8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c55ab1bc64e43b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4344242c41c6a389:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4364794110e12dfc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc1076544df2ecca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5c349e6ea5fa8980)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43698_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(715f9d7c308d2e06)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f0431bcba0e5f705)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.344
      maxLongitude: -147.956
      maxTime: '2005-11-15T23:56:00.000000000'
      minLatitude: 49.444
      minLongitude: -193.28
      minTime: '2004-07-10T07:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43698_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43700_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(843a0fac153389b5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '20'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(279b7e152f11b08e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.468
      maxLongitude: -149.619
      maxTime: '2005-05-08T22:56:00.000000000'
      minLatitude: 53.816
      minLongitude: -174.144
      minTime: '2004-09-15T05:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43700_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43701_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7a0a3f46896b9e1b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(42b95a37273ba198)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.917
      maxLongitude: -151.405
      maxTime: '2004-11-17T07:50:00.000000000'
      minLatitude: 54.596
      minLongitude: -159.69
      minTime: '2004-05-19T14:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43701_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43702_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(36e32e652f7ba1e6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d1dce7f7e1308447)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.886
      maxLongitude: -151.423
      maxTime: '2005-06-08T23:30:00.000000000'
      minLatitude: 49.61
      minLongitude: -169.696
      minTime: '2004-05-19T15:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43702_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43703_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(564bf1a793c7e050)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6085e2a338ba4fae)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.783
      maxLongitude: -148.871
      maxTime: '2004-05-02T06:38:00.000000000'
      minLatitude: 58.93
      minLongitude: -151.466
      minTime: '2004-04-13T00:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43703_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43704_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e0c2eb07df4355a4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1b502b2fd566c436)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.365
      maxLongitude: -148.756
      maxTime: '2004-06-15T14:01:00.000000000'
      minLatitude: 57.244
      minLongitude: -156.162
      minTime: '2004-04-11T00:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43704_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43705_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6d1ae81ef908e36f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bbc5a410956e5c8d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.012
      maxLongitude: -172.184
      maxTime: '2004-12-11T15:08:00.000000000'
      minLatitude: 62.194
      minLongitude: -175.023
      minTime: '2004-07-16T05:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43705_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43706_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ab090ce160185087)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(bb78762be7250ee2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.987
      maxLongitude: -171.281
      maxTime: '2005-02-06T17:26:00.000000000'
      minLatitude: 59.823
      minLongitude: -175.318
      minTime: '2004-07-15T02:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43706_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43707_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fa09fa8e02f6b638)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9a7129c4771ecc73)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.138
      maxLongitude: -146.05
      maxTime: '2005-06-12T18:43:00.000000000'
      minLatitude: 50.639
      minLongitude: -185.171
      minTime: '2004-04-11T14:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43707_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43709_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(621663a825f62870)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0a197043769fef5e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.628
      maxLongitude: -168.989
      maxTime: '2005-04-22T02:27:00.000000000'
      minLatitude: 56.454
      minLongitude: -175.301
      minTime: '2004-08-17T01:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43709_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43710_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b3fa5639c9ef34d0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d4140c7047b93bdb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.213
      maxLongitude: -167.303
      maxTime: '2005-04-11T23:44:00.000000000'
      minLatitude: 55.687
      minLongitude: -174.187
      minTime: '2004-08-06T00:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43710_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43711_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f812d0148fd7a701)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b0187c84a8767bac)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.206
      maxLongitude: -165.992
      maxTime: '2005-03-29T22:51:00.000000000'
      minLatitude: 56.444
      minLongitude: -170.748
      minTime: '2004-05-01T14:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43711_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43712_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ec5162a2ac58072e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6ea21513ce603b20)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.124
      maxLongitude: -165.171
      maxTime: '2005-04-09T20:35:00.000000000'
      minLatitude: 54.522
      minLongitude: -171.315
      minTime: '2004-05-03T07:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43712_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43713_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9defe4159bac54d0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(14af8ff9fc8336cf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.527
      maxLongitude: -149.775
      maxTime: '2005-03-09T00:37:00.000000000'
      minLatitude: 55.849
      minLongitude: -158.489
      minTime: '2004-07-14T15:14:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43713_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43714_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f60bd0231e907254)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01f971f30a4997e5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.311
      maxLongitude: -148.928
      maxTime: '2005-01-17T02:33:00.000000000'
      minLatitude: 52.568
      minLongitude: -169.594
      minTime: '2004-07-19T12:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43714_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43715_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5be560ec7f5ba45d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(845ea8f3781102bd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.363
      maxLongitude: -168.097
      maxTime: '2005-03-03T05:33:00.000000000'
      minLatitude: 55.446
      minLongitude: -175.87
      minTime: '2004-07-27T22:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43715_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43716_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(130abebf3380d6d1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4780a4694b871f44)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.523
      maxLongitude: -149.175
      maxTime: '2004-11-03T06:31:00.000000000'
      minLatitude: 55.186
      minLongitude: -159.329
      minTime: '2004-07-19T14:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43716_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43717_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7b982616cb3078e1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7037922f6a87f0ca)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.287
      maxLongitude: -144.488
      maxTime: '2006-09-23T08:30:00.000000000'
      minLatitude: 48.175
      minLongitude: -172.111
      minTime: '2004-05-16T04:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43717_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43718_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(892d5bcd1ec84e5b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0e2408e0005c72ef)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.543
      maxLongitude: -148.718
      maxTime: '2004-10-17T23:49:00.000000000'
      minLatitude: 54.21
      minLongitude: -162.746
      minTime: '2004-05-16T04:45:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43718_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43719_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(27ea2956b3f22aac)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(eeefb7f3b180666c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.479
      maxLongitude: -147.782
      maxTime: '2004-11-21T21:49:00.000000000'
      minLatitude: 53.916
      minLongitude: -155.797
      minTime: '2004-07-10T08:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43719_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43720_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8999b24776b87c11)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(295c253f559eb863)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.174
      maxLongitude: -145.453
      maxTime: '2004-11-14T01:20:00.000000000'
      minLatitude: 54.165
      minLongitude: -163.328
      minTime: '2004-05-23T19:08:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43720_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43721_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(32a3fb8e1ee8074b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4950dd74a0d8bddb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.543
      maxLongitude: -169.768
      maxTime: '2004-09-18T09:00:00.000000000'
      minLatitude: 56.396
      minLongitude: -170.835
      minTime: '2004-07-28T22:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43721_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43722_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7689d00838489820)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ee9071897621fd99)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.609
      maxLongitude: -166.644
      maxTime: '2005-01-30T22:15:00.000000000'
      minLatitude: 56.546
      minLongitude: -169.765
      minTime: '2004-07-28T10:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43722_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43723_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(12076bc271532979)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(7fc08f776443bad8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.673
      maxLongitude: -145.003
      maxTime: '2006-01-25T23:21:00.000000000'
      minLatitude: 48.561
      minLongitude: -171.052
      minTime: '2004-05-18T14:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43723_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43725_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a2df726b4556e90e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(863794ebf46c567d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.095
      maxLongitude: -151.633
      maxTime: '2004-10-24T14:16:00.000000000'
      minLatitude: 54.585
      minLongitude: -156.258
      minTime: '2004-05-21T23:41:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43725_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43726_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5829e8c89fc0a902)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fa7b79d2e92b86b3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.14
      maxLongitude: -151.454
      maxTime: '2005-10-23T18:31:00.000000000'
      minLatitude: 49.749
      minLongitude: -179.584
      minTime: '2004-05-21T23:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43726_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43727_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9a2a98a8a64b07cc)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(197fcdf0674365c5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.712
      maxLongitude: -149.279
      maxTime: '2004-06-29T23:29:00.000000000'
      minLatitude: 58.181
      minLongitude: -154.008
      minTime: '2004-05-15T20:30:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43727_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43728_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ff2ebf2f4b609ceb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(06801c04270cb9ce)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.535
      maxLongitude: -149.168
      maxTime: '2004-05-29T15:34:00.000000000'
      minLatitude: 59.139
      minLongitude: -150.586
      minTime: '2004-05-15T22:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43728_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43729_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(879c917650e7a596)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(379e62bd94ea4140)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.861
      maxLongitude: -168.133
      maxTime: '2005-01-22T18:48:00.000000000'
      minLatitude: 52.242
      minLongitude: -178.001
      minTime: '2004-04-20T02:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43729_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43730_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(df2d641605c186c0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(195687f7f49e5abf)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.686
      maxLongitude: -170.076
      maxTime: '2005-02-08T01:30:00.000000000'
      minLatitude: 56.438
      minLongitude: -175.18
      minTime: '2004-07-31T21:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43730_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43731_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(204796633387e7ea)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a037a5bf15020781)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 63.525
      maxLongitude: -169.417
      maxTime: '2005-12-14T23:57:00.000000000'
      minLatitude: 56.155
      minLongitude: -177.543
      minTime: '2004-07-28T20:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43731_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43732_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(454f2873819e8759)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(0db64f81c7a08ab7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.907
      maxLongitude: -169.333
      maxTime: '2005-03-07T04:48:00.000000000'
      minLatitude: 56.36
      minLongitude: -174.382
      minTime: '2004-07-31T13:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43732_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43733_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6d3946f6fc849bee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d8ce6964680fc0c0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.214
      maxLongitude: -148.284
      maxTime: '2004-05-03T18:45:00.000000000'
      minLatitude: 58.553
      minLongitude: -152.236
      minTime: '2004-04-12T11:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43733_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43734_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2e69ee0462fd3223)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8f53c74231f76348)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.044
      maxLongitude: -168.536
      maxTime: '2005-02-12T05:32:00.000000000'
      minLatitude: 56.022
      minLongitude: -176.553
      minTime: '2004-07-30T08:00:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43734_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43735_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(67f499845a84160f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4ab69335aaafa0c9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.12
      maxLongitude: -149.355
      maxTime: '2004-06-03T11:15:00.000000000'
      minLatitude: 58.968
      minLongitude: -152.475
      minTime: '2004-04-13T08:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43735_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43737_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4402cd6fcc7345ee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f3b289e19b60fb4e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.752
      maxLongitude: -148.224
      maxTime: '2004-09-17T06:03:00.000000000'
      minLatitude: 55.749
      minLongitude: -155.28
      minTime: '2004-04-12T09:15:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43737_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43738_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(153e8b07890df63d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e14c48acc2b0c967)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.6
      maxLongitude: -166.349
      maxTime: '2005-02-10T07:18:00.000000000'
      minLatitude: 50.625
      minLongitude: -172.921
      minTime: '2004-04-20T12:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/43738_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43820_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e2f847da93ed24f5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3e4ad392c90ec964)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.639
      maxLongitude: -155.153
      maxTime: '2004-01-21T13:18:00.000000000'
      minLatitude: 54.373
      minLongitude: -165.103
      minTime: '2003-09-25T21:57:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/43820_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43821_y2003:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(cefcadb1c6cb90a3)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(905491b6cd51dd94)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.628
      maxLongitude: -154.888
      maxTime: '2003-12-26T10:08:00.000000000'
      minLatitude: 51.725
      minLongitude: -169.831
      minTime: '2003-09-25T18:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2003/43821_y2003.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43c59afe0b957792:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  43cbff890c4c1dde:
    kwargs:
      data: '{data(8408c04793368598)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4402cd6fcc7345ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4405ec6b49d74794:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(19f40742cbe2ed12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4438d335c280ccb9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4449dac04712d368:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b995ce0af0093c1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  44a3185b2babf16b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(350eca6332ff2ab9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  44e82e61806f53ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(088252a2cbf32f5a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  44fc0d9361a9ed1b:
    kwargs:
      data: '{data(0c91740fc9c64e68)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4537fc480d8b26f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a8dcf523b2a4cea)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(996b85c6989677b9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  454f2873819e8759:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  45a0038c4da421ac:
    kwargs:
      data: '{data(2c4c53bf6760b771)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  45e70535786970a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5299de5f5da8127f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  460da74432ff2f02:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(70f5a0b945bbb088)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  461f73a8a81c4bdc:
    kwargs:
      data: '{data(c286835c06037430)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  464505f3aaa7c8b8:
    kwargs:
      data: '{data(5ce3cb73c0ac2832)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  46bcc59e02ce6bd1:
    kwargs:
      data: '{data(5d96d7b0829047f1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  46d3e4c6997db019:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(86adae6d96dc85a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  472f02dac9a17605:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  474267b1a94a51f7:
    kwargs:
      data: '{data(23811364f51c3638)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  474e4ac349a0e1a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(810a25f505c93245)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  475eddcaef7aae6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  475f63d3321619e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a550f733380e9553)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  477dbf2ba38536cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fe2092b780591500)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4780a4694b871f44:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ba9aac7392124d20)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  47fd1913e4765289:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  482fa0bf78f5abb8:
    kwargs:
      data: '{data(b5a52f9635333ccb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  48d29f6d44e5504c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  48d505bac2baf336:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a2ffad98aebaed38)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7c8590abf5389638)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  48ff6de65a8a4131:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6d251e5b7efa3a74)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  490fd0f47e866cf8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00b7a4be66bedb13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4950dd74a0d8bddb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9585c1851a5ec934)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  49c7016e8ea5e504:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1726ec4beefb876d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a065f721a7a0da3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a32f4c92c920bf2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4a336279f1703c8a:
    kwargs:
      data: '{data(cc2b3eeffac2a9c7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a3d120fcca504e4:
    kwargs:
      data: '{data(04a1a5ff88915e68)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4a5ff4708be2f8eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ab69335aaafa0c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cd158f3dd02a689e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ad1a5af7546cca8:
    kwargs:
      data: '{data(40c0519d1dbc7dc0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4af55dc3111f33ec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d49fc2488257051)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6ef468595bb95aee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b4db960d472ce50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b71fd9def061d92:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4b8deb5480f4a115:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(08f7507254f0778f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ba79761b1ee2f32:
    kwargs:
      data: '{data(bebd28df740f1fd4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4bca997b6b7c8cb6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(44fc0d9361a9ed1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4bcad4184347d7fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e0508459c161894)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4bfdbca66fb4b8fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c0859c2db1c7048:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c45dc17d1a30d60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(409e220413baac56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c55ab1bc64e43b9:
    kwargs:
      data: '{data(2722875a5f254581)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4c5c4d57da11df0a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4c76b2afe867c1c9:
    kwargs:
      data: '{data(da4bcf50aeffbecf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4c7ebf22241e182b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1bece231ebf0c184)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4cc27a81e725a795:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa3f85c92f149b7f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4cd11f8f1a4946d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ce3011d994957ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(26d60fbda9af5139)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3d9ac131d4457e40)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ced6bfbb382ad9b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fe2fda28678681b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1aea3ee0dc3bcefa)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4d0818999effb26e:
    kwargs:
      data: '{data(4815935b433c35c5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4d7846870ae81692:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4620510f1acfb02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4d90516b0d23d8f7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5ede99bac471c7f6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e211126dc021c25:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(28516b7a21631488)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e3ded9df2f00a6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8bb410c7ed24a2b7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e588221bd4da4f4:
    kwargs:
      data: '{data(9ed104b5428e7046)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4e722f0ff40b2b60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4e9e054bc58cba10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31b8544aaafd7805)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ea9ab3bf5ea8505:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b6e34d0deeb1ea8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ec9ba3d22ff123a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee5c27f9a78319b0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4edb26d7cc2e6b72:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ee316bc05db2187:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ef018886f253039:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6fd9537abfec595f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4ef80f4fac93a0a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(38e2603589ec4cc9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f2582fe762df1bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(89e3b699b5d494cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f68605b88369579:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e0508459c161894)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4bcad4184347d7fa)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4f7d9fd2cc23c289:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(482fa0bf78f5abb8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(91a721fa6540dbc9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4fb876d3531143cf:
    kwargs:
      data: '{data(e0ebcde1693aa070)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4fc6093b9d4ac9cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72d4512f9a139a6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0b5de737b7000e5f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  4fe2fda28678681b:
    kwargs:
      data: '{data(7a02bf732f126a74)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4feb44dcf8a9a166:
    kwargs:
      data: '{data(46b92d2ac7c70e2b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  4fef3942bfa16b83:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(810a25f505c93245)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bc7006869bd072c4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  502b3d08f2628e6d:
    kwargs:
      data: '{data(bace0eb85f8b5735)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  507bc6a62aeab85d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5799ce936b7b8fc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  508e44e244e6e20b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c5ac557304185d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3292749153fc569a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  510c6a6e881d4419:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7e46349b20d832)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(74157e12196696bd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5145873946624a95:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(46bcc59e02ce6bd1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c670b1925425396a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  514b08322803c977:
    kwargs:
      data: '{data(0b9fff968d85f78a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5178ea118ec51069:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19c8ac47c30a822c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  519849caff05125d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(67791a31703de2a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  51a0769b60611941:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(78d21cd77cf60096)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(396d06317dfd1f44)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5202fa9e9716d75e:
    kwargs:
      data: '{data(4303974c3e92d6f7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  522a1032ac476f7a:
    kwargs:
      data: '{data(872c4d76e891a8fe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5296f8ff3e6d956c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5299de5f5da8127f:
    kwargs:
      data: '{data(68fe3c3b8cb6c199)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  52c8fd8e2e3a139d:
    kwargs:
      data: '{data(3d1b266774e66188)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  52ea94a9133c2b6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53287_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7540d955310d9d28)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a206cedd244c5a86)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.541
      maxLongitude: -151.318
      maxTime: '2004-12-31T16:20:00.000000000'
      minLatitude: 53.213
      minLongitude: -167.0
      minTime: '2004-09-01T12:35:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53287_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53288_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a9bc216b402c3f28)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d1fc47daafd70f58)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.095
      maxLongitude: -152.049
      maxTime: '2004-11-25T11:30:00.000000000'
      minLatitude: 54.925
      minLongitude: -158.618
      minTime: '2004-08-27T20:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53288_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53289_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9792e25f43664f0e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2a3d7ddc614a1c11)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.943
      maxLongitude: -152.987
      maxTime: '2005-04-26T12:04:00.000000000'
      minLatitude: 51.985
      minLongitude: -183.949
      minTime: '2004-11-06T22:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53289_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53290_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4bfdbca66fb4b8fa)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b785b3e20b24ca05)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.966
      maxLongitude: -163.929
      maxTime: '2005-08-28T11:48:00.000000000'
      minLatitude: 55.271
      minLongitude: -168.056
      minTime: '2005-05-10T23:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53290_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53291_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(18ed6585c6a03893)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(64bd01c1d0c9f7d2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.908
      maxLongitude: -152.05
      maxTime: '2006-03-06T03:21:00.000000000'
      minLatitude: 51.887
      minLongitude: -182.008
      minTime: '2004-11-06T07:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53291_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53292_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(546cc517d52d1e4a)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d7a7dc2d261f8d3c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.243
      maxLongitude: -153.046
      maxTime: '2005-02-11T08:31:00.000000000'
      minLatitude: 50.084
      minLongitude: -176.248
      minTime: '2004-11-08T21:43:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53292_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53293_y2004:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0bc952d9d10ea2fb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9d982810efc8d825)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.026
      maxLongitude: -153.317
      maxTime: '2005-08-20T23:41:00.000000000'
      minLatitude: 52.597
      minLongitude: -175.751
      minTime: '2004-11-07T05:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2004/53293_y2004.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53294_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d535a641ad1428ad)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8827f75ac73bb4b6)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.068
      maxLongitude: -151.424
      maxTime: '2005-07-21T03:31:00.000000000'
      minLatitude: 55.017
      minLongitude: -161.523
      minTime: '2005-02-23T10:59:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53294_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53295_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(37f1e80a857868a6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(293fd947137e2708)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.579
      maxLongitude: -149.629
      maxTime: '2006-06-27T22:44:00.000000000'
      minLatitude: 52.347
      minLongitude: -178.025
      minTime: '2005-02-24T00:22:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53295_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53296_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1c2df0d0f6f51d5e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(975d9fe30380382d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.575
      maxLongitude: -172.344
      maxTime: '2005-12-23T10:07:00.000000000'
      minLatitude: 59.242
      minLongitude: -178.361
      minTime: '2005-05-04T04:18:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53296_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53297_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9c1d3157ead089f2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4e211126dc021c25)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.029
      maxLongitude: -152.267
      maxTime: '2006-10-03T08:02:00.000000000'
      minLatitude: 56.088
      minLongitude: -154.971
      minTime: '2006-08-26T19:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53297_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53298_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d5a484fdf9f4c421)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3688548c404e9a1f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.148
      maxLongitude: -151.003
      maxTime: '2005-03-08T07:20:00.000000000'
      minLatitude: 57.938
      minLongitude: -154.761
      minTime: '2005-02-23T12:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53298_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53299_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ac6a5ecf0d316d77)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(34b4bf14f1662143)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.753
      maxLongitude: -134.771
      maxTime: '2005-10-02T17:08:00.000000000'
      minLatitude: 55.014
      minLongitude: -152.696
      minTime: '2005-02-07T14:03:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53299_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53300_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(31355422187bd160)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1a63403d64f9c02f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.223
      maxLongitude: -159.539
      maxTime: '2006-08-13T16:27:00.000000000'
      minLatitude: 55.192
      minLongitude: -164.449
      minTime: '2005-05-10T23:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53300_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53301_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(617d54b5089cbc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(54bb18add937f5ee)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(88534553cfce4c64)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.165
      maxLongitude: -173.164
      maxTime: '2008-05-15T08:33:00.000000000'
      minLatitude: 57.776
      minLongitude: -187.224
      minTime: '2007-05-01T09:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/53301_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53302_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(74d4c234985f3c9e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f22b83c190e2967d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.464
      maxLongitude: -163.974
      maxTime: '2005-06-17T22:44:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.158
      minTime: '2005-05-10T18:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53302_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53303_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ca69e08b6730b59e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(5d557be60abe59f0)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.957
      maxLongitude: -164.346
      maxTime: '2005-06-30T23:20:00.000000000'
      minLatitude: 54.862
      minLongitude: -164.623
      minTime: '2005-05-10T15:37:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53303_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53304_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7ff95f8bd64678cd)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b596b7febf2b8ab2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.225
      maxLongitude: -136.141
      maxTime: '2005-09-22T03:36:00.000000000'
      minLatitude: 56.052
      minLongitude: -140.38
      minTime: '2005-05-06T10:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53304_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53306_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(585cdf9b7841a553)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(01068f364e1024f8)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.974
      maxLongitude: -136.98
      maxTime: '2006-02-10T23:48:00.000000000'
      minLatitude: 56.36
      minLongitude: -156.327
      minTime: '2005-05-06T17:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53306_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53307_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a3ffccdb5c3be308)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(a5892e8ff8620720)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.386
      maxLongitude: -151.188
      maxTime: '2007-08-16T17:37:00.000000000'
      minLatitude: 50.112
      minLongitude: -189.67
      minTime: '2006-08-29T08:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53307_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53308_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1d3c80ff4bc8833b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ce236ed29af2a1b3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.762
      maxLongitude: -137.808
      maxTime: '2006-06-24T22:15:00.000000000'
      minLatitude: 50.468
      minLongitude: -174.065
      minTime: '2005-05-03T07:40:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53308_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53309_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(006c0d07d1594133)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6363bec67314ca70)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.526
      maxLongitude: -130.247
      maxTime: '2006-05-25T23:37:00.000000000'
      minLatitude: 49.102
      minLongitude: -147.677
      minTime: '2005-04-23T21:20:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53309_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53310_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(798420726cc6996c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(360500e4401b094f)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.005
      maxLongitude: -132.735
      maxTime: '2005-11-17T07:07:00.000000000'
      minLatitude: 52.074
      minLongitude: -136.372
      minTime: '2005-04-30T14:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53310_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53311_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(70528105803719ca)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(62c559565a7836a2)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.026
      maxLongitude: -134.84
      maxTime: '2005-05-15T18:02:00.000000000'
      minLatitude: 55.063
      minLongitude: -138.304
      minTime: '2005-02-07T15:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53311_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53312_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(87de1bea881b9e9d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fbadcd0d6e36baf3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.07
      maxLongitude: -132.786
      maxTime: '2006-08-11T15:20:00.000000000'
      minLatitude: 52.046
      minLongitude: -160.842
      minTime: '2005-04-23T21:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53312_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53313_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(47fd1913e4765289)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b284dbb6df3cc529)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.648
      maxLongitude: -164.834
      maxTime: '2007-03-10T19:08:00.000000000'
      minLatitude: 54.638
      minLongitude: -168.201
      minTime: '2006-05-14T12:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53313_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53314_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(33314afc63d93b1e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(662264efe0660413)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.212
      maxLongitude: -164.599
      maxTime: '2007-03-09T11:09:00.000000000'
      minLatitude: 55.144
      minLongitude: -178.303
      minTime: '2006-05-15T00:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/53314_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53315_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c9d586abcd1bb3de)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fe29b1655b3ad8a4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.194
      maxLongitude: -132.928
      maxTime: '2006-05-23T19:31:00.000000000'
      minLatitude: 51.315
      minLongitude: -160.219
      minTime: '2005-03-13T10:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53315_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53316_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2ba5190ebd9fee3f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(c2d51b028f5237c1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.521
      maxLongitude: -160.289
      maxTime: '2005-08-30T22:47:00.000000000'
      minLatitude: 54.846
      minLongitude: -164.709
      minTime: '2005-05-10T15:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53316_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53317_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e5fbc32a4dfee86e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b99ddff0939cc68)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.952
      maxLongitude: -150.249
      maxTime: '2005-05-20T18:30:00.000000000'
      minLatitude: 55.139
      minLongitude: -160.172
      minTime: '2005-02-23T18:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53317_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53318_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b09603e5e8d306e6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cebc92b35cb1baae)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.735
      maxLongitude: -163.713
      maxTime: '2006-04-11T22:02:00.000000000'
      minLatitude: 54.446
      minLongitude: -194.148
      minTime: '2005-05-10T23:50:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53318_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53319_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ad7d5b97ec20cec9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3da4efd7554f48eb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 54.217
      maxLongitude: -132.01
      maxTime: '2005-06-11T00:58:00.000000000'
      minLatitude: 51.818
      minLongitude: -134.528
      minTime: '2005-03-13T07:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53319_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53320_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(660ad7937584e5a4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(3697aad041628e60)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.15
      maxLongitude: -158.669
      maxTime: '2005-10-01T15:42:00.000000000'
      minLatitude: 54.862
      minLongitude: -165.88
      minTime: '2005-05-10T18:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53320_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53321_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a8265d72a4bad44d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b501ad5e35aef0d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.094
      maxLongitude: -137.862
      maxTime: '2006-02-22T16:22:00.000000000'
      minLatitude: 54.961
      minLongitude: -143.738
      minTime: '2005-05-03T11:11:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/53321_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  537f169d79da6937:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  53d7428345dee062:
    kwargs:
      data: '{data(3ef417b280656173)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  53e0db487d75bed8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(253a6309e6941152)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a069e2e31115a266)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  542a0ab543ff1f1f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(729240dffbba06bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2833e99d2c8e4ef4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5434ea08699f30b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  543cc6e2c67f3841:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5448792a9477e181:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea59289de3ef34ed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  54539d026e255ace:
    kwargs:
      data: '{data(ee30325b76a6c545)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  545ac8e9cdc232fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cb2cfbede6c52914)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  546cc517d52d1e4a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5471642cf4d63935:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(80ef936e85ebd5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5496e0692256eeeb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(44fc0d9361a9ed1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  549e2a8f4fc1539a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0641fd6557ad9d0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  54b1239b68c5aac8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa3f85c92f149b7f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  54bb18add937f5ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(617d54b5089cbc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  553537160183bd3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8559bde098fd5fc0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  555415ce0c7339ed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9b4c90451d42a1d4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  556040b4c10dce91:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85ea237f4b62ba9f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(90ef2db74d38367e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  55982948568648da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc054a9521566f9d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e415d350bab2943e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  55c4b21ccabb232c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a5fc5989abdf4773)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2c320b45b4cafb24)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  560b3822db531cec:
    kwargs:
      data: '{data(e801d6d2c18252f7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  564bf1a793c7e050:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5686de85177e85bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(348f2de370f97ccc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  56c3f362f42d91ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(000e8b5c4fe8a0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  56d0037c6fd0ed33:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaad6ffce65f4afb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57863_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1abd6c19b1659472)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(abd3790a968e5bb5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.135
      maxLongitude: -163.787
      maxTime: '2006-05-27T16:39:00.000000000'
      minLatitude: 55.009
      minLongitude: -164.241
      minTime: '2006-05-15T04:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57863_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57864_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc1076544df2ecca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b940650b32aecef1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '16'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(4364794110e12dfc)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.29
      maxLongitude: -158.795
      maxTime: '2011-04-16T03:47:00.000000000'
      minLatitude: 55.548
      minLongitude: -171.141
      minTime: '2009-05-12T19:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/57864_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57865_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(be67093ace4926b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(58af70930550924c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ce329a845fe06ab9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.854
      maxLongitude: -164.803
      maxTime: '2010-03-22T23:10:00.000000000'
      minLatitude: 56.564
      minLongitude: -195.042
      minTime: '2008-05-06T00:04:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/57865_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57866_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(0f1c4ddc19df3124)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f82d016a6d5e5287)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.922
      maxLongitude: -159.095
      maxTime: '2007-03-26T08:32:00.000000000'
      minLatitude: 55.14
      minLongitude: -164.73
      minTime: '2006-05-15T01:25:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57866_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57867_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(865c4e20e7afb3c8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '15'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(16b3d90c4787777c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.15
      maxLongitude: -163.749
      maxTime: '2006-06-13T14:44:00.000000000'
      minLatitude: 54.731
      minLongitude: -165.05
      minTime: '2006-05-14T13:09:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57867_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57868_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ddb8e626cb30b49e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b6e032b782b9a3fb)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.57
      maxLongitude: -167.435
      maxTime: '2007-03-25T04:26:00.000000000'
      minLatitude: 57.037
      minLongitude: -170.442
      minTime: '2006-05-08T20:47:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57868_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57869_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(30b2d9d3a356a7f5)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(d71984af9143ae40)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.843
      maxLongitude: -171.648
      maxTime: '2007-01-31T05:29:00.000000000'
      minLatitude: 57.768
      minLongitude: -180.457
      minTime: '2006-04-27T10:58:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57869_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57870_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(5ac0bfebf1ba82bb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(721d465e3a20a8be)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.327
      maxLongitude: -151.187
      maxTime: '2006-11-21T23:07:00.000000000'
      minLatitude: 45.139
      minLongitude: -196.676
      minTime: '2005-07-23T18:11:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57870_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57871_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24f35e9ae485cece)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(828e30f9fc1c2a17)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(862f4e5cac5f2d56)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.816
      maxLongitude: -170.481
      maxTime: '2007-07-09T22:57:00.000000000'
      minLatitude: 57.47
      minLongitude: -172.257
      minTime: '2007-04-30T23:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/57871_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57872_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(82daabe751e4a00f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91aeb67b9b52c7e7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.935
      maxLongitude: -150.796
      maxTime: '2005-10-22T10:56:00.000000000'
      minLatitude: 54.695
      minLongitude: -158.341
      minTime: '2005-07-23T06:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57872_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57873_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(1799ff0a118caef4)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(cab4107de836ae7e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 62.689
      maxLongitude: -171.456
      maxTime: '2007-01-29T13:53:00.000000000'
      minLatitude: 57.759
      minLongitude: -180.384
      minTime: '2006-04-27T05:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57873_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57874_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c5ff7a849d551243)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(91163a0cd7b160b4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.2
      maxLongitude: -151.26
      maxTime: '2005-09-27T20:57:00.000000000'
      minLatitude: 57.23
      minLongitude: -156.299
      minTime: '2005-07-22T06:23:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57874_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57875_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d0efba3ee7617402)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b2ce9577a1479de7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.075
      maxLongitude: -168.747
      maxTime: '2007-10-29T23:42:00.000000000'
      minLatitude: 56.37
      minLongitude: -184.094
      minTime: '2006-04-22T07:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57875_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57876_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ca5a9fb0e2e3317e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b33ab01367cab5d)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.111
      maxLongitude: -152.118
      maxTime: '2006-02-27T20:19:00.000000000'
      minLatitude: 54.972
      minLongitude: -162.159
      minTime: '2005-09-10T16:21:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57876_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57877_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4081fbe01a5e6cc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2012aa93dcb9bd2c)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(702ba1b866a3e5c3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.308
      maxLongitude: -164.61
      maxTime: '2007-08-11T22:16:00.000000000'
      minLatitude: 55.881
      minLongitude: -166.181
      minTime: '2007-05-11T08:36:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/57877_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57878_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8524d70928f5f8f6)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(555415ce0c7339ed)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.2
      maxLongitude: -151.899
      maxTime: '2007-05-17T23:21:00.000000000'
      minLatitude: 48.316
      minLongitude: -177.111
      minTime: '2005-09-09T23:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57878_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57879_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f36ff97a8923c902)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(25f0fe0cd02f9e0c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.13
      maxLongitude: -150.578
      maxTime: '2005-11-22T00:10:00.000000000'
      minLatitude: 56.65
      minLongitude: -154.035
      minTime: '2005-07-22T16:55:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57879_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57880_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a811620eac1d8a84)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(084a0be3943acbe3)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.311
      maxLongitude: -152.354
      maxTime: '2005-09-11T22:45:00.000000000'
      minLatitude: 57.22
      minLongitude: -152.82
      minTime: '2005-09-10T02:24:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57880_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57881_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8f314e6fdd20e074)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(1ec1ec09b8c0e2b5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.249
      maxLongitude: -152.432
      maxTime: '2005-09-21T02:07:00.000000000'
      minLatitude: 56.896
      minLongitude: -153.486
      minTime: '2005-09-11T21:06:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57881_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57882_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(064f730a4031ff75)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d6c7fd61f3b63f6b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(da1d14b63468e856)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.839
      maxLongitude: -170.866
      maxTime: '2008-10-24T23:10:00.000000000'
      minLatitude: 57.254
      minLongitude: -174.546
      minTime: '2008-04-21T06:48:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/57882_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57883_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(b4ea4a7024b9d513)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(983e1d044bb9c0f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.421
      maxLongitude: -151.153
      maxTime: '2006-10-25T18:20:00.000000000'
      minLatitude: 56.195
      minLongitude: -155.252
      minTime: '2006-08-26T04:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57883_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57884_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16787c161d9d4762)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4044524a471afc3d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(2b4c6467689b6d68)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.348
      maxLongitude: -166.701
      maxTime: '2008-12-30T23:24:00.000000000'
      minLatitude: 54.635
      minLongitude: -186.066
      minTime: '2008-02-26T23:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/57884_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57885_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(7c9070e8435e56c9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f7a3990ef402456e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.05
      maxLongitude: -144.77
      maxTime: '2005-10-22T01:47:00.000000000'
      minLatitude: 58.858
      minLongitude: -152.073
      minTime: '2005-08-10T00:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57885_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57886_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7c424fd0618174a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(2079adb1cbeb982b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(af22cb11c2c610b5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 55.23
      maxLongitude: -163.253
      maxTime: '2008-04-21T22:22:00.000000000'
      minLatitude: 54.985
      minLongitude: -164.621
      minTime: '2008-02-18T14:05:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/57886_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57887_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(dc5d4a373497e4a8)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6332529005ecf87a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.711
      maxLongitude: -149.547
      maxTime: '2006-03-02T18:43:00.000000000'
      minLatitude: 55.069
      minLongitude: -160.128
      minTime: '2005-07-21T06:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57887_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57888_y2006:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(4ee316bc05db2187)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(187a19e2a36d1366)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.563
      maxLongitude: -151.128
      maxTime: '2008-03-07T13:01:00.000000000'
      minLatitude: 50.444
      minLongitude: -181.413
      minTime: '2006-08-26T04:17:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2006/57888_y2006.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57889_y2005:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c3ced844ad45774b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(fb5a2fdf4402c273)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.215
      maxLongitude: -150.495
      maxTime: '2005-11-22T05:08:00.000000000'
      minLatitude: 52.59
      minLongitude: -169.453
      minTime: '2005-07-21T16:34:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2005/57889_y2005.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5799ce936b7b8fc1:
    kwargs:
      data: '{data(41dfd32bf75be967)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  579cc9a675eeb5d2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  57c8ae47470e59bb:
    kwargs:
      data: '{data(f6be6e9780c841e6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  57f29fe6a0c0ba0e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  580bf62b45a2cce0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b019c17863a19723)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  580e79307c27a10e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac84ae3eedbc9c0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(eb9170d863748599)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5829e8c89fc0a902:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  583120ece556d022:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a707a09ee8d95a55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e1f1ab8dffd285c4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  585cdf9b7841a553:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39f5720bc8eeddb9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5876c244caf778f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea35f1de255308a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c4af639d7d5aa60d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  58a8bb0ca00e89f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(430c524da1708138)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  58af70930550924c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(be67093ace4926b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  58e1f754164bfb14:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(35ccffba98403f1f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  58ea6c5cea8b123a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e8b7ac0b7326e8f6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  592b57dfc56a875e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ad1a5af7546cca8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fec10eec528a3e21)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  59df5bba481a52ff:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42f3913a3535171d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  59ecca24a02f6e09:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(348f2de370f97ccc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5686de85177e85bf)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5a298a4795cf2ca4:
    kwargs:
      data: '{data(f6f3ca6a83ab0ee5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5a3694489e208c73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e36c3cf7fc0e2c04)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5ac0bfebf1ba82bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5ad3da76468dec4f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8d9af992c31a990)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b642f6f45b0877a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f92b794921b9c58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b6d7c50de1c9c70:
    kwargs:
      data: '{data(3f36c3fb523c2d07)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5b745bb98957efed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91df58c1f89d7f12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b7d5bc7fb3f06bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8e6e9638a1fd046a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5b7e46349b20d832:
    kwargs:
      data: '{data(2550fb8f19fa558b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5b8418d4f59d23d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5be560ec7f5ba45d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5c0d6d3b5fc825e0:
    kwargs:
      data: '{data(581e36be9b7491ce)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5c349e6ea5fa8980:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc1076544df2ecca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5c7122f85c71b725:
    kwargs:
      data: '{data(6d9a968634f8b947)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5c740091a13a3fb5:
    kwargs:
      data: '{data(cdf91c1eca3cc14c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5c8f3f430a593f06:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f608eda618bf25a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c6b632d64d104ed3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5ca217993041f640:
    kwargs:
      data: '{data(ce828fd606e8f45c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5caf3140748e333b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f457b927cb0eec10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d0a3a602c41a88b:
    kwargs:
      data: '{data(d7b6169e2e1506bb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d4955eb5cab5072:
    kwargs:
      data: '{data(a7239301ad8495b5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d49fc2488257051:
    kwargs:
      data: '{data(d42e9b4ad5cf09ac)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5d557be60abe59f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(368edb33ed44e4a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d7101901b85af33:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d79863955d35658:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(005c6a76045b1b01)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d79ef1d03ac8b51:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0161cdea0006e8d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d851017eb66207c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5d9b88ed09e193a2:
    kwargs:
      data: '{data(c185cb2486d4a5dc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5dff736852a62ccd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8133f7dea72a14fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e3bfb11d7749584:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94c4aab56cf39408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e483216d363e36f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7ad9eebe4270ea9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e5786336be6f313:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63a3b7d96dc3543e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d98e164c3a558d88)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e68b4d49c4dcae2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(76e8223d00e12ae5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5e86da0a3d4b255b:
    kwargs:
      data: '{data(8e97bd7a68474b1c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5ebbed79bbad61dd:
    kwargs:
      data: '{data(c7c96753def8fd60)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  5ede99bac471c7f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d4c919fef11c1307)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f07db62a8a0fcfc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b4db960d472ce50)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f859ed2a52f1252:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf198aed67ec6c66)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5f99235ac14f986c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(193c972da3d2684b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  5fd667f7ab5f31a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  60503df8bd6b2b6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0467b7fc964c489)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3841888c25c2b905)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6065f3f12124a199:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bc93f5b9580870d2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6085e2a338ba4fae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b09291bd8097ec75)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  60cd596df3132df0:
    kwargs:
      data: '{data(b4d533c3bb150ee5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  60fbb611791bd6e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61334641b7c1c99f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac84ae3eedbc9c0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61433728bf950915:
    kwargs:
      data: '{data(c2ff58a2738c1840)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  615b2b4de15a7f75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c301ef274ce9b72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6160bd79d0d6a66b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(72a326e192b48e09)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0a8cf68df5640435)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  617d54b5089cbc7c:
    kwargs:
      data: '{data(be060169ba5bf370)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  61a131ceab7b62db:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8c7fca51ccd1f6d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61bae9faf5544b73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ca76eaaab43b6651)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7593007f1a17bad4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61d3db54f90d7b90:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  61d67af49a69df91:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(32ecd4924d2ec98f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  621663a825f62870:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6228a46f1542d7fa:
    kwargs:
      data: '{data(23fb64a1b85277cb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6249b4abe6f36f61:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62c559565a7836a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2eb450c0e5157d9e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  62ea7d69eb2e5fef:
    kwargs:
      data: '{data(ab543029cb764389)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  63115be7702ccaae:
    kwargs:
      data: '{data(35869eb68296394b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  632e9d8c088da4d7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(efa803af793c98be)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6332529005ecf87a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19a4023f440f844a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  63378317bbdbc5d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9b952d6b7c4b37c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6348e59337f00f30:
    kwargs:
      data: '{data(4ea2d3c7ff0fd4bf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6363a37aacd6c8ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6363bec67314ca70:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9008dd01002fe681)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  63a3b7d96dc3543e:
    kwargs:
      data: '{data(bfbc2103c8e710ce)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  63a67412d9d60c2d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31b8544aaafd7805)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  63ba731657a6186b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6424a149fbda159f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b59113bc4ecd9cfd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  642d414ebf45ea7c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(392fdb2b07df4b67)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(eda4eb8b0ffd8987)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6447b0c5773d1085:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(514b08322803c977)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  64bd01c1d0c9f7d2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f4b123e9dc16cb6c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  64d2b6ff1a7b0b12:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c1c99e5c55447fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f8618cf5e46a3ca7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6516061bdf1500e6:
    kwargs:
      data: '{data(92760c08ef9745a8)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6580a6018e34868e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00b7a4be66bedb13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  658e5acbbb30f909:
    kwargs:
      data: '{data(cf64dd186a900a38)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  65b783bedb4b159d:
    kwargs:
      data: '{data(b1062cfa9c67f024)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  65c4c99629627fc3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41c4f9fc533e25bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  660ad7937584e5a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66158162b521bc85:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(35ccffba98403f1f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(66d5e95acbd2f0ab)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  662264efe0660413:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ceec6c4e04541dd5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  664084ff2fd99ecb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6643e8df979ac170:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  664a59c605b9773c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dfcf973a30c5a20)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  665a38abe68b27a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e24193181053c333)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  665c80df0091b544:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(474267b1a94a51f7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66d5e95acbd2f0ab:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(35ccffba98403f1f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66d97a6f127a0326:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(705b2f6727223b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  66ef57392e28a8fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  677459b02d3e58c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4e588221bd4da4f4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(05c2ce3ef28eeccb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67762927a48509a9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1812975572f1d5bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(25c8848759391245)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67791a31703de2a4:
    kwargs:
      data: '{data(9557516ec2e6c976)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  679d38fd2750c04c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb33a61662366e9b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(046a6ab775335e30)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67cca495bfc75d8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  67f499845a84160f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  688043574fa5e922:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e340643328a2234)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  689640134e7189bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dad27762e2324164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6898300f30ccccb2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(80ef936e85ebd5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0909349b79fafc59)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  68ad5243704e8445:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  695388023751c935:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94af8b3640df7e86)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0406ec427ea22842)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6955f5900f49cb2d:
    kwargs:
      data: '{data(25b260deecb88c2f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  697ce4b9f35b1cc7:
    kwargs:
      data: '{data(56de464cfa24a095)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  698ae586d14a242d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f860c04cedb40f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  698e06016cf44cba:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f457b927cb0eec10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a88d9c78cbe987c6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  69cc241ad1229369:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6516061bdf1500e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a247fc519be5ff6:
    kwargs:
      data: '{data(b08c3f262831b320)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a3233266abdb0b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a34b94a6c9f1869:
    kwargs:
      data: '{data(a67189d1e4841b94)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a4c7eb48b102b27:
    kwargs:
      data: '{data(e4e22ff2d785a1b7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6a82e52deb10b31e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6feb11edc4cec42)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6a9ff213ac527650:
    kwargs:
      data: '{data(122fb98fdfa7e111)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6ac4a537f494cb97:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1726ec4beefb876d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e82fd4afec0ecef0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6b02d11df791fb92:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(658e5acbbb30f909)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b4c8ad7a13ea6430)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6b0328f86b22f511:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b87d5dbd31fb37)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3c661f592b41c012)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6b5f5f8bffc16eee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e544bef5cbbd70f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6b720db7ecb346b2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ba0858b4f7bd3b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6c6558e024a2bbd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6bbab0253f8fc0cb:
    kwargs:
      data: '{data(ea686806a919b2e0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6bec0561a05982d4:
    kwargs:
      data: '{data(5cb47bf795f950fe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6c063061a384af6b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10ccf8b18f8c8a0a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6c2fc996c06d2f8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6c301ef274ce9b72:
    kwargs:
      data: '{data(c4082f8be9cf6a51)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6c4c95ef6a068dc0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(77e4bfdb6ada4cda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6cc6debc23902814:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(19f40742cbe2ed12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4405ec6b49d74794)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ce2465a0371721e:
    kwargs:
      data: '{data(e9a64ac6dddb2edd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6ce6f0615b08cc4f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6d1ae81ef908e36f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6d251e5b7efa3a74:
    kwargs:
      data: '{data(9b066d0dee23f134)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  6d3946f6fc849bee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6dd27e173d782e11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6dd427b0fdef56da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5d7101901b85af33)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6de1400121294278:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(107c5e6592bed848)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3521cef9d9a3b83d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6e6441ff8b6c05e8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73408c68ca4f39c5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6e97b158a282357b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4d0818999effb26e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(89f436af63accfb1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ea21513ce603b20:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8420283c93607224)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6ef468595bb95aee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d49fc2488257051)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6efc2b73350293c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc6057da25ddb109)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f0f3984262ce5c2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f3138832a3cd294:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c9aab4739be933b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(32df5a3ba3fda88d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f3ca51edc9389b9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c6c32f3b93ebbfb3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f5b86fdb0709617:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(12d4628a3a1542a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6f9ff08119c0aafd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(321395f9af64b596)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6fb73fa6c7336f60:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6fbc67df22b9d52c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  6fd9537abfec595f:
    kwargs:
      data: '{data(3828669b16f55983)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7012f309131ff542:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  702ba1b866a3e5c3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4081fbe01a5e6cc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c7649313af1bd668)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  703579af77b07be2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd42489261ae92c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ff4fd2ef9b048e10)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7037922f6a87f0ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b01172057c138e1a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  70528105803719ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0066ae5d96a70cc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  705b2f6727223b27:
    kwargs:
      data: '{data(e80cb983c9e68917)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  708014282ef8d6ec:
    kwargs:
      data: '{data(263f16e80410de77)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  70e45c28d59e9980:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(193c972da3d2684b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  70e6763ac448405c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b7ecf297cabbbab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  70f5a0b945bbb088:
    kwargs:
      data: '{data(345047756aa35cbd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  711b2420c1f880c7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c0d6d3b5fc825e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  713be3148cbec1ec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c4f0b7ab0ca3af7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a32f4c92c920bf2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  715f9d7c308d2e06:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  720bb55eb3a9be30:
    kwargs:
      data: '{data(69fe39b0cb8b5151)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  721d465e3a20a8be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e963c114b08bbeef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6fb73fa6c7336f60)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  723f58d3524714fa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6228a46f1542d7fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72426_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ffd6ffb203bcf110)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8cca0d37edbc8c05)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b8f0e330c1d01f4)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.951
      maxLongitude: -183.608
      maxTime: '2010-06-27T02:16:00.000000000'
      minLatitude: 56.665
      minLongitude: -195.681
      minTime: '2010-02-15T04:27:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/72426_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72427_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f6f593402e75edb6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(97da7734959d08a9)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(38ee1ac4f03189d5)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.38
      maxLongitude: -172.078
      maxTime: '2010-03-17T17:53:00.000000000'
      minLatitude: 55.233
      minLongitude: -179.291
      minTime: '2009-08-19T19:42:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/72427_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72428_y2010:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da015121df9e807a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(fe2331fd4cbed91e)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(18774723ae2ea634)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 59.547
      maxLongitude: -175.302
      maxTime: '2010-07-01T13:45:00.000000000'
      minLatitude: 58.945
      minLongitude: -176.022
      minTime: '2010-05-17T19:13:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/72428_y2010.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72430_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(22c4f9aab289660f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(31109fe3a613fd59)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(f87574bb6e6a8c90)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.834
      maxLongitude: -170.204
      maxTime: '2007-06-30T02:34:00.000000000'
      minLatitude: 56.207
      minLongitude: -171.96
      minTime: '2007-05-12T03:28:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/72430_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72431_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f4b0b9200d6e88a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f1f2fecf788d1d64)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(ca226e04db5591b9)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.549
      maxLongitude: -166.428
      maxTime: '2008-09-15T00:17:00.000000000'
      minLatitude: 54.236
      minLongitude: -187.129
      minTime: '2008-02-21T03:38:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/72431_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72432_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39d863e26a959ef2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(ce24d5408b5a96d1)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(29c46a429a759b74)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.871
      maxLongitude: -172.922
      maxTime: '2007-12-03T22:14:00.000000000'
      minLatitude: 56.599
      minLongitude: -178.984
      minTime: '2007-05-15T05:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/72432_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72433_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(107c5e6592bed848)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(8bcd12cf04b73889)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6de1400121294278)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.375
      maxLongitude: -169.028
      maxTime: '2007-08-13T17:01:00.000000000'
      minLatitude: 54.846
      minLongitude: -175.017
      minTime: '2007-05-10T08:49:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/72433_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72434_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f54840d9147ec6f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(a44b560232afb253)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(98dc123d48013aa1)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.894
      maxLongitude: -168.684
      maxTime: '2007-08-19T12:37:00.000000000'
      minLatitude: 56.454
      minLongitude: -169.909
      minTime: '2007-05-05T00:01:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/72434_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  72435_y2007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(392fdb2b07df4b67)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9c3674c14f9f2788)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(642d414ebf45ea7c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.45
      maxLongitude: -163.921
      maxTime: '2007-11-22T01:34:00.000000000'
      minLatitude: 56.721
      minLongitude: -166.224
      minTime: '2007-04-26T23:56:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2007/72435_y2007.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7251589b2f8bcae5:
    kwargs:
      data: '{data(1c247869d47ac2a9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7252accf33fd26fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36d2c15488d05074)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e87f912e5c728736)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  726a7ddf9595637e:
    kwargs:
      data: '{data(bcf07b41ca2a0f40)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  728cb9d87909cd69:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52c8fd8e2e3a139d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  729240dffbba06bb:
    kwargs:
      data: '{data(6c1335ffa385033f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  72a326e192b48e09:
    kwargs:
      data: '{data(c2d8d810bf0da203)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  72d4512f9a139a6d:
    kwargs:
      data: '{data(3ef4fabacab692e0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  72e161be70161f19:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(384e1dce169d2dcb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73408c68ca4f39c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1cba476c59afdc80)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73831c3127a2773a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73dd4db3d47897dc:
    kwargs:
      data: '{data(ce4dec04dbb14a4e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  73f8ee5c61aa8342:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b49e523d1783c149)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  73fd051bfef02540:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f4b0b9200d6e88a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  74157e12196696bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b7e46349b20d832)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  746f565fb309c0cd:
    kwargs:
      data: '{data(27a681065c898df5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7470723088102b64:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6b720db7ecb346b2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  74d4c234985f3c9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  752d048be35df6f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(474267b1a94a51f7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3ebba5fce2106be4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  752fd5b572ea6c2d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(efa8dc135179a876)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7540d955310d9d28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  75461c654e3f6704:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f608eda618bf25a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7563b1a376db29b5:
    kwargs:
      data: '{data(651da3bc70e2aaea)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  756de0dca7fdae48:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(071a9a6e916e5f3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7593007f1a17bad4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ca76eaaab43b6651)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  75e61da1416f6855:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24d038e5e10d8eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  75ecc58b6546e76d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7431efd40a2967a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  75fb8db5b0aadd04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fb1551a6f8f09650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(341826e26d9bb71e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7605a3f7dde7f46d:
    kwargs:
      data: '{data(e6908208b752235f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7663ac1940f27d50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  767dd086738de4ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7689d00838489820:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  76aca103021ee2fb:
    kwargs:
      data: '{data(5031b4a9172dcd40)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  76b34934a66358b3:
    kwargs:
      data: '{data(855811dd28225e7d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  76df6f7a0f5b0c8d:
    kwargs:
      data: '{data(dc78b37e3cce0672)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  76e8223d00e12ae5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  771172bf8619cca9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  771cb29bab19235d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc77ab8ed218da5d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(24c8c7a55b49c129)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  773d0b56b01767fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b49e523d1783c149)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77432ac4e7bd094a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(396f5cdb11fe537f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3d6e811458c634ae)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77636f43acf8e66b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77ac1ea1366b0e9e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77ba7d1885e98c04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(840a5a22a5d75eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(99d423271d35231f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  77e4bfdb6ada4cda:
    kwargs:
      data: '{data(b34717aeddf40f33)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  783b3a9585085ab2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05d193a8920ff584)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  78bbc95fa0560bed:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  78d21cd77cf60096:
    kwargs:
      data: '{data(f0eae59729121340)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  78f809ff34075762:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(22c4f9aab289660f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  791cfca009f2955d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(464505f3aaa7c8b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7955c67672968839:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6c6558e024a2bbd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  797519676fdd34be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(53d7428345dee062)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b45bfc13283af6a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  798420726cc6996c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(54539d026e255ace)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  799eae5517c6b2dc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6446be9c7acecb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cf755563870496d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  79cb787f2e3cc6ee:
    kwargs:
      data: '{data(b0e4500f81ae7f7d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  79ffaca165fd721e:
    kwargs:
      data: '{data(fe423d06d697785b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7a0a3f46896b9e1b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bebbe78377d66f4c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7a894387f6ef1fd0:
    kwargs:
      data: '{data(00d256adab12eb1a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7ac967a2a06481ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cdbafce450193af8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7aeee807fff8312f:
    kwargs:
      data: '{data(ea9d5c822f430532)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7b401c59a4def4da:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7b463f6d12f50410:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da78a007b4a47253)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(33f247f329ec2f3b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7b982616cb3078e1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7bdc19c61648b45e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4e588221bd4da4f4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7bf3ce7f24133ac2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0641fd6557ad9d0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(549e2a8f4fc1539a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7c4cc5a9e3a9a1db:
    kwargs:
      data: '{data(2e04a0f229757c3c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7c4f80f7879cc073:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3c82aba49f30f931)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7c8590abf5389638:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a2ffad98aebaed38)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7c9070e8435e56c9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ca4226dc7370ba1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d082fa3842a8d864)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7cfb93620b57d9f3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6446be9c7acecb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7d3043a9998cf4a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a6ef34d557dac7dd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7d8ccde1aa47b08a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7e0d088807310b4d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(073e82c1a643718b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4906720f0a49ef0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7e6bc95460474b6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ebf0309c5e06f7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ef6b1522c7d8f3e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76df6f7a0f5b0c8d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1535a21874cd29d1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7f39faa3c6497c31:
    kwargs:
      data: '{data(e620eaa8ff69040c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7f92b794921b9c58:
    kwargs:
      data: '{data(822858ba87d6a256)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  7fbed37203dc7093:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(461f73a8a81c4bdc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7fc08f776443bad8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da36c0c78e670cf6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2026dbcb99e2e570)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7fda96b699d938ea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(522a1032ac476f7a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  7ff95f8bd64678cd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80086_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a707a09ee8d95a55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(9e518990ba48f619)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(583120ece556d022)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.554
      maxLongitude: -168.586
      maxTime: '2008-05-16T15:54:00.000000000'
      minLatitude: 57.415
      minLongitude: -168.99
      minTime: '2008-05-04T10:16:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/80086_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80087_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a59494d28584151)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(38a43b8f0406564d)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(b794907b711fc25c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.194
      maxLongitude: -169.492
      maxTime: '2008-05-07T00:08:00.000000000'
      minLatitude: 57.075
      minLongitude: -170.289
      minTime: '2008-04-18T09:31:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/80087_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80088_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(359315982a768081)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d9b7ce3df9fe7b57)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8b95bc1e97ee673a)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 56.104
      maxLongitude: -160.704
      maxTime: '2008-12-29T09:33:00.000000000'
      minLatitude: 55.73
      minLongitude: -162.857
      minTime: '2008-05-16T18:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/80088_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80089_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8e6e9638a1fd046a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(86e8e2c5e34d5f03)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e2640fb1261b3090)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.834
      maxLongitude: -159.331
      maxTime: '2009-01-11T07:50:00.000000000'
      minLatitude: 55.598
      minLongitude: -163.218
      minTime: '2008-05-18T08:10:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/80089_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80090_y2008:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(77e4bfdb6ada4cda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(6c4c95ef6a068dc0)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(e1da428b2df9d552)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 57.745
      maxLongitude: -158.641
      maxTime: '2008-12-14T17:28:00.000000000'
      minLatitude: 55.009
      minLongitude: -165.201
      minTime: '2008-05-20T11:54:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2008/80090_y2008.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80091_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9b952d6b7c4b37c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(c441757b195ea6f2)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(92eb7b89854ad7fd)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 60.188
      maxLongitude: -169.375
      maxTime: '2010-01-17T18:24:00.000000000'
      minLatitude: 56.483
      minLongitude: -175.943
      minTime: '2009-05-10T10:07:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/80091_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80093_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(917520bd725a7dab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(f29be60be9e5e86b)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(8d7fe1cd5ca673a7)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 58.114
      maxLongitude: -160.979
      maxTime: '2009-12-30T23:32:00.000000000'
      minLatitude: 55.458
      minLongitude: -165.515
      minTime: '2009-07-11T23:39:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/80093_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80094_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d4955eb5cab5072)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(d65e343ef291cfba)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(94ccb0fd26daa93c)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.118
      maxLongitude: -178.209
      maxTime: '2009-08-13T04:23:00.000000000'
      minLatitude: 60.0
      minLongitude: -179.087
      minTime: '2009-07-04T16:51:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/80094_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  80095_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dad27762e2324164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(689640134e7189bb)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(9b909f1ca430d545)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.751
      maxLongitude: -168.4
      maxTime: '2010-02-26T23:51:00.000000000'
      minLatitude: 55.002
      minLongitude: -196.591
      minTime: '2009-06-20T02:29:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/80095_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8096f4c37615bd11:
    kwargs:
      data: '{data(db6e329ab71af6f1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  80ef936e85ebd5ca:
    kwargs:
      data: '{data(c66d8cf2ff60fd46)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  810a25f505c93245:
    kwargs:
      data: '{data(faa32262b9f545e3)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  81279d38e30575b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3aecce85a44d6913)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fb53186951ec20a5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8133f7dea72a14fc:
    kwargs:
      data: '{data(f6cac895f32e3538)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  814ba9a61781ebd2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(917520bd725a7dab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  81866db1b9eba3d8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  81a7cf46c6b8ff81:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(974f37ce73bcf080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(36c093a75c403e79)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  81c97925704d7ab4:
    kwargs:
      data: '{data(738cca8ff606ed03)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  81d6e67ac6f3cd22:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  81f3f8cced815368:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6516061bdf1500e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  821dacb6d78e8447:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d732172b7a29155c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  822f1e044dfb8b76:
    kwargs:
      data: '{data(98b94fcf8454becb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  828e30f9fc1c2a17:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24f35e9ae485cece)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  82daabe751e4a00f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  82e899b29270a35b:
    kwargs:
      data: '{data(08e1048a24643911)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  82eb2f9ca3e6b972:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fe2fda28678681b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8338381c9c1d1b6c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7251589b2f8bcae5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  840a5a22a5d75eb5:
    kwargs:
      data: '{data(194969dd332958ac)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8420283c93607224:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  843a0fac153389b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  845ea8f3781102bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8e4ce4ead600e489)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  84a8ad9c4ff81b3d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b4bdcc668a73c72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a9278ae97c66d529)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  84ba9592a0de9acf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e41363592d4b807)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8524d70928f5f8f6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8559bde098fd5fc0:
    kwargs:
      data: '{data(4a061b8d41762384)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8577d021a88b1a61:
    kwargs:
      data: '{data(463642ed3268015f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  85ea237f4b62ba9f:
    kwargs:
      data: '{data(aa8c237924ba0202)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  85ffd365be74b051:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  861e0314015e36bf:
    kwargs:
      data: '{data(c4723c82b8e9f9b9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  862f4e5cac5f2d56:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24f35e9ae485cece)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e01e21a98eb55ba)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  863794ebf46c567d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(89de2bda7b5fa03a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8646b5fee8fd9c98:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(064f730a4031ff75)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  865c4e20e7afb3c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  868b90db26d71604:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(67791a31703de2a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  86adae6d96dc85a5:
    kwargs:
      data: '{data(e99b265255b7c297)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  86e8e2c5e34d5f03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8e6e9638a1fd046a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8750625b49ab490b:
    kwargs:
      data: '{data(c0f803c5cb9863da)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  876b92d534471d7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1688312322cf2a86)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  879c917650e7a596:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  879e92f9c29dc59b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(eed6fa8c6b221ea0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  87d6d19b4280be9f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0ad9cbf6d4f6a04e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  87de1bea881b9e9d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  87fb5a35e8fcbdcf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(12d4628a3a1542a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8827f75ac73bb4b6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d10c502184a296cc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  88534553cfce4c64:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(617d54b5089cbc7c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3cc18ae82e3d4c16)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  885f2b5d399ab11c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43cbff890c4c1dde)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8864f3be110fe262:
    kwargs:
      data: '{data(80287b2e5b6839a2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  88f1b30d8fd4429f:
    kwargs:
      data: '{data(68e4a0c2603fdcdc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8906a88d8f5e8405:
    kwargs:
      data: '{data(79912cbdda2e4df4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8920ba9356e29f19:
    kwargs:
      data: '{data(dd6439f5c1e02076)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  892d5bcd1ec84e5b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(28f16e461659b5a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8999b24776b87c11:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89a9ec022887debe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(67791a31703de2a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(519849caff05125d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89c2d8a43622f231:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6348e59337f00f30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89cd22e5ff35e6e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55a6ccf88599e78)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(57f29fe6a0c0ba0e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89de2bda7b5fa03a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  89e3b699b5d494cb:
    kwargs:
      data: '{data(6bfd3f3df3fcf6fb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  89f436af63accfb1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4d0818999effb26e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8a59494d28584151:
    kwargs:
      data: '{data(ec17bf96789a702d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8a8dcf523b2a4cea:
    kwargs:
      data: '{data(dbe2fe49c0d6327a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8ad3ffd88e60b7eb:
    kwargs:
      data: '{data(530463e5d7efa683)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8af333b6a7f54f05:
    kwargs:
      data: '{data(51194d97257ef21b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8b33ab01367cab5d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b321ca5a7e6bd5a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8b687b1a757f2cb6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a9ff213ac527650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(61d3db54f90d7b90)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8b708e55ed82fa5d:
    kwargs:
      data: '{data(5e9999a7e699e68b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8b8f0e330c1d01f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ffd6ffb203bcf110)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e2eaf9a108fa2d5b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8b95bc1e97ee673a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(359315982a768081)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cdbdb8f476756d16)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bb33032e15053c4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c55ab1bc64e43b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bb410c7ed24a2b7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96d51fb7975f8b60)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bcd12cf04b73889:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(107c5e6592bed848)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bdb9b2ae6409675:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5b6d7c50de1c9c70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(26403cfba12360d7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8bfd92f8c75b0e30:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(726a7ddf9595637e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8c5851372ef02120:
    kwargs:
      data: '{data(a2e69af5c8aa83c1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8c7fca51ccd1f6d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8ca266193b6200dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1ef9d313c590b2cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8cc630fda17efe3c:
    kwargs:
      data: '{data(7e3ee610e6b30f63)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8cca0d37edbc8c05:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ffd6ffb203bcf110)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8cd2bbb5a9ccec03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c16fd3af208aff1d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d2c47fca47c01e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c02d488c8c567b35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d7fe1cd5ca673a7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(917520bd725a7dab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(814ba9a61781ebd2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8d8d41a70081490b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8dadb4c174870322:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ad3ffd88e60b7eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8dc511922e34191f:
    kwargs:
      data: '{data(6d1e12a3d86ed42d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8e4ce4ead600e489:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(746f565fb309c0cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8e6e9638a1fd046a:
    kwargs:
      data: '{data(9e69bdb24d016c57)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8eaabdc5d4558cd7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8ad3ffd88e60b7eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8eae2f7abe2ea31d:
    kwargs:
      data: '{data(8250c777a5fbaf8c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8f314e6fdd20e074:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9eb786b0862a85b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f3d77ab7cb69b3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f53c74231f76348:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f6fc5c93cf3dcaa5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f54840d9147ec6f:
    kwargs:
      data: '{data(e333c83e88c1bf76)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  8f8736fed1683056:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(726a7ddf9595637e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8bfd92f8c75b0e30)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8f8b9f794cfa8873:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9770bf69ab6748f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  8fbd1430e03bf914:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7ad9eebe4270ea9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9008dd01002fe681:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8750625b49ab490b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  903f66b69277bea4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8559bde098fd5fc0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  905491b6cd51dd94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f1f38e9b7741deb3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9090be15d2026fb4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(31b8544aaafd7805)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(63a67412d9d60c2d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  90ce0a12d430fd70:
    kwargs:
      data: '{data(41111e51752218d0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  90ef2db74d38367e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85ea237f4b62ba9f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91163a0cd7b160b4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0467c3e3115b6091)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9124dd97dbececbc:
    kwargs:
      data: '{data(2c38d602b0189b26)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  917520bd725a7dab:
    kwargs:
      data: '{data(016eaf37f4e88816)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  91830f5735bf93e4:
    kwargs:
      data: '{data(102156a564a096ad)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  918b6b0396954a6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(20fd0dda9a6b4d88)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bbfa8eeed68c9e41)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  918ee7d3325cab26:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ad8bcaeada467c8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b14240e7e4bc5b78)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9194c072edaf47e1:
    kwargs:
      data: '{data(c4eb286ec741be33)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  91991_y2009:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac84ae3eedbc9c0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(61334641b7c1c99f)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: 40
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(580e79307c27a10e)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 61.642
      maxLongitude: -169.038
      maxTime: '2010-02-01T15:54:00.000000000'
      minLatitude: 55.217
      minLongitude: -185.744
      minTime: '2009-05-08T20:32:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2009/91991_y2009.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91992_y2010:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(19f40742cbe2ed12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - columns:
          - year
          - day_of_year
          - time_utc
          method_name: drop
      - - '{func(intake.readers.transform:Method)}'
        - []
        - longitude_E: '{data(e0c4b55ac721edca)}'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - depth_m: '40'
          method_name: assign
      - - '{func(intake.readers.transform:Method)}'
        - []
        - datetime: '{data(6cc6debc23902814)}'
          method_name: assign
    metadata:
      featuretype: trajectory
      key_variables: []
      maptype: box
      maxLatitude: 64.416
      maxLongitude: -170.573
      maxTime: '2010-09-19T00:48:00.000000000'
      minLatitude: 59.902
      minLongitude: -179.75
      minTime: '2010-05-19T20:52:00.000000000'
      plots:
        data:
          c: null
          clabel: ''
          clim: null
          cmap: null
          coastline: false
          color: k
          geo: true
          height: 700
          hover_cols:
          - longitude_E
          - latitude_N
          - depth_m
          - datetime
          kind: points
          legend: false
          s: null
          size: 35
          tiles: true
          title: ''
          width: 600
          x: longitude_E
          xlabel: Longitude [W]
          y: latitude_N
          ylabel: Latitude [N]
      urlpath: https://www.ecofoci.noaa.gov/drifters/data2010/91992_y2010.asc
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91a721fa6540dbc9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(482fa0bf78f5abb8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91aeb67b9b52c7e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(afe05fe214bfeb7d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91aeda9cb6392a50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9b79f42cbec2820)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  91df58c1f89d7f12:
    kwargs:
      data: '{data(be3eaf99596d37d4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  923a4565722fd880:
    kwargs:
      data: '{data(b71876475c1d6fbe)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  927ba5eecc59d2cb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92b7ced48eac44fe:
    kwargs:
      data: '{data(03acd0bdcc3ad772)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  92e3a3e4ad9ec85f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ef3310a90aef9c2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92e966670d6d6d0c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92eb7b89854ad7fd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9b952d6b7c4b37c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(63378317bbdbc5d8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  92ed9be1ffa6a38e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a489d7eef8dd0ede)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9307a232f307fa10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  930efc02291dbdae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee5c27f9a78319b0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9353d2b022b34f3f:
    kwargs:
      data: '{data(d797205072b2ab78)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  936e7c95359ac2a7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a489d7eef8dd0ede)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(92ed9be1ffa6a38e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9375a82f9671b58a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73dd4db3d47897dc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9447251a45f4f8c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(85ea237f4b62ba9f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  94af8b3640df7e86:
    kwargs:
      data: '{data(ebf9a62ed26ced44)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  94c4aab56cf39408:
    kwargs:
      data: '{data(979d1f922acf19bf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  94ccb0fd26daa93c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d4955eb5cab5072)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b967def4ab40a6fe)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  94e730aa087d088a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24b87d5dbd31fb37)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  950a44b3b672cf06:
    kwargs:
      data: '{data(3039b8409f989a30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  955f40507952afc0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5202fa9e9716d75e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  95731ac97b68adaa:
    kwargs:
      data: '{data(3d94b27c58ec9d77)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9585c1851a5ec934:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac854c86751713ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  95880ada4504f65a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5299de5f5da8127f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  959078813e52974d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(43cbff890c4c1dde)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2dc6cf99135feb38)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  95c72fbe8fb42da4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aabed94c4cd9ddc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9626532293534a8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ed678069c8806e58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  964e11cc6df4d501:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c765913753fdc60c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  969364ecce1ca069:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3bc4fee0107d8b82)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  96c2e772d7a0a361:
    kwargs:
      data: '{data(3a82aa5cb245c12e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  96cc179218c460d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24d038e5e10d8eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  96d51fb7975f8b60:
    kwargs:
      data: '{data(e774a98cae3bceca)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  96fcc5b034cbfbed:
    kwargs:
      data: '{data(8998572efa3f0047)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  974f37ce73bcf080:
    kwargs:
      data: '{data(e5dcbc26f5eb4b8d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  975d9fe30380382d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c595c4746f8685bd)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9770bf69ab6748f9:
    kwargs:
      data: '{data(9d7995d89c7f445e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9781a06cc1109f07:
    kwargs:
      data: '{data(504b6d23b90a6289)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9792e25f43664f0e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cd80a66f3e7f650c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97aa6f5d7e7471c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(861e0314015e36bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b152472399343c28)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97d93724aaacded3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(045da5c6f6472cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(f105ea6eb2a238ab)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97da7734959d08a9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f6f593402e75edb6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97ea809ac211ab1c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5202fa9e9716d75e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(955f40507952afc0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  97f40367c07eac04:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9837bc1fb4df7d0f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f860c04cedb40f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  983e1d044bb9c0f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(050a7a15076744d1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  986a900207eb2b03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(66ef57392e28a8fe)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  98dc123d48013aa1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f54840d9147ec6f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0aaf9ca5258cc15b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  98fb4de35c2d79aa:
    kwargs:
      data: '{data(06e90686b379b76d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  98ffded4aba32b55:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c301ef274ce9b72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  996b85c6989677b9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a8dcf523b2a4cea)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  99d423271d35231f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(840a5a22a5d75eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a134d49a15f14ca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fb1551a6f8f09650)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a2759361b393818:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6c301ef274ce9b72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(98ffded4aba32b55)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a2a98a8a64b07cc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f79c7cf6b593a70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9a7129c4771ecc73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a8eca7e05c9a5926)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9ac7a9b9c6190b55:
    kwargs:
      data: '{data(79f467a44fcf0db6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9b149593038355e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b461de7b372d143:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(00b7a4be66bedb13)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6580a6018e34868e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b4c90451d42a1d4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(079b3b61d01038a3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b501ad5e35aef0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ceabc8722b1c8184)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b7ecf297cabbbab:
    kwargs:
      data: '{data(e7b2643cc2227804)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9b909f1ca430d545:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dad27762e2324164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(409beefd8d411c10)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b9453f77e12a0c8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63115be7702ccaae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9b99ddff0939cc68:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf6cdc9f793ea667)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9c1d3157ead089f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39b601d496ca66a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9c3674c14f9f2788:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(392fdb2b07df4b67)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9c5ac557304185d7:
    kwargs:
      data: '{data(2bf37ec173d5cba8)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9c8812acb8be2b8a:
    kwargs:
      data: '{data(6bde4ecf27c86248)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9cb010dea67a259f:
    kwargs:
      data: '{data(63827a55f353bd93)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9cf2e431bab1adea:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c4cc5a9e3a9a1db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bd9fd3ec644c7428)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9d84b44e98e08bf0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(95731ac97b68adaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9d982810efc8d825:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9781a06cc1109f07)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(113bb6b7b6650708)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9defe4159bac54d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8954f7138daf5ca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e00a0d400f3df7f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d082fa3842a8d864)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e2a338178d336c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a7696f96bcf1b58c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e2a80d9e58b4a46:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a4c7eb48b102b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9e518990ba48f619:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a707a09ee8d95a55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9eb786b0862a85b5:
    kwargs:
      data: '{data(92717cbbb53efb41)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  9ecf766b3ce3408b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f0b74da7ae23f97:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f157639b1e9a59a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7fde63e298c41cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7e6bc95460474b6a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f3bfdb5848118f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8a51b04e5cc470e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f809d8c6b85c57a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f852e0c022cad62:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(156b7f173d2291f3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0854a5e6a2595d37)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9f9bfb8ab86d464f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7605a3f7dde7f46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  9fd671b22b2f0179:
    kwargs:
      data: '{data(878e492709c70f0f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a01c9b6892410238:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(141f094d1114ba72)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a037a5bf15020781:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c7122f85c71b725)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3271d25698b61ee2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a069e2e31115a266:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(253a6309e6941152)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a0976b270933445b:
    kwargs:
      data: '{data(cdbd22bbbcec5c02)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a0cf183baa6da983:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ede12653a2d9a984)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2841cd07e060185f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a132ee86a414ca89:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8559bde098fd5fc0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(553537160183bd3f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a1b3c76fce7df0e4:
    kwargs:
      data: '{data(942ae527a06f2722)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a1d00bcbafdf0cb1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8af333b6a7f54f05)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a2066e73e7d7f437:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a206cedd244c5a86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d385376149971c21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(85ffd365be74b051)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a21133d671780d8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dcfbcf0ccaf25b93)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a25b81da76230984:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(78d21cd77cf60096)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a25bfd9212321f73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a261c16e6c45b12d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91df58c1f89d7f12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5b745bb98957efed)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a276983831e274ce:
    kwargs:
      data: '{data(ae8da310999d4e5c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a2df726b4556e90e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b92317e41e8f5e1e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a2ffad98aebaed38:
    kwargs:
      data: '{data(ab0b2d964090f98c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a329f87ce5cc05f1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79ffaca165fd721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3340da04ce536d5:
    kwargs:
      data: '{data(fe900ae87233d68b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a3cbb392a388fb66:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(be67093ace4926b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a3ffccdb5c3be308:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a418e89a0bc616a4:
    kwargs:
      data: '{data(69398aa2624b3c03)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a44b560232afb253:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8f54840d9147ec6f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4753448f9b2a81d:
    kwargs:
      data: '{data(6828b0804f38800e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a489d7eef8dd0ede:
    kwargs:
      data: '{data(f799e817baf18ac7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a4906720f0a49ef0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(073e82c1a643718b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a497d7a653d6c7e0:
    kwargs:
      data: '{data(73e64c4b883a6ffa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a4b48d0553c14c41:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(45a0038c4da421ac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4bb6f8525d7936f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4bf7c380140de1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4d0435f2b7274ef:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa3f85c92f149b7f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(54b1239b68c5aac8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a4e339525fabe46c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(29f77920074cbd7d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c0859c2db1c7048)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a506c337ce073c39:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fe2092b780591500)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(477dbf2ba38536cb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a52441e85302021d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9fd671b22b2f0179)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a5351a2a817eb770:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab73c49b62712bb7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a535e1e3bcb82e23:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a276983831e274ce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a550f733380e9553:
    kwargs:
      data: '{data(e507e5cdd0d8a57f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a5892e8ff8620720:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aa329239f794dfd5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e1d481b19f7c29b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a59227cfda19f107:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0641fd6557ad9d0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a5fc5989abdf4773:
    kwargs:
      data: '{data(95108a45d1a0bbc5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a60506c358465591:
    kwargs:
      data: '{data(af51edc0a933dbcc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a612bccbb08feb5a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f4315342ac2fab72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a6446be9c7acecb1:
    kwargs:
      data: '{data(b12d35501ece40c4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a6c6558e024a2bbd:
    kwargs:
      data: '{data(d5790cd5c8e0ed35)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a6ef34d557dac7dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a707a09ee8d95a55:
    kwargs:
      data: '{data(cac92ec9f5c8e385)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a761bff8607ef271:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e93473c9d6864ca3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a7696f96bcf1b58c:
    kwargs:
      data: '{data(de5c35842929103e)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a79e63426a1005a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a811620eac1d8a84:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8265d72a4bad44d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a88d9c78cbe987c6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f457b927cb0eec10)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a89119a894087d0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6c2fc996c06d2f8b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8ad5bb6cd8d9040:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5299de5f5da8127f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(45e70535786970a3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8c978a5f4f5a1b9:
    kwargs:
      data: '{data(1b414b59f299e1fb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a8eca7e05c9a5926:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a8fe8e6a67d10eec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cdbafce450193af8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9234a1a94749feb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf1b09f492c489aa)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9278ae97c66d529:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b4bdcc668a73c72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a94d0e413d9acd17:
    kwargs:
      data: '{data(1e7ce44b41acb69f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a94e8761e46743ba:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4620510f1acfb02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fbe43256db0ea72d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a959400d06b1c037:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f39faa3c6497c31)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a977a99a047533e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9a020ea4680431d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9b79f42cbec2820)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fd89feb456d25a1e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9b79f42cbec2820:
    kwargs:
      data: '{data(9ee157f01170d493)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  a9bc216b402c3f28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  a9e6dc239f69c4a9:
    kwargs:
      data: '{data(176229a798bf1faa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aa329239f794dfd5:
    kwargs:
      data: '{data(f2829ba6621d1fa7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aa6ccb2d27c2bace:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560b3822db531cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aaad6ffce65f4afb:
    kwargs:
      data: '{data(916842dca5e4799f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aabed94c4cd9ddc5:
    kwargs:
      data: '{data(f5012cd57de43505)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aad0254273c00518:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(afae26634eee4692)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aad1e4f03eab3e9a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b4e459b34aa9b164)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aad962bed8775b7e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  aaf9f44275fd1a63:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91df58c1f89d7f12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab090ce160185087:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab1d0f4518896f87:
    kwargs:
      data: '{data(f7c8edd5a905cf37)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ab32514241cc971a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5202fa9e9716d75e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab6c862d33bb5e18:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9733a3405aba19b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ab73c49b62712bb7:
    kwargs:
      data: '{data(c52784e076b6cfe0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  abc455e233e540bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9b7ecf297cabbbab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(70e6763ac448405c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  abd3790a968e5bb5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd8487b0c10e8223)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9b149593038355e5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  abe301d787f6338f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac32b7b592cb7d29:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bbab0253f8fc0cb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1341aec5b3ed3ea8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac3a9d42d6864b80:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8906a88d8f5e8405)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac4049141ce0ac3c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e257cc20ef178176)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac6a5ecf0d316d77:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(02822dbe41b09cbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ac84ae3eedbc9c0b:
    kwargs:
      data: '{data(8f6bcfc1a4aa6dae)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ac854c86751713ec:
    kwargs:
      data: '{data(f2f3ed29a2903506)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ad6513048c8fcf24:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b0d23ac65e40eeb2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0afb4470ded4cb4d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ad667e49b262d9a9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8d9af992c31a990)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5ad3da76468dec4f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ad7d5b97ec20cec9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ebbed79bbad61dd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ada1219644dea4f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f6f593402e75edb6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ade882a0277327f0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(658e5acbbb30f909)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae26a27a165d8c5a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(88f1b30d8fd4429f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae55b26d2a9bb4ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(514b08322803c977)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae5a48d5bafcdff4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4e1fad2dbeff92)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae7104e10f95239c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ae9ced02626581a7:
    kwargs:
      data: '{data(983fa67f27eb1325)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aeb4f9e463363080:
    kwargs:
      data: '{data(fe5347c342f50f53)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  aedf3186ec0e8b42:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e4e1fad2dbeff92)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ae5a48d5bafcdff4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  af1902662902a790:
    kwargs:
      data: '{data(b15cd7ed916f91ba)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  af22cb11c2c610b5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7c424fd0618174a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(13ecd593cc0b32c7)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  af4cf2e3fba4b4ec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(514b08322803c977)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ae55b26d2a9bb4ee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  af6c937c28e319dd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  afae26634eee4692:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  afe05fe214bfeb7d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d39812b570a53e00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b01172057c138e1a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b476760c73c93e52)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0129444bec736a2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79cb787f2e3cc6ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0187c84a8767bac:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a79e63426a1005a2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b019c17863a19723:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0467b7fc964c489:
    kwargs:
      data: '{data(4bdf9f12137f20e9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b08473a1ca92032f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(384e1dce169d2dcb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b09291bd8097ec75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6bec0561a05982d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b09603e5e8d306e6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b09c1a32696bcda3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1f860c04cedb40f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(698ae586d14a242d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0d23ac65e40eeb2:
    kwargs:
      data: '{data(2637e77e54e5b6ef)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b0d976d117287115:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0bf1f0ded454dd68)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b0f07e4217591eb2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d5bfa067e1b3c955)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d0cb02c08f6e07ba)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b14240e7e4bc5b78:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ad8bcaeada467c8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b152472399343c28:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(861e0314015e36bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b1911eb62a7d1e98:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d42dbb8434f6bd00)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b1e358e31f7b3093:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9cce33108606fb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b20c34f6a6392388:
    kwargs:
      data: '{data(b156e0f61491ba1a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b23a02beddcfabe3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(94c4aab56cf39408)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5e3bfb11d7749584)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b284dbb6df3cc529:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0c7eea200a721554)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(421c023e00dc2e83)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b2ce9577a1479de7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(77ac1ea1366b0e9e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b321ca5a7e6bd5a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b3959fcb76ff68c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(045da5c6f6472cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b3d952a14a5330eb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b3fa5639c9ef34d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b44339e9c296a503:
    kwargs:
      data: '{data(ee66c60f7ca68ef4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b45bfc13283af6a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(53d7428345dee062)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b476760c73c93e52:
    kwargs:
      data: '{data(da5ec63dbbb8a066)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b49e523d1783c149:
    kwargs:
      data: '{data(fce93ea3d3801f28)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b4bc96ad835b5b75:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a8f59233452374b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(217fce4157e0ee48)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4c8ad7a13ea6430:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(658e5acbbb30f909)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4d0b5e10189b5c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8133f7dea72a14fc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b4e459b34aa9b164:
    kwargs:
      data: '{data(38fc4611fa0b0e8c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b4ea4a7024b9d513:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e6f7fcf8bd4b7705)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b59113bc4ecd9cfd:
    kwargs:
      data: '{data(9384424883e11e55)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b596b7febf2b8ab2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0902533b6cd7197d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a977a99a047533e5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b5b390bb67fad601:
    kwargs:
      data: '{data(97738571d128a554)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b61e59eb8583d9b1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd42489261ae92c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b67192bd6200b959:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96fcc5b034cbfbed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b6e032b782b9a3fb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(cde453d3af6dc6c1)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7556e816ea74ed2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e415c6316f78489d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b785b3e20b24ca05:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a247fc519be5ff6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6643e8df979ac170)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b788a571540fae62:
    kwargs:
      data: '{data(cbc84645a77e045c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b794907b711fc25c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8a59494d28584151)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2eeeb27127c19fbc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7bbc38361b15302:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7bf85b315fa5ddd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8864f3be110fe262)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b7eb4a95744ac998:
    kwargs:
      data: '{data(1b5cc335595d323d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b7fde63e298c41cb:
    kwargs:
      data: '{data(f9b424d0a2842417)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b8191fae135dbe92:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0161cdea0006e8d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b856e86243cc561b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c8812acb8be2b8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b85de1be8757d702:
    kwargs:
      data: '{data(a311322ad5d29168)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b8752f2207996d97:
    kwargs:
      data: '{data(3a09839512267caf)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b897bdfdcbf30615:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6d251e5b7efa3a74)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b89ce01573c7b36e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(24d038e5e10d8eb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(96cc179218c460d4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b8e31306c5da36a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b8ed67cf90b939d9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ad1a5af7546cca8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b8f7b779085a795f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ca76eaaab43b6651)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b901c5b56795a406:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a3340da04ce536d5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b92317e41e8f5e1e:
    kwargs:
      data: '{data(b89316d4854c45b0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b940650b32aecef1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc1076544df2ecca)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b95ee1b542ce5339:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f914fc719da2100e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b967def4ab40a6fe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d4955eb5cab5072)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b995ce0af0093c1e:
    kwargs:
      data: '{data(c55799aa7aff03ac)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  b9f58b0fa0b09079:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41c4f9fc533e25bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  b9f6f2f9778536d9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79cb787f2e3cc6ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fc172350c9d43d6f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ba9aac7392124d20:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9353d2b022b34f3f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ba9bc16612ebae58:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d053c0d9cd013b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  baf3303915ec70bf:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6228a46f1542d7fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bb49d2a7b9f2af24:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b5b390bb67fad601)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(37a890878694635c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bb78762be7250ee2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c26d70ff9cd9280b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bb974dd3124ebe5d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9c5ac557304185d7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbc3e5a07cb3a0db:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(253a6309e6941152)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbc58871e1432ba8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbc5a410956e5c8d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b788a571540fae62)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73831c3127a2773a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bbfa8eeed68c9e41:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(20fd0dda9a6b4d88)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc496e864a333582:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fe2092b780591500)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc497e791403328f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ae9ced02626581a7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc7006869bd072c4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(810a25f505c93245)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc8a14d2cb1168b1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(faf4c6521c9c135e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bc93f5b9580870d2:
    kwargs:
      data: '{data(f9dd6bb76cae117d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bce0f0d70684720c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(409e220413baac56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e25c29e413bf985d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd42489261ae92c1:
    kwargs:
      data: '{data(e6bf31e0776bd85c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bd429e1dc9088808:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f4315342ac2fab72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a612bccbb08feb5a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd7279981376d3b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42f3913a3535171d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd7605a9b219b00c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bd8487b0c10e8223:
    kwargs:
      data: '{data(9beb604bf73b7677)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bd9fd3ec644c7428:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7c4cc5a9e3a9a1db)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  be67093ace4926b4:
    kwargs:
      data: '{data(197195f6fa55edaa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bebbe78377d66f4c:
    kwargs:
      data: '{data(deb91e3d93f8b04f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  bf0838d8c5bde96b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3acdf3d9cb324a44)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf198aed67ec6c66:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4fb876d3531143cf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf1b09f492c489aa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(034299d0877df9c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf36a3a2edee1159:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da362e6d2a36caaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf5c2cf9194fece7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7605a3f7dde7f46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c09a6dad7ba6033a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf6cdc9f793ea667:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bf714fde5236c7d3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4feb44dcf8a9a166)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bfd17dc810ab5fcd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07e00d4cced9b0ae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bfdc203fdb344af4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(77e4bfdb6ada4cda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  bff2c37e2677667e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cb33a61662366e9b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c010d4f3d384491e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c02d488c8c567b35:
    kwargs:
      data: '{data(02e128cc5192c0a5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c08f73fe22636b0f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4d0818999effb26e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c09a6dad7ba6033a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7605a3f7dde7f46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c0a165595b9df657:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e0508459c161894)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c0a30ebe6e785f8c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(861e0314015e36bf)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c0ca7278ee644331:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1bece231ebf0c184)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c7ebf22241e182b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c1156a8064dd7025:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a4753448f9b2a81d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c14cf6694d9a0682:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c1575348dfe4cace:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f1e944c8d81069b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c16fd3af208aff1d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3582f3e1b100e355)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c194341e8bec5107:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b59113bc4ecd9cfd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6424a149fbda159f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c1ad593102b51071:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f4315342ac2fab72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c227b355341b4e69:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c76b2afe867c1c9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c26d70ff9cd9280b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(05bf73801a176ea5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c28bb8d73826103f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2bfa83f6bed2749:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c31a3a0d0fe5cf4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(19075a910d4f86c9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c2d51b028f5237c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecc88f04ddb13aa5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c31a3a0d0fe5cf4d:
    kwargs:
      data: '{data(f2a17809cf7ed3c4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c35bd57988723f6e:
    kwargs:
      data: '{data(2e8c3b26b8b86fb6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c363aecdcda24831:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(822f1e044dfb8b76)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c38a0a9e066b7937:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c0d6d3b5fc825e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c3c2966e68ae7afc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a60506c358465591)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c3ced844ad45774b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c42a71144fc56eda:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5ca217993041f640)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4a5ff4708be2f8eb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c441757b195ea6f2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e9b952d6b7c4b37c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c4ad75d37106739e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(10ccf8b18f8c8a0a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6c063061a384af6b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c4af639d7d5aa60d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea35f1de255308a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5348fd7b46f6e86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a8c978a5f4f5a1b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c55a153ee585004f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c595c4746f8685bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dffa7ff5c29b4fae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5b5015a7bfa4703:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(729240dffbba06bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5d00e31aea10e46:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07e00d4cced9b0ae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5dc7774d005f8f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a3d120fcca504e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(7b401c59a4def4da)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c5ff7a849d551243:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e407770f5bf3e01f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c608d16502a8a76f:
    kwargs:
      data: '{data(16057e930dced4a9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c62604e5a46a3923:
    kwargs:
      data: '{data(6f6634411e23cfbd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c62cd9159417f83e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(321395f9af64b596)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(24e18da3d55eb6b5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c670b1925425396a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(46bcc59e02ce6bd1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c6b632d64d104ed3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f608eda618bf25a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c6c32f3b93ebbfb3:
    kwargs:
      data: '{data(439b46b91b8ba695)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c73eeb774c7d76a5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8cc630fda17efe3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4bb6f8525d7936f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c7431efd40a2967a:
    kwargs:
      data: '{data(0cf3a2ac66422666)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c7649313af1bd668:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4081fbe01a5e6cc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c765913753fdc60c:
    kwargs:
      data: '{data(0a842da40937be7f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c79d04a524b5c5be:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c7a8d2ea0b92c798:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b49e523d1783c149)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73f8ee5c61aa8342)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c7ad9eebe4270ea9:
    kwargs:
      data: '{data(a14d08bb2fbd7830)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c7c424fd0618174a:
    kwargs:
      data: '{data(9b3e98d6506524c9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c7c919efb1d4cf03:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(65b783bedb4b159d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c83dcfc830c3a459:
    kwargs:
      data: '{data(c1cda64678efbf86)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8505df48843b28f:
    kwargs:
      data: '{data(22a7fcc17fac775a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8954f7138daf5ca:
    kwargs:
      data: '{data(9377990511ea7c81)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8a51b04e5cc470e:
    kwargs:
      data: '{data(9279796cd5d49dfd)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c8ad97fd35c67a6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c8d9af992c31a990:
    kwargs:
      data: '{data(5c7095cf7afd4703)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c987b6f7532e644e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(720bb55eb3a9be30)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c9aab4739be933b8:
    kwargs:
      data: '{data(207e9038aff42e97)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  c9ce67c298dd74e5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1ef9d313c590b2cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  c9d586abcd1bb3de:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca226e04db5591b9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f4b0b9200d6e88a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(73fd051bfef02540)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca5a9fb0e2e3317e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8c5851372ef02120)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca69e08b6730b59e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5e86da0a3d4b255b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ca76eaaab43b6651:
    kwargs:
      data: '{data(e38f5769e5b845de)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  caa174644edc776a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2ba9f2c3ef3d9424)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cab4107de836ae7e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3e6f937eb342d566)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(04555fcdb80370c6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cad6ee4184a84316:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4c55ab1bc64e43b9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(433976e402292b8d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  caecdcf4a4368235:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d082fa3842a8d864)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9e00a0d400f3df7f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cb2cfbede6c52914:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8505df48843b28f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cb33a61662366e9b:
    kwargs:
      data: '{data(282b6056b126f4c2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cb44b6d7adb11d21:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ed678069c8806e58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9626532293534a8b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cb646ce683bdda3c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d5bfa067e1b3c955)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cba38ccb38ed1417:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(560b3822db531cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(aa6ccb2d27c2bace)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cc1076544df2ecca:
    kwargs:
      data: '{data(4ad5c3228fe981e4)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cc535d3943343513:
    kwargs:
      data: '{data(29800418bd51f48a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cc77ab8ed218da5d:
    kwargs:
      data: '{data(cd19e6a74286a5cb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cc98aed50add4eee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(20fd0dda9a6b4d88)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd158f3dd02a689e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9124dd97dbececbc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd35ce3c86f99980:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cc535d3943343513)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd3f2445bc6af9e9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cd80a66f3e7f650c:
    kwargs:
      data: '{data(0f7cb5bc9c942dc9)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cdbafce450193af8:
    kwargs:
      data: '{data(c695e2fa59c922bc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  cdbdb8f476756d16:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(359315982a768081)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cde453d3af6dc6c1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ce042da142e0cd11:
    kwargs:
      data: '{data(7d5ba0f492ab5fb8)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ce236ed29af2a1b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0abf7654e1d1aefe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1d4723efd7d2abdc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ce24d5408b5a96d1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(39d863e26a959ef2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ce301e1531c7b15d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(21790b4375704208)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ce329a845fe06ab9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(be67093ace4926b4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a3cbb392a388fb66)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ceabc8722b1c8184:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dab7fff2f581d681)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cebc92b35cb1baae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e62fdb0b3d24a03e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ceec6c4e04541dd5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dfc792f2d209c00b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cefcadb1c6cb90a3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cefd1db5af26afc6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6516061bdf1500e6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(81f3f8cced815368)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cf755563870496d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a6446be9c7acecb1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  cfa27c04f364ef45:
    kwargs:
      data: '{data(a2a292bf2fb8a72f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d02a30a44e5784a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9194c072edaf47e1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2c3a8ac60ef28b68)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d03cb8e16eeaac9e:
    kwargs:
      data: '{data(32859702db0ffa30)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d03e1820cbdd6d08:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7251589b2f8bcae5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d04c1d85b5574ec2:
    kwargs:
      data: '{data(7963ee1eb22a5525)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d05ea4404ecd90b4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96fcc5b034cbfbed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b67192bd6200b959)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d082fa3842a8d864:
    kwargs:
      data: '{data(daaf380f5bc79121)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d08b012373dee912:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e257cc20ef178176)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d091f8eed924d03a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d04c1d85b5574ec2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1ebe00673625717b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d0cb02c08f6e07ba:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d5bfa067e1b3c955)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d0efba3ee7617402:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9e6dc239f69c4a9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d10c502184a296cc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d12469529551a485:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d13ea0b5798194b1:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9770bf69ab6748f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d169b9c330cf54bc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(071a9a6e916e5f3c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d16ea6ee889169d0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b59113bc4ecd9cfd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d1d4cefe2cf38eac:
    kwargs:
      data: '{data(f7675176ae9b5a3d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d1dce7f7e1308447:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e8466c262e941208)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d1fc47daafd70f58:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b44339e9c296a503)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4b71fd9def061d92)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d21d8b4672ec8bcb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90ce0a12d430fd70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d2ca55e3d8410014:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e70cc1078b52eb1b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d2dab81709714223:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d49fc2488257051)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d319251eb07a58ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a34b94a6c9f1869)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e512641d0989665b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d385376149971c21:
    kwargs:
      data: '{data(15e399ff2bd7d333)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d39812b570a53e00:
    kwargs:
      data: '{data(17781d838312df36)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d3d18e98b60ec6e7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2ad8bcaeada467c8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d4140c7047b93bdb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f95d36b4773e18f9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6ce6f0615b08cc4f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d42dbb8434f6bd00:
    kwargs:
      data: '{data(4422281109eceaea)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d44458e870664e6a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a2ffad98aebaed38)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d4c919fef11c1307:
    kwargs:
      data: '{data(685ba6638536e07f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d51cbaced81f5261:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33813f97313d16b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d535a641ad1428ad:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da7c27063d470db6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d55a6ccf88599e78:
    kwargs:
      data: '{data(56c2efba4072026a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d55aaa981bb3de21:
    kwargs:
      data: '{data(7570137f1de8ae34)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d5a484fdf9f4c421:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(af1902662902a790)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d5bfa067e1b3c955:
    kwargs:
      data: '{data(2cb1c3cac85aafb7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d5e4e3833a0994f9:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0dcb09bc3c6f4662)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d65e343ef291cfba:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d4955eb5cab5072)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d695ce9f148e8356:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52c8fd8e2e3a139d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d69a19c4cc3c6719:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(708014282ef8d6ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d6c7fd61f3b63f6b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(064f730a4031ff75)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d6caf72a29ea1a08:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aeb4f9e463363080)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d6e58d34a8fad178:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ba79761b1ee2f32)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d71984af9143ae40:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ecd532faaeac9487)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d732172b7a29155c:
    kwargs:
      data: '{data(e66d68da0ddfb95b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  d7a7dc2d261f8d3c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d1d4cefe2cf38eac)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b8e31306c5da36a3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d81075472f95703e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b4bdcc668a73c72)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d834cfd29b51ac8f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c83dcfc830c3a459)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(475eddcaef7aae6f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d8564ef673f49ce2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8a51b04e5cc470e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9f3bfdb5848118f9)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d8ce6964680fc0c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d03cb8e16eeaac9e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(579cc9a675eeb5d2)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d95bbc1ddcb1c71a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e93473c9d6864ca3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d98e164c3a558d88:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63a3b7d96dc3543e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9ab1e1ae097fc91:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(697ce4b9f35b1cc7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1c7bbec4f5537514)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9ac4c1147914815:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9b09030e1d69a46:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(15cdf50f8c438828)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9b7ce3df9fe7b57:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(359315982a768081)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9d73874ade807ce:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1812975572f1d5bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  d9dc8ec53b5c4968:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(950a44b3b672cf06)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  da015121df9e807a:
    kwargs:
      data: '{data(478b7994e4aa5558)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da1d14b63468e856:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(064f730a4031ff75)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8646b5fee8fd9c98)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  da362e6d2a36caaa:
    kwargs:
      data: '{data(f9fff804a12e8843)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da36c0c78e670cf6:
    kwargs:
      data: '{data(9c99e80c267b62d6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da78a007b4a47253:
    kwargs:
      data: '{data(724d9d292b9d2526)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  da7c27063d470db6:
    kwargs:
      data: '{data(ed5badf7ee89cbf7)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dab7fff2f581d681:
    kwargs:
      data: '{data(043927c94147d362)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dad27762e2324164:
    kwargs:
      data: '{data(30eda14cbb1c9d14)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dad7849dcdcff82d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36d2c15488d05074)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db256d90150c1ef3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(81c97925704d7ab4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db2f557b255127c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(38e2603589ec4cc9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  db903cceb1033baa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ce042da142e0cd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dc5d4a373497e4a8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(16b92dcb1cfbf46d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dcfbcf0ccaf25b93:
    kwargs:
      data: '{data(b2c0f685bd78596a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dd04ce475c9bb7e0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dda2b94dc47eeebd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(92b7ced48eac44fe)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ddb8e626cb30b49e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fa2ed5bf20ea8cce)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dea615c0c11db163:
    kwargs:
      data: '{data(4c0f534afb636ca2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  df2d641605c186c0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(cfa27c04f364ef45)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  df3ebfaf0fafc832:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6d251e5b7efa3a74)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b897bdfdcbf30615)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  df44d03b28849766:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7251589b2f8bcae5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8338381c9c1d1b6c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  dfc792f2d209c00b:
    kwargs:
      data: '{data(0298ebbd319be488)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  dffa7ff5c29b4fae:
    kwargs:
      data: '{data(2166f39b284b0817)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e0540022fc37909c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7ad9eebe4270ea9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(8fbd1430e03bf914)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e05c9c2d4bb099ae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c35bd57988723f6e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e098c446be2a3f64:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(464505f3aaa7c8b8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(791cfca009f2955d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e0c2eb07df4355a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(62ea7d69eb2e5fef)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e0c4b55ac721edca:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(19f40742cbe2ed12)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e0e8670d8cd9af4c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(73dd4db3d47897dc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e14c48acc2b0c967:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(98fb4de35c2d79aa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(97f40367c07eac04)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e18c88debcd25425:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(41c4f9fc533e25bc)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(b9f58b0fa0b09079)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e1be8de2c3df528a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(21790b4375704208)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e1da428b2df9d552:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(77e4bfdb6ada4cda)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bfdc203fdb344af4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e1f1ab8dffd285c4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a707a09ee8d95a55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e21b336cbdb75dd3:
    kwargs:
      data: '{data(9be3b763172b3c69)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e24193181053c333:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e257cc20ef178176:
    kwargs:
      data: '{data(06a45bcea4883333)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e25c29e413bf985d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(409e220413baac56)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2640fb1261b3090:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8e6e9638a1fd046a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5b7d5bc7fb3f06bf)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2d6c1f2a4d3137b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7563b1a376db29b5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2e81a84fc7e7f86:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96fcc5b034cbfbed)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2eaf9a108fa2d5b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ffd6ffb203bcf110)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e2f847da93ed24f5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(117fc571aa6f1742)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e36c3cf7fc0e2c04:
    kwargs:
      data: '{data(55770fd2c32cb94a)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e3865fd7fa3af600:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e3b03ccc8a9697d4:
    kwargs:
      data: '{data(c21c1c5556dbe29d)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e407770f5bf3e01f:
    kwargs:
      data: '{data(ecc0945f280b9e3c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e415c6316f78489d:
    kwargs:
      data: '{data(eac720dd0f31c073)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e415d350bab2943e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc054a9521566f9d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e4620510f1acfb02:
    kwargs:
      data: '{data(b9e4589447567d33)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e4b697fc60adfc85:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6ce2465a0371721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(42ee777ee88bc9fb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e4ea60769f8178c4:
    kwargs:
      data: '{data(9577c74ca3bba84c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e512641d0989665b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a34b94a6c9f1869)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e539ac9543c5b805:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(63a3b7d96dc3543e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5a9a59f3f076553:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b85de1be8757d702)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5e0b8e66b7b2360:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d9b88ed09e193a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5f5ef5222aba4bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eae5e740de77c407)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e5fbc32a4dfee86e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8eae2f7abe2ea31d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e62fdb0b3d24a03e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2573f0d3835ca5c3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6c8ced76db35bb2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4a336279f1703c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2886bea5055a1ce6)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6e4773ebe220ed0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6a34b94a6c9f1869)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e6f7fcf8bd4b7705:
    kwargs:
      data: '{data(d44b6d3ca83b8cd1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e70cc1078b52eb1b:
    kwargs:
      data: '{data(d82a0dbbebda8d17)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e73e0ecf0bb7bee6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d9b88ed09e193a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e5e0b8e66b7b2360)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e82a54fe3b899e63:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(52c8fd8e2e3a139d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d695ce9f148e8356)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e82fd4afec0ecef0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1726ec4beefb876d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e8466c262e941208:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76aca103021ee2fb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e87f912e5c728736:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(36d2c15488d05074)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e8b7ac0b7326e8f6:
    kwargs:
      data: '{data(f9728a6f4c23eb6f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e90921ced1b03603:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c765913753fdc60c)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(248c060c4d37eda8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e9183c26eccd0652:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8d9af992c31a990)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e91da9a59154c53a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(91830f5735bf93e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  e93473c9d6864ca3:
    kwargs:
      data: '{data(0613a7f495846322)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e963c114b08bbeef:
    kwargs:
      data: '{data(fa7d9823bf63e3eb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e9733a3405aba19b:
    kwargs:
      data: '{data(17dc7dc341ff08b5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e9b952d6b7c4b37c:
    kwargs:
      data: '{data(f76c1bb2d2125f5b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  e9cce33108606fb1:
    kwargs:
      data: '{data(6159e2fe0f19bac0)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ea35f1de255308a5:
    kwargs:
      data: '{data(b7ea0e1ffc30f50b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ea59289de3ef34ed:
    kwargs:
      data: '{data(38a2eaf3e46f4b3b)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eae5e740de77c407:
    kwargs:
      data: '{data(e4e0fb2a2b1cfee6)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eaedc8d243549e0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(502b3d08f2628e6d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(11bb7059a073e738)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eaf1094edee66913:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c7431efd40a2967a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eaf1dfb8edab9e44:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e544bef5cbbd70f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eb2980b8892c2aab:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(705b2f6727223b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ec16a7db698bb930)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eb9170d863748599:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ac84ae3eedbc9c0b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eb92a0737a866a4d:
    kwargs:
      data: '{data(0ddfcdfb791ba9b5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eb97d70709a9f247:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fae7c8e508436a1d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ebaae50c9beade8b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(60cd596df3132df0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(e3865fd7fa3af600)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ebd7667ce9935f7f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(d55aaa981bb3de21)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(60fbb611791bd6e8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec05fa821cf4ac3f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(61433728bf950915)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec16a7db698bb930:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(705b2f6727223b27)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec5162a2ac58072e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(18d8181cd9babacb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec5e4a2d9db74fb5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da362e6d2a36caaa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(bf36a3a2edee1159)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ec98d74c47f47944:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9ac7a9b9c6190b55)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecb2068a00f90a50:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2667ebd9fffc2ea7)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecc88f04ddb13aa5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(04dd6616c1245183)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ecd532faaeac9487:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3c2efd05ed55c9cd)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ece47b551cf4ee98:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(fc6057da25ddb109)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6efc2b73350293c5)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed1a1b7a62bd5214:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3a143f47e1c9f2a1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed39615a5140eb73:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(82e899b29270a35b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed3f7e63f4db3a0d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3aecce85a44d6913)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ed678069c8806e58:
    kwargs:
      data: '{data(0df56d8df6a22716)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  eda4eb8b0ffd8987:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(392fdb2b07df4b67)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ede12653a2d9a984:
    kwargs:
      data: '{data(97637ffeb27109aa)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee4cf0a05c36afd6:
    kwargs:
      data: '{data(ddb358bc9fc4b0fb)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee5c27f9a78319b0:
    kwargs:
      data: '{data(dac7f0966a0908a1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  ee70543f011f2dec:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d9b88ed09e193a2)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ee7f74bea7088e51:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e544bef5cbbd70f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(6b5f5f8bffc16eee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ee9071897621fd99:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2d74a9f7ae7402ad)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(664084ff2fd99ecb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eed6fa8c6b221ea0:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(07cb4244815fc6eb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eeda4a7cbf5bafe7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5799ce936b7b8fc1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(507bc6a62aeab85d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eedf9b227f477007:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3004644ee834bbae)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  eeefb7f3b180666c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a1b3c76fce7df0e4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2e313087e6b19cee)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ef22fbf8fbb76f78:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(08f7507254f0778f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(18e8748076e09f98)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ef5126d2b36c1021:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(726a7ddf9595637e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efa803af793c98be:
    kwargs:
      data: '{data(7b3fa9c7c1634062)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  efa8dc135179a876:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7aeee807fff8312f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efbcf8870aac3b19:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33813f97313d16b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fb28fad60dad3a2d)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efc75197fa677c94:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(42cb662ed02a3da0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5fd667f7ab5f31a8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  efd24f2aeae915ae:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3dfcf973a30c5a20)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(33dc19b93127c57b)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f0431bcba0e5f705:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(1c1c447cff6a04d6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4edb26d7cc2e6b72)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f09e8977f6aef546:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ee4cf0a05c36afd6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(2a7d0928ea717952)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f10461e1f7f62abb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(708014282ef8d6ec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d69a19c4cc3c6719)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f105ea6eb2a238ab:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(045da5c6f6472cec)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1ac305022835369:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(923a4565722fd880)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(40dd7a4685b85739)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1bb4cf89d1122c2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ea35f1de255308a5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1f2fecf788d1d64:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f4b0b9200d6e88a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f1f38e9b7741deb3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8920ba9356e29f19)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f22b83c190e2967d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(96c2e772d7a0a361)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(92e966670d6d6d0c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f256c4dd9a2fbfbd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(61433728bf950915)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ec05fa821cf4ac3f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f29be60be9e5e86b:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(917520bd725a7dab)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f2b392602a7fccb3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(38e2603589ec4cc9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4ef80f4fac93a0a4)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3092b5558784c27:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0d154237a9f15c8a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f353b4352acb2030:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6ce2465a0371721e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f36ff97a8923c902:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a94d0e413d9acd17)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f37d1fbc8084be4e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b6e34d0deeb1ea8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3afdcdc19e94a88:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8096f4c37615bd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(29efadf4ccc184b8)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f3b289e19b60fb4e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8dc511922e34191f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(a4bf7c380140de1a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f422ef5a488c4e34:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76df6f7a0f5b0c8d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4315342ac2fab72:
    kwargs:
      data: '{data(0215ace3ee85d03c)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f457b927cb0eec10:
    kwargs:
      data: '{data(5615b417f79ce5ac)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f4ae9910e1eaa546:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b7eb4a95744ac998)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4b123e9dc16cb6c:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7a894387f6ef1fd0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4c7b44b4d8688bb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(90ce0a12d430fd70)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0dfa76a0edc41b04)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f4e0474aaeb965f4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f5a31629a95e476a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3acdf3d9cb324a44)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f5f9883d6c4c3861:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(57c8ae47470e59bb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f608eda618bf25a4:
    kwargs:
      data: '{data(64599c0b19df3e9f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f60bd0231e907254:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e3b03ccc8a9697d4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f61b77a48faa00bd:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(faf4c6521c9c135e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f64fd14d24ed05e9:
    kwargs:
      data: '{data(94a7d2971ad21b5f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f65b615ac300f18e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(dea615c0c11db163)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(52ea94a9133c2b6f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6704a6b477328c5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(0e41363592d4b807)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(84ba9592a0de9acf)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6906922d2cecefa:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ce042da142e0cd11)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6f593402e75edb6:
    kwargs:
      data: '{data(1004d30aed2c7fdc)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f6f677e9a58b2562:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(384e1dce169d2dcb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(72e161be70161f19)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6fc5c93cf3dcaa5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a0976b270933445b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f6feb11edc4cec42:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(76b34934a66358b3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f7a3990ef402456e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4ea60769f8178c4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d12469529551a485)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f812d0148fd7a701:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(eb92a0737a866a4d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f819ac9be7e26dbe:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(13d8a7f6a0d7c15a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4c5c4d57da11df0a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f82d016a6d5e5287:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5d0a3a602c41a88b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(927ba5eecc59d2cb)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f8618cf5e46a3ca7:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c1c99e5c55447fa)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f87574bb6e6a8c90:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(22c4f9aab289660f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(78f809ff34075762)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f8bc80d0a88a97ee:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e257cc20ef178176)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(d08b012373dee912)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f914fc719da2100e:
    kwargs:
      data: '{data(3a1ea177219aad23)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f9592e2e42437228:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5a298a4795cf2ca4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(38254232d734c3d0)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  f95d36b4773e18f9:
    kwargs:
      data: '{data(6cf31fc934fb55af)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  f980694ccc0fadf5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c02d488c8c567b35)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa09fa8e02f6b638:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2c9cb812473226e3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa10379fd08c7bf2:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(fb115a9e4c0e84fc)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa2ed5bf20ea8cce:
    kwargs:
      data: '{data(fde257ef6740e93f)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fa3f85c92f149b7f:
    kwargs:
      data: '{data(ecdab4292321af05)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fa7b79d2e92b86b3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b20c34f6a6392388)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c14cf6694d9a0682)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fa7f720a49ecd5b8:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a497d7a653d6c7e0)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fae7c8e508436a1d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(9cb010dea67a259f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  faf4c6521c9c135e:
    kwargs:
      data: '{data(23b0fefe5bdfa9d2)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fb115a9e4c0e84fc:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(b8752f2207996d97)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb1551a6f8f09650:
    kwargs:
      data: '{data(9f6b6671bbeb0148)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fb28fad60dad3a2d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(33813f97313d16b6)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb2e2d6ea650109f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(ab1d0f4518896f87)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(c55a153ee585004f)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb53186951ec20a5:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3aecce85a44d6913)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb5700e85eca539e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aaad6ffce65f4afb)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(1fc5a6a568ccbfde)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb5a2fdf4402c273:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a418e89a0bc616a4)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(9f809d8c6b85c57a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb78f2f484ec9d84:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(3b6e34d0deeb1ea8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(4ea9ab3bf5ea8505)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb7ed8a25a707281:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(8577d021a88b1a61)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fb812c60e1025a4a:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(53d7428345dee062)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fbadcd0d6e36baf3:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f64fd14d24ed05e9)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(ae7104e10f95239c)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fbb11962de937db6:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e21b336cbdb75dd3)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(02a8da84631ec393)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fbe43256db0ea72d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(e4620510f1acfb02)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fc054a9521566f9d:
    kwargs:
      data: '{data(b958c0ae6ef09ce1)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fc172350c9d43d6f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(79cb787f2e3cc6ee)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fc5e126cf7de6e55:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(6955f5900f49cb2d)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fc6057da25ddb109:
    kwargs:
      data: '{data(d51c40b928882a37)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fce31597ee2c1105:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c8a51b04e5cc470e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fd04f5505372454d:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(f914fc719da2100e)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fd4baa92fbf4cb2f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c62604e5a46a3923)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fd648d93a699c841:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(2f1e944c8d81069b)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fd89feb456d25a1e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(a9b79f42cbec2820)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fdbf5dfbcffdb12f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(aabed94c4cd9ddc5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(0a421c5f4347d8e3)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fe2092b780591500:
    kwargs:
      data: '{data(425a9783767b0084)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
  fe2331fd4cbed91e:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(da015121df9e807a)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fe29b1655b3ad8a4:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(c608d16502a8a76f)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(3060da18e2ab664e)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fec10eec528a3e21:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(4ad1a5af7546cca8)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  fec3e4aff4ea8a7f:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(7f92b794921b9c58)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: assign
          time_utc: '{data(5b642f6f45b0877a)}'
      - - '{func(intake.readers.convert:GenericFunc)}'
        - []
        - func: '{func(cook_inlet_catalogs.utils:parse_dates_doy)}'
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ff2ebf2f4b609ceb:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(5c740091a13a3fb5)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: longitude_E
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - -1
          method_name: multiply
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ff4fd2ef9b048e10:
    kwargs:
      out_instances:
      - pandas:DataFrame
      - pandas:DataFrame
      - pandas:DataFrame
      steps:
      - - '{data(bd42489261ae92c1)}'
        - []
        - {}
      - - '{func(intake.readers.transform:Method)}'
        - []
        - method_name: time_utc
      - - '{func(intake.readers.transform:Method)}'
        - []
        - args:
          - '2400'
          - '2359'
          method_name: replace
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.convert:Pipeline
    user_parameters: {}
  ffd6ffb203bcf110:
    kwargs:
      data: '{data(2d39718f3f07b7e5)}'
      dtype:
        day_of_year: '{func(builtins:str)}'
        time_utc: '{func(builtins:str)}'
        year: '{func(builtins:str)}'
      names:
      - latitude_N
      - longitude_E
      - year
      - day_of_year
      - time_utc
      sep: \s+
      skiprows: 29
      usecols:
      - 0
      - 1
      - 2
      - 3
      - 4
    metadata: {}
    output_instance: pandas:DataFrame
    reader: intake.readers.readers:PandasCSV
    user_parameters: {}
metadata:
  featuretype: trajectory
  header_names: null
  included: true
  key_variables: []
  map:
    coastline: false
    geo: true
    height: 700
    kind: paths
    legend: false
    line_width: 5
    tiles: true
    title: drifters_ecofoci
    width: 600
    x: longitude
    xlabel: Longitude [W]
    y: latitude
    ylabel: Latitude [N]
  map_description: Drifters
  maplabels:
    fontscale: 1.5
    geo: true
    hover: false
    kind: labels
    text: station
    text_alpha: 0.5
    text_baseline: bottom
    text_color: black
    text_font_size: 10pt
    x: longitude
    y: latitude
  maptype: box
  maxLatitude: 81.763
  maxLongitude: -122.223
  maxTime: '2017-02-09T03:45:00.000000000'
  minLatitude: 42.51
  minLongitude: -206.627
  minTime: '1999-04-14T02:10:00.000000000'
  notes: ''
  overall_desc: Drifters (EcoFOCI)
  project_name: 'Drifters: Ecosystems & Fisheries-Oceanography Coordinated Investigations
    (EcoFOCI)'
  summary: "EcoFOCI Project.\n        \nAs described on the [main project website\
    \ for EcoFOCI](https://www.ecofoci.noaa.gov/):\n\n> We study the ecosystems of\
    \ the North Pacific Ocean, Bering Sea and U.S. Arctic to improve understanding\
    \ of ecosystem dynamics and we apply that understanding to the management of living\
    \ marine resources. EcoFOCI scientists integrate field, laboratory and modeling\
    \ studies to determine how varying biological and physical factors influence large\
    \ marine ecosystems within Alaskan waters.\n\n> EcoFOCI is a joint research program\
    \ between the Alaska Fisheries Science Center (NOAA/ NMFS/ AFSC) and the Pacific\
    \ Marine Environmental Laboratory (NOAA/ OAR/ PMEL).\n\nDrifter data are being\
    \ pulled from this webpage: [https://www.ecofoci.noaa.gov/drifters/efoci_drifterData.shtml](https://www.ecofoci.noaa.gov/drifters/efoci_drifterData.shtml)\
    \ which also has a plot available for each drifter dataset.\n\nSeveral years of\
    \ EcoFOCI drifter data are also available in a private Research Workspace project:\
    \ [https://researchworkspace.com/project/41531085/files](https://researchworkspace.com/project/41531085/files).\n"
  time: From 1986 to 2017 total but 2003-2006, 2012-2014 here
user_parameters: {}
version: 2
